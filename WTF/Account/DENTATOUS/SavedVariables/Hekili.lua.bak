
HekiliDB = {
["namespaces"] = {
["LibDualSpec-1.0"] = {
},
},
["profileKeys"] = {
["Shample - Draenor"] = "Default",
["Greedissgood - Draenor"] = "Default",
["Riseandshine - Draenor"] = "Default",
["Nex√πs - Draenor"] = "Default",
["Poper - Silvermoon"] = "Default",
["Hydrolic - Silvermoon"] = "Default",
["Bonebilly - Draenor"] = "Default",
},
["profiles"] = {
["Default"] = {
["displays"] = {
["Interrupts"] = {
["rel"] = "CENTER",
},
["Cooldowns"] = {
["rel"] = "CENTER",
},
["Primary"] = {
["rel"] = "CENTER",
},
["AOE"] = {
["rel"] = "CENTER",
["y"] = -170.0000152587891,
},
["Defensives"] = {
["rel"] = "CENTER",
},
},
["notifications"] = {
["y"] = -45.83343505859375,
["x"] = 406.6663513183594,
},
["runOnce"] = {
["removeOldThrottles_20241115"] = true,
["forceReloadClassDefaultOptions_20220306_262"] = true,
["forceReloadClassDefaultOptions_20220306_71"] = true,
["forceReloadClassDefaultOptions_20220306_257"] = true,
["forceReloadClassDefaultOptions_20220306_256"] = true,
["forceReloadClassDefaultOptions_20220306_265"] = true,
["forceReloadClassDefaultOptions_20220306_259"] = true,
["forceReloadAllDefaultPriorities_20220228"] = true,
["forceEnableAllClassesOnceDueToBug_20220225"] = true,
["forceReloadClassDefaultOptions_20220306_258"] = true,
["forceReloadClassDefaultOptions_20220306_266"] = true,
["forceReloadClassDefaultOptions_20220306_267"] = true,
["forceSpellFlashBrightness_20221030"] = true,
["forceReloadClassDefaultOptions_20220306_264"] = true,
["forceReloadClassDefaultOptions_20220306_260"] = true,
["forceReloadClassDefaultOptions_20220306_72"] = true,
["forceReloadClassDefaultOptions_20220306_261"] = true,
["fixHavocPriorityVersion_20240805"] = true,
["forceReloadClassDefaultOptions_20220306_263"] = true,
["forceReloadClassDefaultOptions_20220306_73"] = true,
["resetAberrantPackageDates_20190728_1"] = true,
},
["specs"] = {
[73] = {
["settings"] = {
["spell_block_amount"] = 25,
["shield_wall_amount"] = 20,
["rallying_cry_amount"] = 25,
["spell_block_health"] = 75,
["shockwave_interrupt"] = true,
["spell_reflection_filter"] = true,
["victory_rush_health"] = 75,
["stack_shield_block"] = false,
["stance_weaving"] = false,
["shield_wall_health"] = 75,
["last_stand_amount"] = 25,
["last_stand_health"] = 70,
["rallying_cry_health"] = 80,
["reserve_rage"] = 35,
},
},
[261] = {
["settings"] = {
["rupture_duration"] = 12,
["priority_rotation"] = false,
["vanish_charges_reserved"] = 0,
["solo_vanish"] = true,
},
},
[262] = {
["settings"] = {
["purge_icd"] = 12,
["hostile_dispel"] = false,
["stack_buffer"] = 1.1,
},
},
[263] = {
["settings"] = {
["pwave_targets"] = 0,
["pad_lava_lash"] = true,
["pad_windstrike"] = true,
["funnel_priority"] = false,
["purge_icd"] = 12,
["hostile_dispel"] = false,
["pwave_gcds"] = 4,
["filler_shock"] = true,
},
},
[264] = {
["settings"] = {
["second_shield"] = "earth_shield",
["healing_mode"] = false,
},
},
[265] = {
["settings"] = {
["default_pet"] = "summon_sayaad",
["manage_ds_ticks"] = false,
},
},
[71] = {
["settings"] = {
["shockwave_interrupt"] = true,
["spell_reflection_filter"] = true,
["heroic_charge"] = false,
},
},
[267] = {
["settings"] = {
["default_pet"] = "summon_sayaad",
["cataclysm_ttd"] = 11,
["cleave_apl"] = false,
["low_ttd_dot"] = 11,
},
},
[72] = {
["settings"] = {
["check_ww_range"] = false,
["charge_min_range"] = 10,
["spell_reflection_filter"] = true,
["shockwave_interrupt"] = true,
["t30_bloodthirst_crit"] = 95,
["heroic_charge"] = false,
},
},
[256] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[257] = {
["settings"] = {
["sw_death_protection"] = 50,
},
},
[258] = {
["settings"] = {
["pad_void_bolt"] = true,
["sw_death_protection"] = 50,
["pad_ascended_blast"] = true,
},
},
[259] = {
["settings"] = {
["vanish_charges_reserved"] = 0,
["cooldowns_ttd"] = 0,
["max_garrote_spread"] = 10,
["solo_vanish"] = true,
["fok_critical_cp_prediction"] = "predict",
["priority_rotation"] = false,
},
},
[260] = {
["settings"] = {
["vanish_charges_reserved"] = 0,
["solo_vanish"] = true,
["allow_shadowmeld"] = false,
["sinister_clash"] = -0.5,
["check_blade_rush_range"] = true,
},
},
},
["packs"] = {
["Shadow"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250412,
["author"] = "SimC",
["desc"] = "2025-04-12: SimC Sync\n2025-03-25: Fix precombat Vampiric Touch; disable Ingenious Mana Battery until item is actually implemented\n2025-03-24: Restore addon-specific mindflay/spike insanity buff checks, SimC Update\n2025-03-13: fix invalid references\n2025-03-10: SimC Update\n2025-03-03.1: Fix DP condition logic to match simc\n2025-03-03: Support priest.force_devour_matter\n2025-02-28: TWW Season 2",
["lists"] = {
["filler"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Consume empowered fillers",
["criteria"] = "( buff.mind_spike_insanity.up || buff.mind_flay_insanity.up )",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["caption"] = "|T1386547:0|t",
["description"] = "Cast Vampiric Touch to proc Unfurling Darkness with Inner Quietus talented",
["criteria"] = "talent.unfurling_darkness.enabled & buff.unfurling_darkness_cd.remains < execute_time & talent.inner_quietus.enabled",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 || buff.deathspeaker.up & dot.devouring_plague.ticking",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.inescapable_torment.enabled & pet.fiend.active",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2&cooldown.void_bolt.remains>=gcd.max&gcd.remains<=0",
["interrupt_immediate"] = "1",
["criteria"] = "buff.voidform.up & cooldown.void_bolt.remains <= gcd.max * 1.65738",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "talent.empowered_surges.enabled & buff.surge_of_insanity.up || buff.voidform.up & talent.void_eruption.enabled",
["action"] = "devouring_plague",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["caption"] = "|T1386547:0|t",
["description"] = "Cast Vampiric Touch to proc Unfurling Darkness without Inner Quietus talented",
["criteria"] = "talent.unfurling_darkness.enabled & buff.unfurling_darkness_cd.remains < execute_time",
},
{
["enabled"] = true,
["criteria"] = "spell_targets > 1",
["action"] = "halo",
["description"] = "Save up to 20s if adds are coming soon.",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["criteria"] = "! variable.holding_crash & talent.void_eruption.enabled & talent.perfected_form.enabled",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["action"] = "mind_spike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay",
["cycle_targets"] = 1,
["interrupt_if"] = "ticks>=2",
["interrupt_immediate"] = "1",
["chain"] = "1",
["interrupt_global"] = "1",
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 20",
["action"] = "shadow_crash",
["description"] = "Use Shadow Crash while moving as a low-priority action when adds will not spawn in 20 seconds.",
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Death while moving as a low-priority action",
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["description"] = "Use Shadow Word: Pain while moving as a low-priority action",
["action"] = "shadow_word_pain",
["cycle_targets"] = 1,
},
},
["default"] = {
{
["action"] = "silence",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "false",
["var_name"] = "holding_crash",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.void_eruption.remains <= gcd.max * 3 & talent.void_eruption.enabled || cooldown.dark_ascension.up & talent.dark_ascension.enabled ) || talent.void_torrent.enabled & talent.psychic_link.enabled & cooldown.void_torrent.remains <= 4 & ! variable.holding_crash & ! buff.voidform.up",
["var_name"] = "pool_for_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "main",
},
},
["main"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_dot.vampiric_touch >= cycle_enemies || action.shadow_crash.in_flight & talent.whispering_shadows.enabled",
["var_name"] = "dots_up",
["criteria"] = "active_enemies < 3",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Are we pooling mind blasts? Currently only used for Voidweaver.",
["var_name"] = "pooling_mindblasts",
["value"] = "1",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.void_blast.enabled & ( cooldown.void_torrent.remains <? ( variable.holding_crash * raid_event.adds.in ) ) <= gcd.max * ( 2 + talent.mind_melt.enabled * 2 )",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["caption"] = "|T1386547:0|t",
["description"] = "Consume Unfurling Darkness in the Voidweaver opener",
["criteria"] = "buff.unfurling_darkness.up & talent.unfurling_darkness.enabled & talent.mind_melt.enabled & talent.void_blast.enabled & buff.mind_melt.stack < 2 & cooldown.mindbender.up & cooldown.dark_ascension.up & time <= 4",
},
{
["enabled"] = true,
["criteria"] = "talent.mind_melt.enabled & talent.void_blast.enabled & ( buff.mind_melt.stack < ( 1 * talent.distorted_reality.enabled + 1 - talent.unfurling_darkness.enabled - talent.minds_eye.enabled * 1 ) & talent.halo.enabled || ! talent.halo.enabled & buff.mind_melt.stack < 2 ) & cooldown.mindbender.up & cooldown.dark_ascension.up & time <= 4 & insanity <= 20 & ! set_bonus.tww2_4pc",
["action"] = "mind_spike",
["description"] = "High priority action to Mind Spike to get to enough Insanity during the opener with Voidweaver. Do not need to do this with the 4pc.",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "boss & fight_remains < 30 || target.time_to_die > 15 & ( ! variable.holding_crash || active_enemies > 2 )",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "( dot.shadow_word_pain.ticking & variable.dots_up || action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) & ( fight_remains < 30 || target.time_to_die > 15 ) & ( ! talent.dark_ascension.enabled || cooldown.dark_ascension.remains < gcd.max || fight_remains < 15 )",
["action"] = "mindbender",
["description"] = "Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension",
},
{
["enabled"] = true,
["action"] = "shadow_word_death",
["cycle_targets"] = 1,
["description"] = "High Priority Shadow Word: Death when you are forcing the bonus from Devour Matter",
["criteria"] = "priest.force_devour_matter & talent.devour_matter.enabled",
},
{
["enabled"] = true,
["action"] = "void_blast",
["cycle_targets"] = 1,
["description"] = "Blast more burst :wicked:",
["criteria"] = "( dot.devouring_plague.remains >= execute_time || buff.entropic_rift.remains <= gcd.max || action.void_torrent.channeling & talent.void_empowerment.enabled ) & ( insanity.deficit >= 16 || cooldown.mind_blast.full_recharge_time <= gcd.max || buff.entropic_rift.remains <= gcd.max ) & ( ! talent.mind_devourer.enabled || ! buff.mind_devourer.up || buff.entropic_rift.remains <= gcd.max )",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Do not let Voidform Expire if you can avoid it.",
["criteria"] = "( dot.devouring_plague.remains <= gcd.max || variable.dr_force_prio || ! talent.distorted_reality.enabled & variable.me_force_prio ) & buff.voidform.up & talent.perfected_form.enabled & buff.voidform.remains <= gcd.max & talent.void_eruption.enabled",
},
{
["enabled"] = true,
["criteria"] = "talent.void_eruption.enabled & buff.voidform.up & full_recharge_time <= gcd.max & ( ! talent.insidious_ire.enabled || dot.devouring_plague.remains >= execute_time ) & ( cooldown.void_bolt.remains / gcd.max - cooldown.void_bolt.remains % gcd.max ) * gcd.max <= 0.25 & ( cooldown.void_bolt.remains / gcd.max - cooldown.void_bolt.remains % gcd.max ) >= 0.01",
["action"] = "mind_blast",
["description"] = "Complicated do not overcap mindblast and use it to protect against void bolt cd desync",
},
{
["enabled"] = true,
["criteria"] = "insanity.deficit > 16 & cooldown.void_bolt.remains / gcd.max <= 0.1",
["action"] = "void_bolt",
["description"] = "Use Voidbolt on the enemy with the largest time to die. We do no care about dots because Voidbolt is only accessible inside voidform which guarantees maximum effect",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Do not overcap on insanity",
["criteria"] = "active_dot.devouring_plague <= 1 & dot.devouring_plague.remains <= gcd.max & ( ! talent.void_eruption.enabled || cooldown.void_eruption.remains >= gcd.max * 3 ) || insanity.deficit <= 16",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["description"] = "Cast Void Torrent at very high priority if Voidweaver",
["criteria"] = "( dot.devouring_plague.ticking || talent.void_eruption.enabled & cooldown.void_eruption.up ) & talent.entropic_rift.enabled & ! variable.holding_crash & ( cooldown.dark_ascension.remains >= 12 || ! talent.dark_ascension.enabled || ! talent.void_blast.enabled )",
},
{
["enabled"] = true,
["action"] = "void_bolt",
["cycle_targets"] = 1,
["description"] = "Use Void Bolt on the enemy with the largest time to die. Force a cooldown check here to make sure SimC doesn't wait too long (i.e. weird MF:I de-sync with GCD)",
["criteria"] = "cooldown.void_bolt.remains <= 0.1",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["caption"] = "|T1386547:0|t",
["description"] = "Cast Vampiric Touch to consume Unfurling Darkness",
["criteria"] = "buff.unfurling_darkness.up & active_dot.vampiric_touch <= 5",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Do not overcap MSI or MFI during Empowered Surges (Archon).",
["criteria"] = "( buff.mind_spike_insanity.stack > 2 & talent.mind_spike.enabled || buff.mind_flay_insanity.stack > 2 & ! talent.mind_spike.enabled ) & talent.empowered_surges.enabled & ! cooldown.void_eruption.up",
["list_name"] = "empowered_filler",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains <= duration + 4",
["action"] = "devouring_plague",
["description"] = "Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s",
},
{
["enabled"] = true,
["action"] = "devouring_plague",
["cycle_targets"] = 1,
["description"] = "Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 35 With Distorted Reality can maintain more than one at a time in multi-target.",
["criteria"] = "insanity.deficit <= 35 & talent.distorted_reality.enabled || buff.mind_devourer.up & cooldown.mind_blast.up & ( cooldown.void_eruption.remains >= 3 * gcd.max || ! talent.void_eruption.enabled ) & talent.mind_devourer.enabled || buff.entropic_rift.up",
},
{
["enabled"] = true,
["action"] = "void_torrent",
["cycle_targets"] = 1,
["description"] = "Use Void Torrent if it will get near full Mastery Value and you have Cthun and Void Eruption. Prune this action for Entropic Rift Builds.",
["criteria"] = "! variable.holding_crash & ! talent.entropic_rift.enabled & cooldown.mind_blast.full_recharge_time >= 2 & dot.devouring_plague.remains >= 2.5",
},
{
["enabled"] = true,
["action"] = "shadow_crash",
["cycle_targets"] = 1,
["description"] = "Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range",
["criteria"] = "! variable.holding_crash & dot.vampiric_touch.refreshable & ( ! talent.unfurling_darkness.enabled || spell_targets.shadow_crash > 1 )",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["caption"] = "|T1386547:0|t",
["description"] = "Cast Vampiric Touch to proc Unfurling Darkness with Inner Quietus talented",
["criteria"] = "buff.unfurling_darkness_cd.remains < execute_time & talent.unfurling_darkness.enabled & ! buff.dark_ascension.up & talent.inner_quietus.enabled & active_dot.vampiric_touch <= 5",
},
{
["enabled"] = true,
["action"] = "vampiric_touch",
["cycle_targets"] = 1,
["description"] = "Apply (5 or fewer) Vampiric Touch(es) if the target will live 12 or more seconds",
["criteria"] = "( dot.vampiric_touch.ticking || ! variable.dots_up ) & refreshable & target.time_to_die > 12 & ( dot.vampiric_touch.ticking || ! variable.dots_up ) & ( variable.max_vts > 0 || active_enemies = 1 ) & ( cooldown.shadow_crash.remains >= dot.vampiric_touch.remains || variable.holding_crash || ! talent.whispering_shadows.enabled ) & ( ! action.shadow_crash.in_flight || ! talent.whispering_shadows.enabled )",
},
{
["enabled"] = true,
["action"] = "mind_blast",
["cycle_targets"] = 1,
["description"] = "Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption",
["criteria"] = "( ! buff.mind_devourer.up || ! talent.mind_devourer.enabled || cooldown.void_eruption.up & talent.void_eruption.enabled ) & ! variable.pooling_mindblasts",
},
{
["enabled"] = true,
["criteria"] = "buff.voidform.up & talent.perfected_form.enabled & talent.void_eruption.enabled",
["action"] = "devouring_plague",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "filler",
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.shadowform.up",
["action"] = "shadowform",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.has_use_buff || trinket.t1.is.signet_of_the_priory ) & ( trinket.t1.cooldown.duration >= 20 )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.has_use_buff || trinket.t2.is.signet_of_the_priory ) & ( trinket.t2.cooldown.duration >= 20 )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "dr_force_prio",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "me_force_prio",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "max_vts",
["default"] = "12",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "is_vt_possible",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "pooling_mindblasts",
["default"] = "0",
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "boss & active_enemies <= 4 & ( fight_remains >= 120 || active_enemies <= 2 )",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.shadow_crash <= 8",
["action"] = "shadow_crash",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.whispering_shadows.enabled || ! action.shadow_crash.in_flight ) & ( ! talent.shadow_crash.enabled || spell_targets.shadow_crash > 8 || ! boss )",
["action"] = "vampiric_touch",
},
},
["aoe"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.vampiric_touch >? 12",
["var_name"] = "max_vts",
["default"] = "12",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "is_vt_possible",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "is_vt_possible",
["criteria"] = "target.time_to_die >= 18 & dot.vampiric_touch.refreshable",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "spell_targets.vampiric_touch >? 12",
["var_name"] = "max_vts",
["default"] = "12",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "is_vt_possible",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "is_vt_possible",
["criteria"] = "target.time_to_die >= 18 & dot.vampiric_touch.refreshable",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ( action.shadow_crash.in_flight & talent.whispering_shadows.enabled ) ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.max_vts - active_dot.vampiric_touch ) < 4",
["var_name"] = "holding_crash",
["criteria"] = "variable.holding_crash & talent.whispering_shadows.enabled & active_enemies > 1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( active_dot.vampiric_touch + 8 * ! variable.holding_crash ) >= variable.max_vts || ! variable.is_vt_possible",
["var_name"] = "manual_vts_applied",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "hyperthread_wristwraps",
["use_off_gcd"] = 1,
["criteria"] = "talent.void_blast.enabled & hyperthread_wristwraps.void_blast >= 2 & ! cooldown.mind_blast.up || ! talent.void_blast.enabled & ( ( hyperthread_wristwraps.void_bolt >= 1 || ! talent.void_eruption.enabled ) & hyperthread_wristwraps.void_torrent >= 1 )",
["action"] = "hyperthread_wristwraps",
},
{
["enabled"] = true,
["name"] = "aberrant_spellforge",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0 & buff.aberrant_spellforge.stack <= 4",
["action"] = "aberrant_spellforge",
},
{
["enabled"] = true,
["name"] = "neural_synapse_enhancer",
["use_off_gcd"] = 1,
["criteria"] = "( buff.power_surge.up || buff.entropic_rift.up || variable.trinket_1_buffs || variable.trinket_2_buffs ) & ( buff.voidform.up || cooldown.void_eruption.remains >= 40 || buff.dark_ascension.up )",
["action"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["name"] = "flarendos_pilot_light",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0 & ( buff.voidform.up || buff.power_infusion.remains >= 10 || buff.dark_ascension.up ) || boss & fight_remains < 20",
["action"] = "flarendos_pilot_light",
},
{
["enabled"] = true,
["name"] = "geargrinders_spare_keys",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > 0",
["action"] = "geargrinders_spare_keys",
},
{
["enabled"] = true,
["name"] = "spymasters_web",
["action"] = "spymasters_web",
["criteria"] = "( buff.power_infusion.remains >= 10 & buff.spymasters_report.stack >= 36 & fight_remains > 240 ) & ( buff.voidform.up || buff.dark_ascension.up || ! talent.dark_ascension.enabled & ! talent.void_eruption.enabled ) || ( ( buff.power_infusion.remains >= 10 & buff.bloodlust.up & buff.spymasters_report.stack >= 10 ) || buff.power_infusion.remains >= 10 & ( boss & fight_remains < 120 ) ) & ( buff.voidform.up || buff.dark_ascension.up || ! talent.dark_ascension.enabled & ! talent.void_eruption.enabled ) || ( boss & fight_remains <= 20 || buff.dark_ascension.up & boss & fight_remains <= 60 || buff.entropic_rift.up & talent.entropic_rift.enabled & boss & fight_remains <= 30 ) & ! buff.spymasters_web.up",
},
{
["enabled"] = true,
["name"] = "prized_gladiators_badge_of_ferocity",
["action"] = "prized_gladiators_badge_of_ferocity",
["criteria"] = "( buff.voidform.up || buff.power_infusion.remains >= 10 || buff.dark_ascension.up || ( talent.void_eruption.enabled & cooldown.void_eruption.remains > 10 ) || equipped.neural_synapse_enhancer & buff.entropic_rift.up ) || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "( buff.voidform.up || buff.power_infusion.remains >= 10 || buff.dark_ascension.up || equipped.neural_synapse_enhancer & buff.entropic_rift.up ) || boss & fight_remains < 20",
["action"] = "use_items",
},
},
["empowered_filler"] = {
{
["enabled"] = true,
["action"] = "mind_spike_insanity",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "mind_flay_insanity",
["cycle_targets"] = 1,
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "( buff.voidform.up & buff.power_infusion.up || buff.dark_ascension.up ) & ( fight_remains >= 320 || buff.bloodlust.up ) || boss & fight_remains <= 30",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 8",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 12",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 15",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up & ( buff.voidform.up || buff.dark_ascension.up ) || boss & fight_remains <= 15",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["criteria"] = "( buff.voidform.up || buff.dark_ascension.up & ( fight_remains <= 80 || fight_remains >= 140 ) ) & ( ! buff.power_infusion.up || set_bonus.tww2_4pc & buff.power_infusion.remains <= 15 )",
["action"] = "power_infusion",
["description"] = "Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=194249/voidform'>Voidform</a> or <a href='https://www.wowhead.com/spell=391109/dark-ascension'>Dark Ascension</a> is active. Chain directly after your own <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a>. Sync Power Infusion with Voidform or Dark Ascension",
},
{
["enabled"] = true,
["criteria"] = "talent.power_surge.enabled & ( pet.fiend.active & cooldown.fiend.remains >= 4 & talent.mindbender.enabled || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled || ! talent.dark_ascension.enabled ) & ( cooldown.mind_blast.charges = 0 || ! talent.void_eruption.enabled || cooldown.void_eruption.remains >= gcd.max * 4 || buff.mind_devourer.up & talent.mind_devourer.enabled )",
["action"] = "halo",
["description"] = "Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets",
},
{
["enabled"] = true,
["criteria"] = "( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled ) & ( cooldown.mind_blast.charges = 0 || time > 15 || buff.mind_devourer.up & talent.mind_devourer.enabled )",
["action"] = "void_eruption",
["description"] = "Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting",
},
{
["enabled"] = true,
["criteria"] = "( pet.fiend.active & cooldown.fiend.remains >= 4 || ! talent.mindbender.enabled & ! cooldown.fiend.up || active_enemies > 2 & ! talent.inescapable_torment.enabled ) & ( active_dot.devouring_plague >= 1 || insanity >= ( 15 + 5 * ! talent.minds_eye.enabled + 5 * talent.distorted_reality.enabled - pet.fiend.active * 6 ) )",
["action"] = "dark_ascension",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "health.pct <= 75",
["action"] = "desperate_prayer",
["description"] = "Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%",
},
},
},
["version"] = 20250412,
["warnings"] = "The import for 'trinkets' required some automated changes.\nLine 1: Converted 'hyperthread_wristwraps.void_blast.count' to 'hyperthread_wristwraps.void_blast' (1x).\nLine 1: Converted 'hyperthread_wristwraps.void_bolt.count' to 'hyperthread_wristwraps.void_bolt' (1x).\nLine 1: Converted 'hyperthread_wristwraps.void_torrent.count' to 'hyperthread_wristwraps.void_torrent' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 3: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_buff.mastery' (1x).\nLine 3: Converted 'trinket.1.has_buff.mastery' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_buff.versatility' (1x).\nLine 3: Converted 'trinket.1.has_buff.versatility' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_buff.haste' (1x).\nLine 3: Converted 'trinket.1.has_buff.haste' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_buff.crit' (1x).\nLine 3: Converted 'trinket.1.has_buff.crit' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.signet_of_the_priory' to 'trinket.t1.is.signet_of_the_priory' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 4: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_buff.mastery' (1x).\nLine 4: Converted 'trinket.2.has_buff.mastery' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_buff.versatility' (1x).\nLine 4: Converted 'trinket.2.has_buff.versatility' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_buff.haste' (1x).\nLine 4: Converted 'trinket.2.has_buff.haste' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_buff.crit' (1x).\nLine 4: Converted 'trinket.2.has_buff.crit' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.is.signet_of_the_priory' to 'trinket.t2.is.signet_of_the_priory' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nThe following auras were used in the action list but were not found in the addon database:\n - crit\n\nThe import for 'main' required some automated changes.\nLine 10: Converted operations in 'talent.void_eruption.enabled&buff.voidform.up&full_recharge_time<=gcd.max&(!talent.insidious_ire.enabled||dot.devouring_plague.remains>=execute_time)&(cooldown.void_bolt.remains%gcd.max-cooldown.void_bolt.remains%%gcd.max)*gcd.max<=0.25&(cooldown.void_bolt.remains%gcd.max-cooldown.void_bolt.remains%%gcd.max)>=0.01' to 'talent.void_eruption.enabled&buff.voidform.up&full_recharge_time<=gcd.max&(!talent.insidious_ire.enabled||dot.devouring_plague.remains>=execute_time)&(cooldown.void_bolt.remains/gcd.max-cooldown.void_bolt.remains%gcd.max)*gcd.max<=0.25&(cooldown.void_bolt.remains/gcd.max-cooldown.void_bolt.remains%gcd.max)>=0.01'.\nLine 11: Converted operations in 'insanity.deficit>16&cooldown.void_bolt.remains%gcd.max<=0.1' to 'insanity.deficit>16&cooldown.void_bolt.remains/gcd.max<=0.1'.\n\nImported 8 action lists.\n",
["spec"] = 258,
["profile"] = "## https://github.com/simulationcraft/simc/commits/thewarwithin/ActionPriorityLists/priest_shadow.simc\n## Up to date with SimC: April 12 2025 - 9b983fb\n\nactions.precombat+=/power_word_fortitude\nactions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/variable,name=trinket_1_buffs,value=(trinket.1.has_buff.intellect||trinket.1.has_buff.mastery||trinket.1.has_buff.versatility||trinket.1.has_buff.haste||trinket.1.has_buff.crit||trinket.1.is.signet_of_the_priory)&(trinket.1.cooldown.duration>=20)\nactions.precombat+=/variable,name=trinket_2_buffs,value=(trinket.2.has_buff.intellect||trinket.2.has_buff.mastery||trinket.2.has_buff.versatility||trinket.2.has_buff.haste||trinket.2.has_buff.crit||trinket.2.is.signet_of_the_priory)&(trinket.2.cooldown.duration>=20)\nactions.precombat+=/variable,name=dr_force_prio,default=0,op=reset\nactions.precombat+=/variable,name=me_force_prio,default=1,op=reset\nactions.precombat+=/variable,name=max_vts,default=12,op=reset\nactions.precombat+=/variable,name=is_vt_possible,default=0,op=reset\nactions.precombat+=/variable,name=pooling_mindblasts,default=0,op=reset\n## actions.precombat+=/use_item,name=ingenious_mana_battery\nactions.precombat+=/arcane_torrent\n## actions.precombat+=/use_item,name=aberrant_spellforge\nactions.precombat+=/halo,if=boss&active_enemies<=4&(fight_remains>=120||active_enemies<=2)\nactions.precombat+=/shadow_crash,if=spell_targets.shadow_crash<=8\nactions.precombat+=/vampiric_touch,if=(!talent.whispering_shadows||!action.shadow_crash.in_flight)&(!talent.shadow_crash.enabled||spell_targets.shadow_crash>8||!boss)\n\nactions+=/silence\nactions+=/variable,name=holding_crash,op=set,value=false\nactions+=/variable,name=pool_for_cds,op=set,value=(cooldown.void_eruption.remains<=gcd.max*3&talent.void_eruption||cooldown.dark_ascension.up&talent.dark_ascension)||talent.void_torrent&talent.psychic_link&cooldown.void_torrent.remains<=4&!variable.holding_crash&!buff.voidform.up\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>2\nactions+=/run_action_list,name=main\n\nactions.aoe+=/variable,name=max_vts,op=set,default=12,value=spell_targets.vampiric_touch>?12\nactions.aoe+=/variable,name=is_vt_possible,op=set,value=0,default=1\nactions.aoe+=/variable,name=is_vt_possible,op=set,value=1,if=target.time_to_die>=18&dot.vampiric_touch.refreshable\n\nactions.aoe+=/variable,name=max_vts,op=set,default=12,value=spell_targets.vampiric_touch>?12\nactions.aoe+=/variable,name=is_vt_possible,op=set,value=0,default=1\nactions.aoe+=/variable,name=is_vt_possible,op=set,value=1,if=target.time_to_die>=18&dot.vampiric_touch.refreshable\n## TODO: Revamp to fix undesired behavior with unstacked fights\nactions.aoe+=/variable,name=dots_up,op=set,value=(active_dot.vampiric_touch+8*(action.shadow_crash.in_flight&talent.whispering_shadows))>=variable.max_vts||!variable.is_vt_possible\nactions.aoe+=/variable,name=holding_crash,op=set,value=(variable.max_vts-active_dot.vampiric_touch)<4,if=variable.holding_crash&talent.whispering_shadows&active_enemies>1\nactions.aoe+=/variable,name=manual_vts_applied,op=set,value=(active_dot.vampiric_touch+8*!variable.holding_crash)>=variable.max_vts||!variable.is_vt_possible\n\n## TODO: Add holding condition for weird fight times to potion with execute\nactions.cds+=/potion,if=(buff.voidform.up&buff.power_infusion.up||buff.dark_ascension.up)&(fight_remains>=320||buff.bloodlust.up)||boss&fight_remains<=30\nactions.cds+=/fireblood,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=8\nactions.cds+=/berserking,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=12\nactions.cds+=/blood_fury,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=15\nactions.cds+=/ancestral_call,if=buff.power_infusion.up&(buff.voidform.up||buff.dark_ascension.up)||boss&fight_remains<=15\n# Use <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a> while <a href='https://www.wowhead.com/spell=194249/voidform'>Voidform</a> or <a href='https://www.wowhead.com/spell=391109/dark-ascension'>Dark Ascension</a> is active. Chain directly after your own <a href='https://www.wowhead.com/spell=10060/power-infusion'>Power Infusion</a>.\n## [Hekili] Nobody gonna do this.\n## actions.cds+=/cancel_buff,name=power_infusion,if=cooldown.power_infusion.up&cooldown.power_infusion.duration>0&set_bonus.tww2_4pc&buff.power_infusion.remains<=2\n## ## actions.cds+=/invoke_external_buff,name=power_infusion,if=(buff.voidform.up||buff.dark_ascension.up||set_bonus.tww2_4pc)&!buff.power_infusion.up\n## actions.cds+=/invoke_external_buff,name=bloodlust,if=buff.power_infusion.up&boss&fight_remains<120||boss&fight_remains<=40\n# Sync Power Infusion with Voidform or Dark Ascension\nactions.cds+=/power_infusion,if=(buff.voidform.up||buff.dark_ascension.up&(fight_remains<=80||fight_remains>=140))&(!buff.power_infusion.up||set_bonus.tww2_4pc&buff.power_infusion.remains<=15)\n# Make sure Mindbender is active before popping Dark Ascension unless you have insignificant talent points or too many targets\nactions.cds+=/halo,if=talent.power_surge&(pet.fiend.active&cooldown.fiend.remains>=4&talent.mindbender||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment||!talent.dark_ascension)&(cooldown.mind_blast.charges=0||!talent.void_eruption||cooldown.void_eruption.remains>=gcd.max*4||buff.mind_devourer.up&talent.mind_devourer)\n# Make sure Mindbender is active before popping Void Eruption and dump charges of Mind Blast before casting\nactions.cds+=/void_eruption,if=(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment)&(cooldown.mind_blast.charges=0||time>15||buff.mind_devourer.up&talent.mind_devourer)\nactions.cds+=/dark_ascension,if=(pet.fiend.active&cooldown.fiend.remains>=4||!talent.mindbender&!cooldown.fiend.up||active_enemies>2&!talent.inescapable_torment)&(active_dot.devouring_plague>=1||insanity>=(15+5*!talent.minds_eye+5*talent.distorted_reality-pet.fiend.active*6))\nactions.cds+=/call_action_list,name=trinkets\n# Use Desperate Prayer to heal up should Shadow Word: Death or other damage bring you below 75%\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\nactions.empowered_filler+=/mind_spike_insanity,cycle_targets=1\nactions.empowered_filler+=/mind_flay_insanity,cycle_targets=1\n\n### Healing spell action list for proccing Twist of Fate\n## actions.filler+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n## Use PWS with CR talented to trigger TOF if there are no better alternatives available to do this as we still get insanity for a PWS cast.\n## actions.filler+=/power_word_shield,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&talent.crystalline_reflection\n# Consume empowered fillers\nactions.filler+=/call_action_list,name=empowered_filler,if=(buff.mind_spike_insanity.up||buff.mind_flay_insanity.up)\n# [1386547] :: Cast Vampiric Touch to proc Unfurling Darkness with Inner Quietus talented\nactions.filler+=/vampiric_touch,cycle_targets=1,if=talent.unfurling_darkness&buff.unfurling_darkness_cd.remains<execute_time&talent.inner_quietus\nactions.filler+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20||buff.deathspeaker.up&dot.devouring_plague.ticking\nactions.filler+=/shadow_word_death,cycle_targets=1,if=talent.inescapable_torment&pet.fiend.active\n## Its literally a random number over 1.5 but less than 2\nactions.filler+=/mind_flay,cycle_targets=1,if=buff.voidform.up&cooldown.void_bolt.remains<=gcd.max*1.65738,interrupt_immediate=1,interrupt_if=ticks>=2&cooldown.void_bolt.remains>=gcd.max&gcd.remains<=0,interrupt_global=1\nactions.filler+=/devouring_plague,if=talent.empowered_surges&buff.surge_of_insanity.up||buff.voidform.up&talent.void_eruption\n# [1386547] :: Cast Vampiric Touch to proc Unfurling Darkness without Inner Quietus talented\nactions.filler+=/vampiric_touch,cycle_targets=1,if=talent.unfurling_darkness&buff.unfurling_darkness_cd.remains<execute_time\n# Save up to 20s if adds are coming soon.\nactions.filler+=/halo,if=spell_targets>1\n## Using a heal with no damage kickbacks for TOF is damage neutral, so we will do it.\n## actions.filler+=/power_word_life,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up\nactions.filler+=/call_action_list,name=empowered_filler\n## actions.filler+=/call_action_list,name=heal_for_tof,if=equipped.rashoks_molten_heart&(active_allies-(10-buff.molten_radiance.value))>=10&buff.molten_radiance.up,line_cd=5\nactions.filler+=/shadow_crash,if=!variable.holding_crash&talent.void_eruption&talent.perfected_form\nactions.filler+=/mind_spike,cycle_targets=1\nactions.filler+=/mind_flay,cycle_targets=1,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2,interrupt_global=1\nactions.filler+=/divine_star\n# Use Shadow Crash while moving as a low-priority action when adds will not spawn in 20 seconds.\nactions.filler+=/shadow_crash,if=raid_event.adds.in>20\n## [Syrif] - No need to duplicate consecutive entries\n## Use Shadow Word: Death while moving as a low-priority action in execute\n## actions.filler+=/shadow_word_death,cycle_targets=1,if=target.health.pct<20\n# Use Shadow Word: Death while moving as a low-priority action\nactions.filler+=/shadow_word_death,cycle_targets=1\n# Use Shadow Word: Pain while moving as a low-priority action\nactions.filler+=/shadow_word_pain,cycle_targets=1\n\n## Use Halo to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\n## actions.heal_for_tof+=/halo\n## Use Divine Star to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\n## actions.heal_for_tof+=/divine_star\n## Use Holy Nova when Rhapsody is fully stacked to acquire Twist of Fate if an ally can be healed for it and it is not currently up.\n## actions.heal_for_tof+=/holy_nova,if=buff.rhapsody.stack=20&talent.rhapsody\n\nactions.main+=/variable,name=dots_up,op=set,value=active_dot.vampiric_touch>=cycle_enemies||action.shadow_crash.in_flight&talent.whispering_shadows,if=active_enemies<3\n# Are we pooling mind blasts? Currently only used for Voidweaver.\nactions.main+=/variable,name=pooling_mindblasts,op=setif,value=1,value_else=0,if=talent.void_blast&(cooldown.void_torrent.remains<?(variable.holding_crash*raid_event.adds.in))<=gcd.max*(2+talent.mind_melt*2)\n# [1386547] :: Consume Unfurling Darkness in the Voidweaver opener\nactions.main+=/vampiric_touch,cycle_targets=1,if=buff.unfurling_darkness.up&talent.unfurling_darkness&talent.mind_melt&talent.void_blast&buff.mind_melt.stack<2&cooldown.mindbender.up&cooldown.dark_ascension.up&time<=4\n# High priority action to Mind Spike to get to enough Insanity during the opener with Voidweaver. Do not need to do this with the 4pc.\nactions.main+=/mind_spike,if=talent.mind_melt&talent.void_blast&(buff.mind_melt.stack<(1*talent.distorted_reality+1-talent.unfurling_darkness-talent.minds_eye*1)&talent.halo||!talent.halo&buff.mind_melt.stack<2)&cooldown.mindbender.up&cooldown.dark_ascension.up&time<=4&insanity<=20&!set_bonus.tww2_4pc\nactions.main+=/call_action_list,name=cds,if=boss&fight_remains<30||target.time_to_die>15&(!variable.holding_crash||active_enemies>2)\n# Use Shadowfiend and Mindbender on cooldown as long as Vampiric Touch and Shadow Word: Pain are active and sync with Dark Ascension\nactions.main+=/mindbender,if=(dot.shadow_word_pain.ticking&variable.dots_up||action.shadow_crash.in_flight&talent.whispering_shadows)&(fight_remains<30||target.time_to_die>15)&(!talent.dark_ascension||cooldown.dark_ascension.remains<gcd.max||fight_remains<15)\n# High Priority Shadow Word: Death when you are forcing the bonus from Devour Matter\nactions.main+=/shadow_word_death,cycle_targets=1,if=priest.force_devour_matter&talent.devour_matter\n# Blast more burst :wicked:\nactions.main+=/void_blast,cycle_targets=1,if=(dot.devouring_plague.remains>=execute_time||buff.entropic_rift.remains<=gcd.max||action.void_torrent.channeling&talent.void_empowerment)&(insanity.deficit>=16||cooldown.mind_blast.full_recharge_time<=gcd.max||buff.entropic_rift.remains<=gcd.max)&(!talent.mind_devourer||!buff.mind_devourer.up||buff.entropic_rift.remains<=gcd.max)\n# Do not let Voidform Expire if you can avoid it.\nactions.main+=/devouring_plague,cycle_targets=1,if=(dot.devouring_plague.remains<=gcd.max||variable.dr_force_prio||!talent.distorted_reality&variable.me_force_prio)&buff.voidform.up&talent.perfected_form&buff.voidform.remains<=gcd.max&talent.void_eruption\n## actions.main+=/wait,sec=cooldown.mind_blast.recharge_time,if=cooldown.mind_blast.recharge_time<buff.entropic_rift.remains&buff.entropic_rift.up&buff.entropic_rift.remains<gcd.max&cooldown.mind_blast.charges<1\n# Complicated do not overcap mindblast and use it to protect against void bolt cd desync\nactions.main+=/mind_blast,if=talent.void_eruption&buff.voidform.up&full_recharge_time<=gcd.max&(!talent.insidious_ire||dot.devouring_plague.remains>=execute_time)&(cooldown.void_bolt.remains%gcd.max-cooldown.void_bolt.remains%%gcd.max)*gcd.max<=0.25&(cooldown.void_bolt.remains%gcd.max-cooldown.void_bolt.remains%%gcd.max)>=0.01\n# Use Voidbolt on the enemy with the largest time to die. We do no care about dots because Voidbolt is only accessible inside voidform which guarantees maximum effect\nactions.main+=/void_bolt,if=insanity.deficit>16&cooldown.void_bolt.remains%gcd.max<=0.1\n# Do not overcap on insanity\nactions.main+=/devouring_plague,cycle_targets=1,if=active_dot.devouring_plague<=1&dot.devouring_plague.remains<=gcd.max&(!talent.void_eruption||cooldown.void_eruption.remains>=gcd.max*3)||insanity.deficit<=16\n# Cast Void Torrent at very high priority if Voidweaver\nactions.main+=/void_torrent,cycle_targets=1,if=(dot.devouring_plague.ticking||talent.void_eruption&cooldown.void_eruption.up)&talent.entropic_rift&!variable.holding_crash&(cooldown.dark_ascension.remains>=12||!talent.dark_ascension||!talent.void_blast)\n# Use Void Bolt on the enemy with the largest time to die. Force a cooldown check here to make sure SimC doesn't wait too long (i.e. weird MF:I de-sync with GCD)\nactions.main+=/void_bolt,cycle_targets=1,if=cooldown.void_bolt.remains<=0.1\n# [1386547] :: Cast Vampiric Touch to consume Unfurling Darkness\nactions.main+=/vampiric_touch,cycle_targets=1,if=buff.unfurling_darkness.up&active_dot.vampiric_touch<=5\n# Do not overcap MSI or MFI during Empowered Surges (Archon).\nactions.main+=/call_action_list,name=empowered_filler,if=(buff.mind_spike_insanity.stack>2&talent.mind_spike||buff.mind_flay_insanity.stack>2&!talent.mind_spike)&talent.empowered_surges&!cooldown.void_eruption.up\n## Hyper cringe optimizations that fish for TOF using heals. Set priest.twist_of_fate_heal_rppm=<rppm> to make this be used.\n## actions.main+=/call_action_list,name=heal_for_tof,if=!buff.twist_of_fate.up&buff.twist_of_fate_can_trigger_on_ally_heal.up&(talent.rhapsody||talent.divine_star||talent.halo)\n# Spend your Insanity on Devouring Plague at will if the fight will end in less than 10s\nactions.main+=/devouring_plague,if=boss&fight_remains<=duration+4\n# Use Devouring Plague to maximize uptime. Short circuit if you are capping on Insanity within 35 With Distorted Reality can maintain more than one at a time in multi-target.\nactions.main+=/devouring_plague,cycle_targets=1,if=insanity.deficit<=35&talent.distorted_reality||buff.mind_devourer.up&cooldown.mind_blast.up&(cooldown.void_eruption.remains>=3*gcd.max||!talent.void_eruption)&talent.mind_devourer||buff.entropic_rift.up\n# Use Void Torrent if it will get near full Mastery Value and you have Cthun and Void Eruption. Prune this action for Entropic Rift Builds.\nactions.main+=/void_torrent,cycle_targets=1,if=!variable.holding_crash&!talent.entropic_rift&cooldown.mind_blast.full_recharge_time>=2&dot.devouring_plague.remains>=2.5\n# Use Shadow Crash as long as you are not holding for adds and Vampiric Touch is within pandemic range\nactions.main+=/shadow_crash,cycle_targets=1,if=!variable.holding_crash&dot.vampiric_touch.refreshable&(!talent.unfurling_darkness||spell_targets.shadow_crash>1)\n# [1386547] :: Cast Vampiric Touch to proc Unfurling Darkness with Inner Quietus talented\nactions.main+=/vampiric_touch,cycle_targets=1,if=buff.unfurling_darkness_cd.remains<execute_time&talent.unfurling_darkness&!buff.dark_ascension.up&talent.inner_quietus&active_dot.vampiric_touch<=5\n# Apply (5 or fewer) Vampiric Touch(es) if the target will live 12 or more seconds\nactions.main+=/vampiric_touch,cycle_targets=1,if=(dot.vampiric_touch.ticking||!variable.dots_up)&refreshable&target.time_to_die>12&(dot.vampiric_touch.ticking||!variable.dots_up)&(variable.max_vts>0||active_enemies=1)&(cooldown.shadow_crash.remains>=dot.vampiric_touch.remains||variable.holding_crash||!talent.whispering_shadows)&(!action.shadow_crash.in_flight||!talent.whispering_shadows)\n# Use all charges of Mind Blast if Vampiric Touch and Shadow Word: Pain are active and Mind Devourer is not active or you are prepping Void Eruption\nactions.main+=/mind_blast,cycle_targets=1,if=(!buff.mind_devourer.up||!talent.mind_devourer||cooldown.void_eruption.up&talent.void_eruption)&!variable.pooling_mindblasts\nactions.main+=/devouring_plague,cycle_targets=1,if=buff.voidform.up&talent.perfected_form&talent.void_eruption\nactions.main+=/call_action_list,name=filler\n\nactions.trinkets+=/use_item,use_off_gcd=1,name=hyperthread_wristwraps,if=talent.void_blast&hyperthread_wristwraps.void_blast.count>=2&!cooldown.mind_blast.up||!talent.void_blast&((hyperthread_wristwraps.void_bolt.count>=1||!talent.void_eruption)&hyperthread_wristwraps.void_torrent.count>=1)\nactions.trinkets+=/use_item,use_off_gcd=1,name=aberrant_spellforge,if=gcd.remains>0&buff.aberrant_spellforge.stack<=4\nactions.trinkets+=/use_item,use_off_gcd=1,name=neural_synapse_enhancer,if=(buff.power_surge.up||buff.entropic_rift.up||variable.trinket_1_buffs||variable.trinket_2_buffs)&(buff.voidform.up||cooldown.void_eruption.remains>=40||buff.dark_ascension.up)\nactions.trinkets+=/use_item,use_off_gcd=1,name=flarendos_pilot_light,if=gcd.remains>0&(buff.voidform.up||buff.power_infusion.remains>=10||buff.dark_ascension.up)||boss&fight_remains<20\nactions.trinkets+=/use_item,use_off_gcd=1,name=geargrinders_spare_keys,if=gcd.remains>0\nactions.trinkets+=/use_item,name=spymasters_web,if=(buff.power_infusion.remains>=10&buff.spymasters_report.stack>=36&fight_remains>240)&(buff.voidform.up||buff.dark_ascension.up||!talent.dark_ascension&!talent.void_eruption)||((buff.power_infusion.remains>=10&buff.bloodlust.up&buff.spymasters_report.stack>=10)||buff.power_infusion.remains>=10&(boss&fight_remains<120))&(buff.voidform.up||buff.dark_ascension.up||!talent.dark_ascension&!talent.void_eruption)||(boss&fight_remains<=20||buff.dark_ascension.up&boss&fight_remains<=60||buff.entropic_rift.up&talent.entropic_rift&boss&fight_remains<=30)&!buff.spymasters_web.up\nactions.trinkets+=/use_item,name=prized_gladiators_badge_of_ferocity,if=(buff.voidform.up||buff.power_infusion.remains>=10||buff.dark_ascension.up||(talent.void_eruption&cooldown.void_eruption.remains>10)||equipped.neural_synapse_enhancer&buff.entropic_rift.up)||boss&fight_remains<20\nactions.trinkets+=/use_items,if=(buff.voidform.up||buff.power_infusion.remains>=10||buff.dark_ascension.up||equipped.neural_synapse_enhancer&buff.entropic_rift.up)||boss&fight_remains<20",
},
["Elemental"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250422,
["spec"] = 262,
["desc"] = "2025-03-27, 04-22: Revise Ascendance/trinket sync logic\n\n2025-03-24: More Ascendance fixes; pre-sync with incoming SimC changes\n\n2025-03-14: Remove SimC specific timings for Ascendance\n\n2025-03-10: SimC update\n\n2025-02-28: Resync with SimC",
["profile"] = "## Updated 2025-04-22\n## Non-SimC edits to resolve Ascendance/trinket sync logic.\n\n# Ensure weapon enchant is applied if you've selected Improved Flametongue Weapon.\nactions.precombat+=/flametongue_weapon,if=talent.improved_flametongue_weapon.enabled\nactions.precombat+=/skyfury\nactions.precombat+=/lightning_shield\nactions.precombat+=/thunderstrike_ward\nactions.precombat+=/earth_shield,if=!buff.earth_shield.up&talent.elemental_orbit\nactions.precombat+=/stormkeeper\nactions.precombat+=/variable,name=mael_cap,value=100+50*talent.swelling_maelstrom.rank+25*talent.primordial_capacity.rank\nactions.precombat+=/variable,name=special_trinket1,value=(trinket.1.is.house_of_cards||trinket.1.is.funhouse_lens)&!(trinket.2.has_use_buff||trinket.2.is.funhouse_lens)&talent.first_ascendant\nactions.precombat+=/variable,name=special_trinket2,value=(trinket.2.is.house_of_cards||trinket.2.is.funhouse_lens)&!(trinket.1.has_use_buff||trinket.1.is.funhouse_lens)&talent.first_ascendant\n\n# Interrupt of casts.\nactions+=/wind_shear\n# Enable more movement.\nactions+=/spiritwalkers_grace,moving=1\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\n# Spymaster's Web\nactions+=/use_item,slot=trinket1,if=trinket.1.is.spymasters_web&((fight_remains>180&buff.spymasters_report.stack>25||buff.spymasters_report.stack>35||fight_remains<80)&cooldown.ascendance.ready&(buff.fury_of_storms.up||!talent.fury_of_the_storms)&(cooldown.primordial_wave.remains>25||!talent.primordial_wave||spell_targets.chain_lightning>=2)||boss&fight_remains<21)\nactions+=/use_item,slot=trinket2,if=trinket.2.is.spymasters_web&((fight_remains>180&buff.spymasters_report.stack>25||buff.spymasters_report.stack>35||fight_remains<80)&cooldown.ascendance.ready&(buff.fury_of_storms.up||!talent.fury_of_the_storms)&(cooldown.primordial_wave.remains>25||!talent.primordial_wave||spell_targets.chain_lightning>=2)||boss&fight_remains<21)\n# Neural Synapse Enhancer\nactions+=/use_item,name=neural_synapse_enhancer,use_off_gcd=1,if=buff.ascendance.remains>12||cooldown.ascendance.remains>10\n# House of Cards + 2 minute Ascendance\nactions+=/use_item,name=house_of_cards,use_off_gcd=1,if=(variable.special_trinket1||variable.special_trinket2)&buff.ascendance.remains>12||fight_remains<21\n# Funhouse Lens + 2 minute Ascendance\nactions+=/use_item,name=funhouse_lens,use_off_gcd=1,if=(variable.special_trinket1||variable.special_trinket2)&buff.ascendance.remains>12||fight_remains<21\n# Normal trinkets\nactions+=/use_item,slot=trinket1,use_off_gcd=1,if=!trinket.1.is.spymasters_web&!variable.special_trinket1&((buff.fury_of_storms.up||!talent.fury_of_the_storms||cooldown.stormkeeper.remains>10)&(cooldown.primordial_wave.remains>25||!talent.primordial_wave||spell_targets.chain_lightning>=2)&cooldown.ascendance.remains>15||fight_remains<21||buff.ascendance.remains>12)\nactions+=/use_item,slot=trinket2,use_off_gcd=1,if=!trinket.2.is.spymasters_web&!variable.special_trinket2&((buff.fury_of_storms.up||!talent.fury_of_the_storms||cooldown.stormkeeper.remains>10)&(cooldown.primordial_wave.remains>25||!talent.primordial_wave||spell_targets.chain_lightning>=2)&cooldown.ascendance.remains>15||fight_remains<21||buff.ascendance.remains>12)\n# Normal weapons\nactions+=/use_item,slot=main_hand,use_off_gcd=1,if=(buff.fury_of_storms.up||!talent.fury_of_the_storms||cooldown.stormkeeper.remains>10)&(cooldown.primordial_wave.remains>25||!talent.primordial_wave)&cooldown.ascendance.remains>15||buff.ascendance.remains>12\nactions+=/use_item,slot=trinket1,use_off_gcd=1,if=!(trinket.1.has_use_buff||trinket.1.is.funhouse_lens)&(!(trinket.2.has_use_buff||trinket.2.is.funhouse_lens||buff.spymasters_report.stack>25||equipped.neural_synapse_enhancer||equipped.best_in_slots)||cooldown.ascendance.remains>20||(trinket.2.cooldown.remains>20&cooldown.neural_synapse_enhancer.remains>20&cooldown.best_in_slots.remains>20))\nactions+=/use_item,slot=trinket2,use_off_gcd=1,if=!(trinket.2.has_use_buff||trinket.2.is.funhouse_lens)&(!(trinket.1.has_use_buff||trinket.1.is.funhouse_lens||buff.spymasters_report.stack>25||equipped.neural_synapse_enhancer||equipped.best_in_slots)||cooldown.ascendance.remains>20||(trinket.1.cooldown.remains>20&cooldown.neural_synapse_enhancer.remains>20&cooldown.best_in_slots.remains>20))\nactions+=/lightning_shield,if=buff.lightning_shield.down\nactions+=/natures_swiftness\n### Use Power Infusion on Cooldown.\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.ascendance.up||cooldown.ascendance.remains>30\nactions+=/potion,if=buff.bloodlust.up||buff.spymasters_web.up||buff.ascendance.remains>12||fight_remains<31&boss\n# [Hekili] Ascendance/trinket sync logic; revised to recover when a trinket is used *before* Ascendance.\nactions+=/variable,name=ascendance_trinket,value=buff.spymasters_web.up||(trinket.1.has_use_buff&!trinket.1.is.spymasters_web||trinket.1.is.funhouse_lens)&(trinket.1.ready_cooldown||trinket.1.cooldown.remains>20)||(trinket.2.has_use_buff&!trinket.2.is.spymasters_web||trinket.2.is.funhouse_lens)&(trinket.2.ready_cooldown||trinket.2.cooldown.remains>20)||equipped.neural_synapse_enhancer&(cooldown.neural_synapse_enhancer.remains=0||cooldown.neural_synapse_enhancer.remains>20)||equipped.best_in_slots&(cooldown.best_in_slots.remains=0||cooldown.best_in_slots.remains>20)||!trinket.1.has_use_buff&!trinket.2.has_use_buff\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.chain_lightning>1\nactions+=/run_action_list,name=single_target\n\nactions.aoe+=/fire_elemental\nactions.aoe+=/storm_elemental,if=!buff.storm_elemental.up||!talent.echo_of_the_elementals\nactions.aoe+=/stormkeeper\n# Spread Flame shocks for Pwave.\nactions.aoe+=/liquid_magma_totem,if=(cooldown.primordial_wave.remains<5*gcd||!talent.primordial_wave)&(active_dot.flame_shock<=active_enemies-3||active_dot.flame_shock<(active_enemies>?3))&cooldown.ascendance.remains>10\nactions.aoe+=/flame_shock,cycle_targets=1,if=cooldown.primordial_wave.remains<gcd&!dot.flame_shock.ticking&(talent.primordial_wave||spell_targets.chain_lightning<=3)&cooldown.ascendance.remains>10\nactions.aoe+=/primordial_wave,if=active_dot.flame_shock=active_enemies>?6||cooldown.liquid_magma_totem.remains>15||!talent.liquid_magma_totem\nactions.aoe+=/ancestral_swiftness\n# [Hekili] Revised trinket sync to recover when trinket is used before Ascendance.\nactions.aoe+=/ascendance,if=(talent.first_ascendant||fight_remains>200||fight_remains<80||variable.ascendance_trinket)&(buff.fury_of_storms.up||cooldown.stormkeeper.remains>12||!talent.fury_of_the_storms)\n# Surge of Power is strong and should be used. ??\nactions.aoe+=/tempest,cycle_targets=1,if=buff.arc_discharge.stack<2&(buff.surge_of_power.up||!talent.surge_of_power)\nactions.aoe+=/lightning_bolt,if=buff.stormkeeper.up&buff.surge_of_power.up&spell_targets.chain_lightning=2\nactions.aoe+=/chain_lightning,if=active_enemies>=6&buff.surge_of_power.up\nactions.aoe+=/chain_lightning,if=buff.storm_frenzy.stack=2&!talent.surge_of_power&maelstrom<variable.mael_cap-(15+buff.stormkeeper.up*spell_targets.chain_lightning*spell_targets.chain_lightning)\n# Use Lava Surge procs to consume fire part of fusion if you can also buff Earthquake with it.\nactions.aoe+=/lava_burst,cycle_targets=1,if=cooldown_react&buff.lava_surge.up&buff.fusion_of_elements_fire.up&!buff.master_of_the_elements.up&(maelstrom>52-5*talent.eye_of_the_storm&(buff.echoes_of_great_sundering_es.up||!talent.echoes_of_great_sundering))\n# Spend if you are close to cap, Master of the Elements buff is up or Ascendance is about to expire.\nactions.aoe+=/earthquake,if=(maelstrom>variable.mael_cap-10*(spell_targets.chain_lightning+1)||buff.master_of_the_elements.up||buff.ascendance.up&buff.ascendance.remains<3||boss&fight_remains<5)&(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up||!talent.echoes_of_great_sundering&(!talent.elemental_blast||active_enemies>1+talent.tempest))\nactions.aoe+=/elemental_blast,cycle_targets=1,if=(maelstrom>variable.mael_cap-10*(spell_targets.chain_lightning+1)||buff.master_of_the_elements.up||buff.ascendance.up&buff.ascendance.remains<3||boss&fight_remains<5)&(active_enemies<=1+talent.tempest||talent.echoes_of_great_sundering&!buff.echoes_of_great_sundering_eb.up)\nactions.aoe+=/earth_shock,cycle_targets=1,if=(maelstrom>variable.mael_cap-10*(spell_targets.chain_lightning+1)||buff.master_of_the_elements.up||buff.ascendance.up&buff.ascendance.remains<3||boss&fight_remains<5)&talent.echoes_of_great_sundering&!buff.echoes_of_great_sundering_es.up\n# Spend to spread Lightning Rod if Tempest or Stormkeeper is up.\nactions.aoe+=/earthquake,if=talent.lightning_rod&lightning_rod<active_enemies&(buff.stormkeeper.up||buff.tempest.up||!talent.surge_of_power)&(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up||!talent.echoes_of_great_sundering&(!talent.elemental_blast||active_enemies>1+talent.tempest))\nactions.aoe+=/elemental_blast,cycle_targets=1,if=talent.lightning_rod&lightning_rod<active_enemies&(buff.stormkeeper.up||buff.tempest.up||!talent.surge_of_power)&(active_enemies<=1+talent.tempest||talent.echoes_of_great_sundering&!buff.echoes_of_great_sundering_eb.up)\nactions.aoe+=/earth_shock,cycle_targets=1,if=talent.lightning_rod&lightning_rod<active_enemies&(buff.stormkeeper.up||buff.tempest.up||!talent.surge_of_power)&talent.echoes_of_great_sundering&!buff.echoes_of_great_sundering_es.up\n# Use Icefury to proc Fusion of Elements.\nactions.aoe+=/icefury,if=talent.fusion_of_elements&!(buff.fusion_of_elements_nature.up||buff.fusion_of_elements_fire.up)&(active_enemies<=4||!talent.elemental_blast||!talent.echoes_of_great_sundering)\n# [2-3t] Use Lava Surge procs to buff <anything> with MotE on 2-3 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=cooldown_react&buff.lava_surge.up&!buff.master_of_the_elements.up&talent.master_of_the_elements&active_enemies<=3\n# [2-3t]{Farseer} Use all Lava bursts to buff spenders, SK_CL and Tempest with MotE on 2-3 targets if not talented into Lightning Rod.\nactions.aoe+=/lava_burst,cycle_targets=1,if=!buff.master_of_the_elements.up&talent.master_of_the_elements&(buff.stormkeeper.up||buff.tempest.up||maelstrom>82-10*talent.eye_of_the_storm||maelstrom>52-5*talent.eye_of_the_storm&(buff.echoes_of_great_sundering_eb.up||!talent.elemental_blast))&active_enemies<=3&!talent.lightning_rod&talent.call_of_the_ancestors\n# [2t] Use all Lava bursts to buff <anything> with MotE on 2 targets.\nactions.aoe+=/lava_burst,cycle_targets=1,if=!buff.master_of_the_elements.up&active_enemies=2\nactions.aoe+=/flame_shock,cycle_targets=1,if=active_dot.flame_shock=0&buff.fusion_of_elements_fire.up&(!talent.elemental_blast||!talent.echoes_of_great_sundering&active_enemies>1+talent.tempest)\n# Spend to buff SK_CL (on 6+) or Tempest with SoP.\nactions.aoe+=/earthquake,if=((buff.stormkeeper.up&spell_targets.chain_lightning>=6||buff.tempest.up)&talent.surge_of_power)&(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up||!talent.echoes_of_great_sundering&(!talent.elemental_blast||active_enemies>1+talent.tempest))\nactions.aoe+=/elemental_blast,cycle_targets=1,if=((buff.stormkeeper.up&active_enemies>=6||buff.tempest.up)&talent.surge_of_power)&(active_enemies<=1+talent.tempest||talent.echoes_of_great_sundering&!buff.echoes_of_great_sundering_eb.up)\nactions.aoe+=/earth_shock,cycle_targets=1,if=((buff.stormkeeper.up&active_enemies>=6||buff.tempest.up)&talent.surge_of_power)&talent.echoes_of_great_sundering&!buff.echoes_of_great_sundering_es.up\nactions.aoe+=/frost_shock,if=buff.icefury_dmg.up&!buff.ascendance.up&!buff.stormkeeper.up&talent.call_of_the_ancestors\nactions.aoe+=/chain_lightning\nactions.aoe+=/flame_shock,moving=1,if=refreshable\nactions.aoe+=/frost_shock,moving=1\n\nactions.single_target+=/fire_elemental\nactions.single_target+=/storm_elemental,if=!buff.storm_elemental.up||!talent.echo_of_the_elementals\n# Just use Stormkeeper.\nactions.single_target+=/stormkeeper,if=!talent.fury_of_the_storms||cooldown.primordial_wave.remains<gcd||!talent.primordial_wave\n# Apply Flame shock if it is not up.\nactions.single_target+=/liquid_magma_totem,if=!dot.flame_shock.ticking&!buff.surge_of_power.up&!buff.master_of_the_elements.up\nactions.single_target+=/flame_shock,if=!dot.flame_shock.ticking&!buff.surge_of_power.up&!buff.master_of_the_elements.up\n# Use Primordial Wave as much as possible.\nactions.single_target+=/primordial_wave\nactions.single_target+=/ancestral_swiftness\n# [Hekili] Revised trinket sync to recover when trinket is used before Ascendance.\nactions.single_target+=/ascendance,if=(talent.first_ascendant||variable.ascendance_trinket)&(buff.fury_of_storms.up||cooldown.stormkeeper.remains>12||!talent.fury_of_the_storms)&(cooldown.primordial_wave.remains>25||!talent.primordial_wave)\n# Surge of Power is strong and should be used.??\nactions.single_target+=/tempest,if=buff.surge_of_power.up\nactions.single_target+=/lightning_bolt,if=buff.surge_of_power.up\nactions.single_target+=/tempest,if=buff.storm_frenzy.stack=2&!talent.surge_of_power.enabled\n# Use LMT to apply Flame Shock.\nactions.single_target+=/liquid_magma_totem,if=dot.flame_shock.refreshable&!buff.master_of_the_elements.up\n# Maintain Flame shock if talented into Erupting Lava.\nactions.single_target+=/flame_shock,if=dot.flame_shock.refreshable&!buff.surge_of_power.up&!buff.master_of_the_elements.up&talent.erupting_lava\n# Spend if close to overcaping or MotE buff is up. Respect Echoes of Great Sundering.\nactions.single_target+=/earthquake,if=(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up)&(maelstrom>variable.mael_cap-15||buff.master_of_the_elements.up)\nactions.single_target+=/elemental_blast,if=maelstrom>variable.mael_cap-15||buff.master_of_the_elements.up\nactions.single_target+=/earth_shock,if=maelstrom>variable.mael_cap-15||buff.master_of_the_elements.up\n# Use Icefury to proc Fusion of Elements.\nactions.single_target+=/icefury,if=!(buff.fusion_of_elements_nature.up||buff.fusion_of_elements_fire.up)\n# Use Lava Burst to proc Master of the Elements.\nactions.single_target+=/lava_burst,cycle_targets=1,if=!buff.master_of_the_elements.up&(!talent.master_of_the_elements||buff.lava_surge.up||buff.tempest.up||buff.stormkeeper.up||cooldown.lava_burst.charges_fractional>1.8||maelstrom>82-10*talent.eye_of_the_storm||maelstrom>52-5*talent.eye_of_the_storm&(buff.echoes_of_great_sundering_eb.up||!talent.elemental_blast))\n# Spend to activate Surge of Power buff for Tempest or Stormkeeper.\nactions.single_target+=/earthquake,if=(buff.echoes_of_great_sundering_es.up||buff.echoes_of_great_sundering_eb.up)&(buff.tempest.up||buff.stormkeeper.up)&talent.surge_of_power&!talent.master_of_the_elements\nactions.single_target+=/elemental_blast,if=(buff.tempest.up||buff.stormkeeper.up)&talent.surge_of_power&!talent.master_of_the_elements\nactions.single_target+=/earth_shock,if=(buff.tempest.up||buff.stormkeeper.up)&talent.surge_of_power&!talent.master_of_the_elements\nactions.single_target+=/tempest\nactions.single_target+=/lightning_bolt,if=buff.storm_elemental.up&buff.wind_gust.stack<4\n# Use Icefury-empowered Frost Shocks outside of Ascendance.\nactions.single_target+=/frost_shock,if=buff.icefury_dmg.up&!buff.ascendance.up&!buff.stormkeeper.up&talent.call_of_the_ancestors\n# Filler spell. Always available. Always the bottom line.\nactions.single_target+=/lightning_bolt\nactions.single_target+=/flame_shock,moving=1,if=movement.distance>6||refreshable\n# Frost Shock is our movement filler.\nactions.single_target+=/frost_shock,moving=1",
["version"] = 20250422,
["warnings"] = "The import for 'default' required some automated changes.\nLine 7: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 8: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 12: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 13: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 15: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 15: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\nLine 15: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 15: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 15: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 16: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 16: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 16: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 16: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\nLine 16: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 16: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 20: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 20: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\nLine 20: Converted 'trinket.1.ready_cooldown' to 'trinket.t1.ready_cooldown' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 20: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 20: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 20: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 20: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 20: Converted 'trinket.2.ready_cooldown' to 'trinket.t2.ready_cooldown' (1x).\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 20: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 20: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 20: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 8: Converted 'trinket.1.is.house_of_cards' to 'trinket.t1.is.house_of_cards' (1x).\nLine 8: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 9: Converted 'trinket.2.is.house_of_cards' to 'trinket.t2.is.house_of_cards' (1x).\nLine 9: Converted 'trinket.2.is.funhouse_lens' to 'trinket.t2.is.funhouse_lens' (1x).\nLine 9: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.is.funhouse_lens' to 'trinket.t1.is.funhouse_lens' (1x).\n\nImported 4 action lists.\n",
["lists"] = {
["single_target"] = {
{
["action"] = "fire_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.storm_elemental.up || ! talent.echo_of_the_elementals.enabled",
["action"] = "storm_elemental",
},
{
["enabled"] = true,
["action"] = "stormkeeper",
["description"] = "Just use Stormkeeper.",
["criteria"] = "! talent.fury_of_the_storms.enabled || cooldown.primordial_wave.remains < gcd.max || ! talent.primordial_wave.enabled",
},
{
["enabled"] = true,
["action"] = "liquid_magma_totem",
["description"] = "Apply Flame shock if it is not up.",
["criteria"] = "! dot.flame_shock.ticking & ! buff.surge_of_power.up & ! buff.master_of_the_elements.up",
},
{
["enabled"] = true,
["criteria"] = "! dot.flame_shock.ticking & ! buff.surge_of_power.up & ! buff.master_of_the_elements.up",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["description"] = "Use Primordial Wave as much as possible.",
["action"] = "primordial_wave",
},
{
["action"] = "ancestral_swiftness",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "ascendance",
["description"] = "[Hekili] Revised trinket sync to recover when trinket is used before Ascendance.",
["criteria"] = "( talent.first_ascendant.enabled || variable.ascendance_trinket ) & ( buff.fury_of_storms.up || cooldown.stormkeeper.remains > 12 || ! talent.fury_of_the_storms.enabled ) & ( cooldown.primordial_wave.remains > 25 || ! talent.primordial_wave.enabled )",
},
{
["enabled"] = true,
["action"] = "tempest",
["description"] = "Surge of Power is strong and should be used.??",
["criteria"] = "buff.surge_of_power.up",
},
{
["enabled"] = true,
["criteria"] = "buff.surge_of_power.up",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_frenzy.stack = 2 & ! talent.surge_of_power.enabled",
["action"] = "tempest",
},
{
["enabled"] = true,
["action"] = "liquid_magma_totem",
["description"] = "Use LMT to apply Flame Shock.",
["criteria"] = "dot.flame_shock.refreshable & ! buff.master_of_the_elements.up",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["description"] = "Maintain Flame shock if talented into Erupting Lava.",
["criteria"] = "dot.flame_shock.refreshable & ! buff.surge_of_power.up & ! buff.master_of_the_elements.up & talent.erupting_lava.enabled",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Spend if close to overcaping or MotE buff is up. Respect Echoes of Great Sundering.",
["criteria"] = "( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up ) & ( maelstrom > variable.mael_cap - 15 || buff.master_of_the_elements.up )",
},
{
["enabled"] = true,
["criteria"] = "maelstrom > variable.mael_cap - 15 || buff.master_of_the_elements.up",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "maelstrom > variable.mael_cap - 15 || buff.master_of_the_elements.up",
["action"] = "earth_shock",
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "Use Icefury to proc Fusion of Elements.",
["criteria"] = "! ( buff.fusion_of_elements_nature.up || buff.fusion_of_elements_fire.up )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["description"] = "Use Lava Burst to proc Master of the Elements.",
["criteria"] = "! buff.master_of_the_elements.up & ( ! talent.master_of_the_elements.enabled || buff.lava_surge.up || buff.tempest.up || buff.stormkeeper.up || cooldown.lava_burst.charges_fractional > 1.8 || maelstrom > 82 - 10 * talent.eye_of_the_storm.enabled || maelstrom > 52 - 5 * talent.eye_of_the_storm.enabled & ( buff.echoes_of_great_sundering_eb.up || ! talent.elemental_blast.enabled ) )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Spend to activate Surge of Power buff for Tempest or Stormkeeper.",
["criteria"] = "( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up ) & ( buff.tempest.up || buff.stormkeeper.up ) & talent.surge_of_power.enabled & ! talent.master_of_the_elements.enabled",
},
{
["enabled"] = true,
["criteria"] = "( buff.tempest.up || buff.stormkeeper.up ) & talent.surge_of_power.enabled & ! talent.master_of_the_elements.enabled",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.tempest.up || buff.stormkeeper.up ) & talent.surge_of_power.enabled & ! talent.master_of_the_elements.enabled",
["action"] = "earth_shock",
},
{
["action"] = "tempest",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.storm_elemental.up & buff.wind_gust.stack < 4",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["action"] = "frost_shock",
["description"] = "Use Icefury-empowered Frost Shocks outside of Ascendance.",
["criteria"] = "buff.icefury_dmg.up & ! buff.ascendance.up & ! buff.stormkeeper.up & talent.call_of_the_ancestors.enabled",
},
{
["enabled"] = true,
["description"] = "Filler spell. Always available. Always the bottom line.",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "flame_shock",
["moving"] = 1,
["criteria"] = "movement.distance > 6 || refreshable",
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "frost_shock",
["moving"] = 1,
["description"] = "Frost Shock is our movement filler.",
},
},
["aoe"] = {
{
["action"] = "fire_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.storm_elemental.up || ! talent.echo_of_the_elementals.enabled",
["action"] = "storm_elemental",
},
{
["action"] = "stormkeeper",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "liquid_magma_totem",
["description"] = "Spread Flame shocks for Pwave.",
["criteria"] = "( cooldown.primordial_wave.remains < 5 * gcd.max || ! talent.primordial_wave.enabled ) & ( active_dot.flame_shock <= active_enemies - 3 || active_dot.flame_shock < ( active_enemies >? 3 ) ) & cooldown.ascendance.remains > 10",
},
{
["enabled"] = true,
["criteria"] = "cooldown.primordial_wave.remains < gcd.max & ! dot.flame_shock.ticking & ( talent.primordial_wave.enabled || spell_targets.chain_lightning <= 3 ) & cooldown.ascendance.remains > 10",
["action"] = "flame_shock",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = active_enemies >? 6 || cooldown.liquid_magma_totem.remains > 15 || ! talent.liquid_magma_totem.enabled",
["action"] = "primordial_wave",
},
{
["action"] = "ancestral_swiftness",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "ascendance",
["description"] = "[Hekili] Revised trinket sync to recover when trinket is used before Ascendance.",
["criteria"] = "( talent.first_ascendant.enabled || fight_remains > 200 || fight_remains < 80 || variable.ascendance_trinket ) & ( buff.fury_of_storms.up || cooldown.stormkeeper.remains > 12 || ! talent.fury_of_the_storms.enabled )",
},
{
["enabled"] = true,
["action"] = "tempest",
["cycle_targets"] = 1,
["description"] = "Surge of Power is strong and should be used. ??",
["criteria"] = "buff.arc_discharge.stack < 2 & ( buff.surge_of_power.up || ! talent.surge_of_power.enabled )",
},
{
["enabled"] = true,
["criteria"] = "buff.stormkeeper.up & buff.surge_of_power.up & spell_targets.chain_lightning = 2",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 6 & buff.surge_of_power.up",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.storm_frenzy.stack = 2 & ! talent.surge_of_power.enabled & maelstrom < variable.mael_cap - ( 15 + buff.stormkeeper.up * spell_targets.chain_lightning * spell_targets.chain_lightning )",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["description"] = "Use Lava Surge procs to consume fire part of fusion if you can also buff Earthquake with it.",
["criteria"] = "cooldown_react & buff.lava_surge.up & buff.fusion_of_elements_fire.up & ! buff.master_of_the_elements.up & ( maelstrom > 52 - 5 * talent.eye_of_the_storm.enabled & ( buff.echoes_of_great_sundering_es.up || ! talent.echoes_of_great_sundering.enabled ) )",
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Spend if you are close to cap, Master of the Elements buff is up or Ascendance is about to expire.",
["criteria"] = "( maelstrom > variable.mael_cap - 10 * ( spell_targets.chain_lightning + 1 ) || buff.master_of_the_elements.up || buff.ascendance.up & buff.ascendance.remains < 3 || boss & fight_remains < 5 ) & ( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up || ! talent.echoes_of_great_sundering.enabled & ( ! talent.elemental_blast.enabled || active_enemies > 1 + talent.tempest.enabled ) )",
},
{
["enabled"] = true,
["criteria"] = "( maelstrom > variable.mael_cap - 10 * ( spell_targets.chain_lightning + 1 ) || buff.master_of_the_elements.up || buff.ascendance.up & buff.ascendance.remains < 3 || boss & fight_remains < 5 ) & ( active_enemies <= 1 + talent.tempest.enabled || talent.echoes_of_great_sundering.enabled & ! buff.echoes_of_great_sundering_eb.up )",
["action"] = "elemental_blast",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( maelstrom > variable.mael_cap - 10 * ( spell_targets.chain_lightning + 1 ) || buff.master_of_the_elements.up || buff.ascendance.up & buff.ascendance.remains < 3 || boss & fight_remains < 5 ) & talent.echoes_of_great_sundering.enabled & ! buff.echoes_of_great_sundering_es.up",
["action"] = "earth_shock",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Spend to spread Lightning Rod if Tempest or Stormkeeper is up.",
["criteria"] = "talent.lightning_rod.enabled & lightning_rod < active_enemies & ( buff.stormkeeper.up || buff.tempest.up || ! talent.surge_of_power.enabled ) & ( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up || ! talent.echoes_of_great_sundering.enabled & ( ! talent.elemental_blast.enabled || active_enemies > 1 + talent.tempest.enabled ) )",
},
{
["enabled"] = true,
["criteria"] = "talent.lightning_rod.enabled & lightning_rod < active_enemies & ( buff.stormkeeper.up || buff.tempest.up || ! talent.surge_of_power.enabled ) & ( active_enemies <= 1 + talent.tempest.enabled || talent.echoes_of_great_sundering.enabled & ! buff.echoes_of_great_sundering_eb.up )",
["action"] = "elemental_blast",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.lightning_rod.enabled & lightning_rod < active_enemies & ( buff.stormkeeper.up || buff.tempest.up || ! talent.surge_of_power.enabled ) & talent.echoes_of_great_sundering.enabled & ! buff.echoes_of_great_sundering_es.up",
["action"] = "earth_shock",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "icefury",
["description"] = "Use Icefury to proc Fusion of Elements.",
["criteria"] = "talent.fusion_of_elements.enabled & ! ( buff.fusion_of_elements_nature.up || buff.fusion_of_elements_fire.up ) & ( active_enemies <= 4 || ! talent.elemental_blast.enabled || ! talent.echoes_of_great_sundering.enabled )",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["description"] = "[2-3t] Use Lava Surge procs to buff <anything> with MotE on 2-3 targets.",
["criteria"] = "cooldown_react & buff.lava_surge.up & ! buff.master_of_the_elements.up & talent.master_of_the_elements.enabled & active_enemies <= 3",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["description"] = "[2-3t]{Farseer} Use all Lava bursts to buff spenders, SK_CL and Tempest with MotE on 2-3 targets if not talented into Lightning Rod.",
["criteria"] = "! buff.master_of_the_elements.up & talent.master_of_the_elements.enabled & ( buff.stormkeeper.up || buff.tempest.up || maelstrom > 82 - 10 * talent.eye_of_the_storm.enabled || maelstrom > 52 - 5 * talent.eye_of_the_storm.enabled & ( buff.echoes_of_great_sundering_eb.up || ! talent.elemental_blast.enabled ) ) & active_enemies <= 3 & ! talent.lightning_rod.enabled & talent.call_of_the_ancestors.enabled",
},
{
["enabled"] = true,
["action"] = "lava_burst",
["cycle_targets"] = 1,
["description"] = "[2t] Use all Lava bursts to buff <anything> with MotE on 2 targets.",
["criteria"] = "! buff.master_of_the_elements.up & active_enemies = 2",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = 0 & buff.fusion_of_elements_fire.up & ( ! talent.elemental_blast.enabled || ! talent.echoes_of_great_sundering.enabled & active_enemies > 1 + talent.tempest.enabled )",
["action"] = "flame_shock",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "earthquake",
["description"] = "Spend to buff SK_CL (on 6+) or Tempest with SoP.",
["criteria"] = "( ( buff.stormkeeper.up & spell_targets.chain_lightning >= 6 || buff.tempest.up ) & talent.surge_of_power.enabled ) & ( buff.echoes_of_great_sundering_es.up || buff.echoes_of_great_sundering_eb.up || ! talent.echoes_of_great_sundering.enabled & ( ! talent.elemental_blast.enabled || active_enemies > 1 + talent.tempest.enabled ) )",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.stormkeeper.up & active_enemies >= 6 || buff.tempest.up ) & talent.surge_of_power.enabled ) & ( active_enemies <= 1 + talent.tempest.enabled || talent.echoes_of_great_sundering.enabled & ! buff.echoes_of_great_sundering_eb.up )",
["action"] = "elemental_blast",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( ( buff.stormkeeper.up & active_enemies >= 6 || buff.tempest.up ) & talent.surge_of_power.enabled ) & talent.echoes_of_great_sundering.enabled & ! buff.echoes_of_great_sundering_es.up",
["action"] = "earth_shock",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.icefury_dmg.up & ! buff.ascendance.up & ! buff.stormkeeper.up & talent.call_of_the_ancestors.enabled",
["action"] = "frost_shock",
},
{
["action"] = "chain_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "flame_shock",
["moving"] = 1,
["criteria"] = "refreshable",
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "frost_shock",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "spiritwalkers_grace",
["moving"] = 1,
["description"] = "Enable more movement.",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["description"] = "Spymaster's Web",
["criteria"] = "trinket.t1.is.spymasters_web & ( ( fight_remains > 180 & buff.spymasters_report.stack > 25 || buff.spymasters_report.stack > 35 || fight_remains < 80 ) & cooldown.ascendance.ready & ( buff.fury_of_storms.up || ! talent.fury_of_the_storms.enabled ) & ( cooldown.primordial_wave.remains > 25 || ! talent.primordial_wave.enabled || spell_targets.chain_lightning >= 2 ) || boss & fight_remains < 21 )",
},
{
["enabled"] = true,
["criteria"] = "trinket.t2.is.spymasters_web & ( ( fight_remains > 180 & buff.spymasters_report.stack > 25 || buff.spymasters_report.stack > 35 || fight_remains < 80 ) & cooldown.ascendance.ready & ( buff.fury_of_storms.up || ! talent.fury_of_the_storms.enabled ) & ( cooldown.primordial_wave.remains > 25 || ! talent.primordial_wave.enabled || spell_targets.chain_lightning >= 2 ) || boss & fight_remains < 21 )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["use_off_gcd"] = 1,
["description"] = "Neural Synapse Enhancer",
["criteria"] = "buff.ascendance.remains > 12 || cooldown.ascendance.remains > 10",
["name"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "house_of_cards",
["use_off_gcd"] = 1,
["description"] = "House of Cards + 2 minute Ascendance",
["criteria"] = "( variable.special_trinket1 || variable.special_trinket2 ) & buff.ascendance.remains > 12 || fight_remains < 21",
["name"] = "house_of_cards",
},
{
["enabled"] = true,
["action"] = "funhouse_lens",
["use_off_gcd"] = 1,
["description"] = "Funhouse Lens + 2 minute Ascendance",
["criteria"] = "( variable.special_trinket1 || variable.special_trinket2 ) & buff.ascendance.remains > 12 || fight_remains < 21",
["name"] = "funhouse_lens",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["description"] = "Normal trinkets",
["criteria"] = "! trinket.t1.is.spymasters_web & ! variable.special_trinket1 & ( ( buff.fury_of_storms.up || ! talent.fury_of_the_storms.enabled || cooldown.stormkeeper.remains > 10 ) & ( cooldown.primordial_wave.remains > 25 || ! talent.primordial_wave.enabled || spell_targets.chain_lightning >= 2 ) & cooldown.ascendance.remains > 15 || fight_remains < 21 || buff.ascendance.remains > 12 )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! trinket.t2.is.spymasters_web & ! variable.special_trinket2 & ( ( buff.fury_of_storms.up || ! talent.fury_of_the_storms.enabled || cooldown.stormkeeper.remains > 10 ) & ( cooldown.primordial_wave.remains > 25 || ! talent.primordial_wave.enabled || spell_targets.chain_lightning >= 2 ) & cooldown.ascendance.remains > 15 || fight_remains < 21 || buff.ascendance.remains > 12 )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["description"] = "Normal weapons",
["criteria"] = "( buff.fury_of_storms.up || ! talent.fury_of_the_storms.enabled || cooldown.stormkeeper.remains > 10 ) & ( cooldown.primordial_wave.remains > 25 || ! talent.primordial_wave.enabled ) & cooldown.ascendance.remains > 15 || buff.ascendance.remains > 12",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! ( trinket.t1.has_use_buff || trinket.t1.is.funhouse_lens ) & ( ! ( trinket.t2.has_use_buff || trinket.t2.is.funhouse_lens || buff.spymasters_report.stack > 25 || equipped.neural_synapse_enhancer || equipped.best_in_slots ) || cooldown.ascendance.remains > 20 || ( trinket.t2.cooldown.remains > 20 & cooldown.neural_synapse_enhancer.remains > 20 & cooldown.best_in_slots.remains > 20 ) )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! ( trinket.t2.has_use_buff || trinket.t2.is.funhouse_lens ) & ( ! ( trinket.t1.has_use_buff || trinket.t1.is.funhouse_lens || buff.spymasters_report.stack > 25 || equipped.neural_synapse_enhancer || equipped.best_in_slots ) || cooldown.ascendance.remains > 20 || ( trinket.t1.cooldown.remains > 20 & cooldown.neural_synapse_enhancer.remains > 20 & cooldown.best_in_slots.remains > 20 ) )",
},
{
["enabled"] = true,
["criteria"] = "buff.lightning_shield.down",
["action"] = "lightning_shield",
},
{
["action"] = "natures_swiftness",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || buff.spymasters_web.up || buff.ascendance.remains > 12 || fight_remains < 31 & boss",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.spymasters_web.up || ( trinket.t1.has_use_buff & ! trinket.t1.is.spymasters_web || trinket.t1.is.funhouse_lens ) & ( trinket.t1.ready_cooldown || trinket.t1.cooldown.remains > 20 ) || ( trinket.t2.has_use_buff & ! trinket.t2.is.spymasters_web || trinket.t2.is.funhouse_lens ) & ( trinket.t2.ready_cooldown || trinket.t2.cooldown.remains > 20 ) || equipped.neural_synapse_enhancer & ( cooldown.neural_synapse_enhancer.remains = 0 || cooldown.neural_synapse_enhancer.remains > 20 ) || equipped.best_in_slots & ( cooldown.best_in_slots.remains = 0 || cooldown.best_in_slots.remains > 20 ) || ! trinket.t1.has_use_buff & ! trinket.t2.has_use_buff",
["var_name"] = "ascendance_trinket",
["description"] = "[Hekili] Ascendance/trinket sync logic, revised to recover when a trinket is used *before* Ascendance.",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.chain_lightning > 1",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["list_name"] = "single_target",
},
},
["precombat"] = {
{
["enabled"] = true,
["action"] = "flametongue_weapon",
["description"] = "Ensure weapon enchant is applied if you've selected Improved Flametongue Weapon.",
["criteria"] = "talent.improved_flametongue_weapon.enabled",
},
{
["action"] = "skyfury",
["enabled"] = true,
},
{
["action"] = "lightning_shield",
["enabled"] = true,
},
{
["action"] = "thunderstrike_ward",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.earth_shield.up & talent.elemental_orbit.enabled",
["action"] = "earth_shield",
},
{
["action"] = "stormkeeper",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "100 + 50 * talent.swelling_maelstrom.rank + 25 * talent.primordial_capacity.rank",
["var_name"] = "mael_cap",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t1.is.house_of_cards || trinket.t1.is.funhouse_lens ) & ! ( trinket.t2.has_use_buff || trinket.t2.is.funhouse_lens ) & talent.first_ascendant.enabled",
["var_name"] = "special_trinket1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( trinket.t2.is.house_of_cards || trinket.t2.is.funhouse_lens ) & ! ( trinket.t1.has_use_buff || trinket.t1.is.funhouse_lens ) & talent.first_ascendant.enabled",
["var_name"] = "special_trinket2",
},
},
},
["author"] = "SimulationCraft",
},
["Assassination"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/rogue_assassination.simc",
["builtIn"] = true,
["date"] = 20250412,
["author"] = "SimC",
["desc"] = "2025-04-12: Something something time travelling variables\n2025-04-08: Sync with SimC\n2025-03-25: Sync with SimC\n2025-03-25: Sync with SimC\n2025-03-14: Sync with SimC (new trinket line)\n2025-03-08: Sync with SimC\n2025-03-01: Sync with SimC",
["lists"] = {
["stealthed"] = {
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Stealthed Actions",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "Apply Deathstalkers Mark if it has fallen off or waiting for Rupture in AoE",
["criteria"] = "! debuff.deathstalkers_mark.up & talent.deathstalkers_mark.enabled & combo_points < variable.effective_spend_cp & ( dot.rupture.ticking || variable.single_target || ! talent.subterfuge.enabled )",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Make sure to have Shiv up during Kingsbane as a final check [Hekili] with Lightweight Shiv only",
["criteria"] = "talent.kingsbane.enabled & dot.kingsbane.ticking & dot.kingsbane.remains < 8 & ( ! debuff.shiv.up & debuff.shiv.remains < 1 ) & buff.envenom.up",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Envenom to maintain the buff during Subterfuge",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & dot.kingsbane.ticking & buff.envenom.remains <= 3 & ( debuff.deathstalkers_mark.up || buff.cold_blood.up || buff.darkest_night.up & combo_points = 7 )",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Envenom during Master Assassin in single target",
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.master_assassin_aura.up & variable.single_target & ( debuff.deathstalkers_mark.up || buff.cold_blood.up || buff.darkest_night.up & combo_points = 7 )",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["criteria"] = "effective_combo_points >= variable.effective_spend_cp & buff.indiscriminate_carnage_any.up & ( refreshable || ! settings.cycle ) & ( ( ! variable.regen_saturated & active_dot.rupture < active_enemies ) || ! variable.scent_saturation || ! dot.rupture.ticking ) & target.time_to_die > 15",
["description"] = "Rupture during Indiscriminate Carnage",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["criteria"] = "stealthed.improved_garrote & ( remains < 12 || pmultiplier <= 1 || ( buff.indiscriminate_carnage.up & active_dot.garrote < spell_targets.fan_of_knives ) ) & ! variable.single_target & target.time_to_die - remains > 2 & combo_points.deficit > 2 - buff.darkest_night.up * 2",
["description"] = "Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage",
},
{
["enabled"] = true,
["criteria"] = "stealthed.improved_garrote & ( pmultiplier <= 1 || refreshable ) & combo_points.deficit >= 1 + 2 * talent.shrouded_suffocation.enabled",
["action"] = "garrote",
},
},
["vanish"] = {
{
["enabled"] = true,
["for_next"] = 1,
["description"] = "Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark",
["extra_amount"] = "45",
["action"] = "pool_resource",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish to fish for Fateful Ending",
["criteria"] = "! buff.fatebound_lucky_coin.up & effective_combo_points >= variable.effective_spend_cp & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish to spread Garrote during Deathmark without Indiscriminate Carnage",
["criteria"] = "! talent.master_assassin.enabled & ! talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & combo_points.deficit >= ( spell_targets.fan_of_knives >? 4 )",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["extra_amount"] = "45",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish for cleaving Garrotes with Indiscriminate Carnage",
["criteria"] = "talent.indiscriminate_carnage.enabled & talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & spell_targets.fan_of_knives > 2 & ( target.time_to_die - remains > 15 || raid_event.adds.in > 20 )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish fallback for Master Assassin",
["criteria"] = "talent.master_assassin.enabled & debuff.deathmark.up & dot.kingsbane.remains <= 6 + 3 * talent.subterfuge.rank",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish fallback for Improved Garrote during Deathmark if no add waves are expected",
["criteria"] = "talent.improved_garrote.enabled & cooldown.garrote.up & ( dot.garrote.pmultiplier <= 1 || dot.garrote.refreshable ) & ( debuff.deathmark.up || cooldown.deathmark.remains < 4 ) & raid_event.adds.in > 30",
},
},
["core_dot"] = {
{
["enabled"] = true,
["action"] = "garrote",
["description"] = "Core damage over time abilities used everywhere Maintain Garrote",
["criteria"] = "combo_points.deficit >= 1 & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > 12",
},
{
["enabled"] = true,
["action"] = "rupture",
["description"] = "Maintain Rupture unless darkest night is up",
["criteria"] = "combo_points >= variable.effective_spend_cp & ( pmultiplier <= 1 ) & refreshable & target.time_to_die - remains > ( 4 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ( ! buff.darkest_night.up || talent.caustic_spatter.enabled & ! debuff.caustic_spatter.up )",
},
{
["enabled"] = true,
["action"] = "crimson_tempest",
["description"] = "Maintain Crimson Tempest unless it would remove a stronger cast",
["criteria"] = "combo_points >= variable.effective_spend_cp & refreshable & pmultiplier <= persistent_multiplier & ! buff.darkest_night.up & ! talent.amplifying_poison.enabled",
},
},
["shiv"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & spell_targets.fan_of_knives <= 5",
["description"] = "Shiv conditions",
["var_name"] = "shiv_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.kingsbane.enabled & buff.envenom.up & variable.shiv_condition",
["var_name"] = "shiv_kingsbane_condition",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv for aoe with Arterial Precision",
["criteria"] = "talent.arterial_precision.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking & spell_targets.fan_of_knives >= 4 & dot.crimson_tempest.ticking & ( target.health.pct <= 35 & talent.zoldyck_recipe.enabled || cooldown.shiv.charges_fractional >= 1.9 )",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv cases for Kingsbane",
["criteria"] = "! talent.lightweight_shiv.enabled & variable.shiv_kingsbane_condition & ( dot.kingsbane.ticking & dot.kingsbane.remains < 8 || ! dot.kingsbane.ticking & cooldown.kingsbane.remains >= 20 ) & ( ! talent.crimson_tempest.enabled || active_enemies = 1 || dot.crimson_tempest.ticking )",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Shiv for big Darkest Night Envenom during Lingering Darkness",
["criteria"] = "buff.darkest_night.up & combo_points >= variable.effective_spend_cp & buff.lingering_darkness.up",
},
{
["enabled"] = true,
["criteria"] = "talent.lightweight_shiv.enabled & variable.shiv_kingsbane_condition & ( dot.kingsbane.ticking & dot.kingsbane.remains < 8 || cooldown.kingsbane.remains <= 1 & cooldown.shiv.charges_fractional >= 1.7 )",
["action"] = "shiv",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Fallback shiv for arterial during deathmark",
["criteria"] = "debuff.deathmark.up & talent.arterial_precision.enabled & ! debuff.shiv.up & dot.garrote.ticking & dot.rupture.ticking",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Fallback if no special cases apply",
["criteria"] = "! debuff.deathmark.up & ! talent.kingsbane.enabled & variable.shiv_condition & ( dot.crimson_tempest.ticking || talent.amplifying_poison.enabled ) & ( ( ( talent.lightweight_shiv.enabled + 1 ) - cooldown.shiv.charges_fractional ) * 30 < cooldown.deathmark.remains ) & raid_event.adds.in > 20",
},
{
["enabled"] = true,
["criteria"] = "! talent.kingsbane.enabled & ! talent.arterial_precision.enabled & variable.shiv_condition & ( ! talent.crimson_tempest.enabled || active_enemies = 1 || dot.crimson_tempest.ticking )",
["action"] = "shiv",
},
{
["enabled"] = true,
["action"] = "shiv",
["description"] = "Dump Shiv on fight end",
["criteria"] = "boss & fight_remains <= cooldown.shiv.charges * 8",
},
},
["misc_cds"] = {
{
["enabled"] = true,
["action"] = "potion",
["description"] = "Miscellaneous Cooldowns Potion",
["criteria"] = "buff.bloodlust.react || boss & fight_remains < 30 || debuff.deathmark.up",
},
{
["enabled"] = true,
["action"] = "blood_fury",
["description"] = "Various special racials to be synced with cooldowns",
["criteria"] = "debuff.deathmark.up",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.deathmark.up",
["action"] = "ancestral_call",
},
},
["aoe_dot"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points >= variable.effective_spend_cp",
["description"] = "AoE Damage over time abilities   Helper Variable to check basic finisher conditions",
["var_name"] = "dot_finisher_condition",
},
{
["enabled"] = true,
["action"] = "crimson_tempest",
["description"] = "Crimson Tempest on 2+ Targets",
["criteria"] = "spell_targets >= 2 & variable.dot_finisher_condition & refreshable & target.time_to_die - remains > 6",
},
{
["enabled"] = true,
["action"] = "garrote",
["cycle_targets"] = 1,
["criteria"] = "combo_points.deficit >= 1 & pmultiplier <= 1 & refreshable & ! variable.regen_saturated & target.time_to_die - remains > 12",
["description"] = "Garrote upkeep in AoE to reach energy saturation",
},
{
["enabled"] = true,
["action"] = "rupture",
["cycle_targets"] = 1,
["criteria"] = "variable.dot_finisher_condition & refreshable & ( ! dot.kingsbane.ticking || buff.cold_blood.up ) & ( ! variable.regen_saturated & ( talent.scent_of_blood.rank = 2 || talent.scent_of_blood.rank <= 1 & ( buff.indiscriminate_carnage.up || target.time_to_die - remains > 15 ) ) ) & target.time_to_die > ( 7 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
["description"] = "Rupture upkeep in AoE to reach energy/scent saturation or to spread for damage",
},
{
["enabled"] = true,
["action"] = "rupture",
["criteria"] = "variable.dot_finisher_condition & refreshable & ( ! dot.kingsbane.ticking || buff.cold_blood.up ) & variable.regen_saturated & target.time_to_die > ( 7 + ( talent.dashing_scoundrel.enabled * 5 ) + ( variable.regen_saturated * 6 ) ) & ! buff.darkest_night.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "garrote",
["description"] = "Garrote as a special generator for the last CP before a finisher for edge case handling",
["criteria"] = "refreshable & combo_points.deficit >= 1 & ( pmultiplier <= 1 || remains <= tick_time & spell_targets.fan_of_knives >= 3 ) & ( remains <= tick_time * 2 & spell_targets.fan_of_knives >= 3 ) & ( target.time_to_die - remains ) > 4 & master_assassin_remains = 0",
},
},
["items"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 & ! cooldown.deathmark.ready || dot.deathmark.ticking || boss & fight_remains <= 22",
["description"] = "Special Case Trinkets",
["var_name"] = "base_trinket_condition",
},
{
["enabled"] = true,
["action"] = "treacherous_transmitter",
["use_off_gcd"] = 1,
["name"] = "treacherous_transmitter",
["criteria"] = "variable.base_trinket_condition",
},
{
["enabled"] = true,
["action"] = "mad_queens_mandate",
["criteria"] = "cooldown.deathmark.remains >= 30 & ! dot.deathmark.ticking || boss & fight_remains <= 3",
["name"] = "mad_queens_mandate",
},
{
["enabled"] = true,
["action"] = "junkmaestros_mega_magnet",
["criteria"] = "cooldown.deathmark.remains >= 30 & ! dot.deathmark.ticking & ! debuff.shiv.up & ( ! talent.deathstalkers_mark.enabled || buff.lingering_darkness.up & buff.junkmaestros_mega_magnet.stack > 5 ) || boss & fight_remains <= 10",
["name"] = "junkmaestros_mega_magnet",
},
{
["enabled"] = true,
["action"] = "imperfect_ascendancy_serum",
["use_off_gcd"] = 1,
["name"] = "imperfect_ascendancy_serum",
["criteria"] = "variable.base_trinket_condition",
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["name"] = "algethar_puzzle_box",
["criteria"] = "dot.rupture.ticking & cooldown.deathmark.remains < 2 || boss & fight_remains <= 22",
},
{
["enabled"] = true,
["criteria"] = "( variable.trinket_sync_slot = 1 & ( debuff.deathmark.up || dot.kingsbane.ticking ) || ( variable.trinket_sync_slot = 2 & ! trinket.t2.cooldown.ready & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot || boss & fight_remains <= 20",
["description"] = "Fallback case for using stat trinkets",
["slots"] = "trinket1",
["action"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( debuff.deathmark.up || dot.kingsbane.ticking ) || ( variable.trinket_sync_slot = 1 & ! trinket.t1.cooldown.ready & cooldown.deathmark.remains > 20 ) ) || ! variable.trinket_sync_slot || boss & fight_remains <= 20",
["slots"] = "trinket2",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat)",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "energy.regen_combined > 30",
["description"] = "Combined Energy Regen needed to saturate",
["var_name"] = "regen_saturated",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1",
["description"] = "Pooling Setup, check for cooldowns",
["var_name"] = "single_target",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.kingsbane.ticking || debuff.shiv.up",
["var_name"] = "in_cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.kingsbane.enabled & cooldown.kingsbane.remains < 3 & ! cooldown.kingsbane.ready",
["description"] = "Checking for cooldowns soon",
["var_name"] = "cd_soon",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.in_cooldowns || buff.darkest_night.up || ( energy.pct >= ( 80 - 10 * talent.vicious_venoms.rank - 30 * talent.amplifying_poison.enabled ) ) || ( charges_fractional > 1.8 || boss ) & fight_remains <= 20",
["description"] = "Pooling Condition all together - [Syrif] - This is where upper_limit_energy is written out",
["var_name"] = "not_pooling",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.scent_of_blood.stack >= ( ( spell_targets.fan_of_knives * talent.scent_of_blood.rank * 2 ) >? 20 )",
["description"] = "We are Scent Saturated when our stack count is hitting the maximum",
["var_name"] = "scent_saturation",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call Stealthed Actions",
["strict"] = 1,
["criteria"] = "stealthed.rogue || stealthed.improved_garrote || master_assassin_remains > 0",
["list_name"] = "stealthed",
},
{
["enabled"] = true,
["description"] = "Call Cooldowns",
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["description"] = "Call Core DoT effects",
["action"] = "call_action_list",
["list_name"] = "core_dot",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Call AoE DoTs when in AoE",
["strict"] = 1,
["criteria"] = "active_enemies > 1",
["list_name"] = "aoe_dot",
},
{
["enabled"] = true,
["description"] = "Call Direct Damage Abilities",
["action"] = "call_action_list",
["list_name"] = "direct",
},
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen_combined",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration ) & ! trinket.t2.is.treacherous_transmitter || trinket.t1.is.treacherous_transmitter || trinket.t1.is.house_of_cards",
["description"] = "Check which trinket slots have Stat Values",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["criteria"] = "trinket.t2.has_use_buff & ( ! trinket.t1.has_use_buff || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration ) & ! trinket.t1.is.treacherous_transmitter || trinket.t2.is.treacherous_transmitter || trinket.t2.is.house_of_cards",
["var_name"] = "trinket_sync_slot",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cp_max_spend - 2 <? 5 * talent.hand_of_fate.enabled",
["description"] = "Determine combo point finish condition",
["var_name"] = "effective_spend_cp",
},
{
["enabled"] = true,
["description"] = "Pre-cast Slice and Dice if possible",
["action"] = "stealth",
},
},
["direct"] = {
{
["enabled"] = true,
["for_next"] = 1,
["criteria"] = "active_dot.envenom = 0",
["extra_amount"] = "energy.max*(0.5+0.3*talent.hand_of_fate.rank-0.15*talent.vicious_venoms.rank)-action.envenom.cost",
["action"] = "pool_resource",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.",
["criteria"] = "! buff.darkest_night.up & combo_points >= variable.effective_spend_cp & ( variable.not_pooling || debuff.amplifying_poison.stack >= 20 || active_enemies > 1 )",
},
{
["enabled"] = true,
["action"] = "envenom",
["description"] = "Special Envenom handling for Darkest Night",
["criteria"] = "buff.darkest_night.up & effective_combo_points >= cp_max_spend",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.clear_the_witnesses.up & ( spell_targets.fan_of_knives >= 2 - ( buff.lingering_darkness.up || ! talent.vicious_venoms.enabled ) ) ) || ( spell_targets.fan_of_knives >= 3 - ( talent.momentum_of_despair.enabled & talent.thrown_precision.enabled ) + talent.vicious_venoms.enabled + talent.blindside.enabled )",
["description"] = "Check if we should be using a filler",
["var_name"] = "fok_target_count",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points <= variable.effective_spend_cp & ! variable.cd_soon || variable.not_pooling || active_enemies > 1",
["var_name"] = "use_filler",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.caustic_spatter.enabled & dot.rupture.ticking & ( ! debuff.caustic_spatter.up || debuff.caustic_spatter.remains <= 2 ) & combo_points.deficit >= 1 & active_enemies > 1",
["description"] = "Maintain Caustic Spatter",
["var_name"] = "use_caustic_filler",
},
{
["enabled"] = true,
["criteria"] = "variable.use_caustic_filler",
["action"] = "mutilate",
},
{
["enabled"] = true,
["criteria"] = "variable.use_caustic_filler",
["action"] = "ambush",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 6cp for Darkest Night",
["criteria"] = "buff.darkest_night.up & combo_points = 6 & ( ! talent.vicious_venoms.enabled || spell_targets.fan_of_knives >= 2 )",
},
{
["enabled"] = true,
["action"] = "fan_of_knives",
["description"] = "Fan of Knives at 3+ targets, accounting for various edge cases",
["criteria"] = "variable.use_filler & ! toggle.funnel & variable.fok_target_count",
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.",
["criteria"] = "variable.use_filler & ( buff.blindside.up || stealthed.rogue ) & ( ! dot.kingsbane.ticking || debuff.deathmark.down || buff.blindside.up )",
},
{
["enabled"] = true,
["action"] = "mutilate",
["cycle_targets"] = 1,
["criteria"] = "variable.use_filler & spell_targets.fan_of_knives = 2",
["description"] = "Tab-Mutilate to apply Deadly Poison at 2 targets if not using Fan of Knives",
},
{
["enabled"] = true,
["action"] = "mutilate",
["description"] = "Fallback Mutilate",
["criteria"] = "variable.use_filler",
},
},
["cds"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.master_assassin.enabled || dot.garrote.ticking",
["description"] = "Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane",
["var_name"] = "deathmark_ma_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.kingsbane.remains <= 2 & buff.envenom.up",
["var_name"] = "deathmark_kingsbane_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "dot.rupture.ticking & ( variable.deathmark_kingsbane_condition || spell_targets.fan_of_knives > 1 & buff.slice_and_dice.remains > 5 || ! talent.kingsbane.enabled & dot.crimson_tempest.ticking ) & ! debuff.deathmark.up & variable.deathmark_ma_condition",
["description"] = "Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied",
["var_name"] = "deathmark_condition",
},
{
["enabled"] = true,
["description"] = "Usages for various special-case Trinkets and other Cantrips if applicable",
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "deathmark",
["description"] = "Cast Deathmark if the target will survive long enough",
["criteria"] = "( variable.deathmark_condition & target.time_to_die >= 10 ) || boss & fight_remains <= 20",
},
{
["enabled"] = true,
["description"] = "Check for Applicable Shiv usage",
["action"] = "call_action_list",
["list_name"] = "shiv",
},
{
["enabled"] = true,
["criteria"] = "( debuff.shiv.up || cooldown.shiv.remains < 6 ) & ( buff.envenom.up || spell_targets.fan_of_knives > 1 ) & ( cooldown.deathmark.remains >= 50 || dot.deathmark.ticking ) || boss & fight_remains <= 15",
["action"] = "kingsbane",
},
{
["enabled"] = true,
["action"] = "thistle_tea",
["description"] = "Use with shiv or in niche cases at the end of Kingsbane if not already up",
["criteria"] = "! buff.thistle_tea.up & debuff.shiv.remains >= 6 || ! buff.thistle_tea.up & dot.kingsbane.ticking & dot.kingsbane.remains <= 6 || ! buff.thistle_tea.up & fight_remains <= cooldown.thistle_tea.charges * 6",
},
{
["enabled"] = true,
["description"] = "Potion/Racials/Other misc cooldowns",
["action"] = "call_action_list",
["list_name"] = "misc_cds",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & master_assassin_remains = 0",
["action"] = "call_action_list",
["list_name"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "( buff.fatebound_coin_tails.stack > 0 & buff.fatebound_coin_heads.stack > 0 ) || debuff.shiv.up & ( cooldown.deathmark.remains > 50 || ! talent.inevitabile_end.enabled & effective_combo_points >= variable.effective_spend_cp )",
["use_off_gcd"] = 1,
["action"] = "cold_blood",
["description"] = "Cold Blood for Edge Case or Envenoms during shiv",
},
},
},
["version"] = 20250412,
["warnings"] = "The import for 'items' required some automated changes.\nLine 7: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 7: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 8: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 8: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'precombat' required some automated changes.\nLine 2: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 2: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 2: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 2: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 2: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 2: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 2: Converted 'trinket.1.is.house_of_cards' to 'trinket.t1.is.house_of_cards' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 3: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 3: Converted 'trinket.2.is.house_of_cards' to 'trinket.t2.is.house_of_cards' (1x).\n\nImported 11 action lists.\n",
["spec"] = 259,
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/rogue_assassination.simc\n## Up to date with SimC: April 7 2025 - 0307d7f\n\nactions.precombat+=/apply_poison\n# Check which trinket slots have Stat Values\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_use_buff&(!trinket.2.has_use_buff||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)&!trinket.2.is.treacherous_transmitter||trinket.1.is.treacherous_transmitter||trinket.1.is.house_of_cards\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_use_buff&(!trinket.1.has_use_buff||trinket.2.cooldown.duration>trinket.1.cooldown.duration)&!trinket.1.is.treacherous_transmitter||trinket.2.is.treacherous_transmitter||trinket.2.is.house_of_cards\n# Determine combo point finish condition\nactions.precombat+=/variable,name=effective_spend_cp,value=cp_max_spend-2<?5*talent.hand_of_fate\n# Pre-cast Slice and Dice if possible\nactions.precombat+=/stealth\n## actions.precombat+=/slice_and_dice,precombat_seconds=1,if=refreshable&!buff.indiscriminate_carnage.up\n\n# Restealth if possible (no vulnerable enemies in combat)\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that\nactions+=/kick\n# Combined Energy Regen needed to saturate\nactions+=/variable,name=regen_saturated,value=energy.regen_combined>30\n# Pooling Setup, check for cooldowns\nactions+=/variable,name=single_target,value=active_enemies=1\nactions+=/variable,name=in_cooldowns,value=dot.kingsbane.ticking||debuff.shiv.up\n## [Syrif] - This variable is flattened into variable.not_pooling to ensure timeliness\n## actions+=/variable,name=upper_limit_energy,value=energy.pct>=(80-10*talent.vicious_venoms.rank-30*talent.amplifying_poison)\n# Checking for cooldowns soon\nactions+=/variable,name=cd_soon,value=talent.kingsbane&cooldown.kingsbane.remains<3&!cooldown.kingsbane.ready\n# Pooling Condition all together - [Syrif] - This is where upper_limit_energy is written out\nactions+=/variable,name=not_pooling,value=variable.in_cooldowns||buff.darkest_night.up||(energy.pct>=(80-10*talent.vicious_venoms.rank-30*talent.amplifying_poison))||(charges_fractional>1.8||boss)&fight_remains<=20\n## Check what the maximum Scent of Blood stacks is currently\n## actions+=/variable,name=scent_effective_max_stacks,value=(spell_targets.fan_of_knives*talent.scent_of_blood.rank*2)>?20\n# We are Scent Saturated when our stack count is hitting the maximum\nactions+=/variable,name=scent_saturation,value=buff.scent_of_blood.stack>=((spell_targets.fan_of_knives*talent.scent_of_blood.rank*2)>?20)\n# Call Stealthed Actions\nactions+=/call_action_list,name=stealthed,strict=1,if=stealthed.rogue||stealthed.improved_garrote||master_assassin_remains>0\n# Call Cooldowns\nactions+=/call_action_list,name=cds\n# Call Core DoT effects\nactions+=/call_action_list,name=core_dot\n# Call AoE DoTs when in AoE\nactions+=/call_action_list,name=aoe_dot,strict=1,if=active_enemies>1\n# Call Direct Damage Abilities\nactions+=/call_action_list,name=direct\nactions+=/arcane_torrent,if=energy.deficit>=15+energy.regen_combined\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# AoE Damage over time abilities   Helper Variable to check basic finisher conditions\nactions.aoe_dot+=/variable,name=dot_finisher_condition,value=combo_points>=variable.effective_spend_cp\n# Crimson Tempest on 2+ Targets\nactions.aoe_dot+=/crimson_tempest,if=spell_targets>=2&variable.dot_finisher_condition&refreshable&target.time_to_die-remains>6\n# Garrote upkeep in AoE to reach energy saturation\nactions.aoe_dot+=/garrote,cycle_targets=1,if=combo_points.deficit>=1&pmultiplier<=1&refreshable&!variable.regen_saturated&target.time_to_die-remains>12\n# Rupture upkeep in AoE to reach energy/scent saturation or to spread for damage\nactions.aoe_dot+=/rupture,cycle_targets=1,if=variable.dot_finisher_condition&refreshable&(!dot.kingsbane.ticking||buff.cold_blood.up)&(!variable.regen_saturated&(talent.scent_of_blood.rank=2||talent.scent_of_blood.rank<=1&(buff.indiscriminate_carnage.up||target.time_to_die-remains>15)))&target.time_to_die>(7+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\nactions.aoe_dot+=/rupture,cycle_targets=1,if=variable.dot_finisher_condition&refreshable&(!dot.kingsbane.ticking||buff.cold_blood.up)&variable.regen_saturated&target.time_to_die>(7+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&!buff.darkest_night.up\n# Garrote as a special generator for the last CP before a finisher for edge case handling\nactions.aoe_dot+=/garrote,if=refreshable&combo_points.deficit>=1&(pmultiplier<=1||remains<=tick_time&spell_targets.fan_of_knives>=3)&(remains<=tick_time*2&spell_targets.fan_of_knives>=3)&(target.time_to_die-remains)>4&master_assassin_remains=0\n\n# Cooldowns  Wait on Deathmark for Garrote with MA and check for Kingsbane\nactions.cds+=/variable,name=deathmark_ma_condition,value=!talent.master_assassin.enabled||dot.garrote.ticking\nactions.cds+=/variable,name=deathmark_kingsbane_condition,value=cooldown.kingsbane.remains<=2&buff.envenom.up\n# Deathmark to be used if not stealthed, Rupture is up, and all other talent conditions are satisfied\nactions.cds+=/variable,name=deathmark_condition,value=dot.rupture.ticking&(variable.deathmark_kingsbane_condition||spell_targets.fan_of_knives>1&buff.slice_and_dice.remains>5||!talent.kingsbane&dot.crimson_tempest.ticking)&!debuff.deathmark.up&variable.deathmark_ma_condition\n# Usages for various special-case Trinkets and other Cantrips if applicable\nactions.cds+=/call_action_list,name=items\n## Invoke Externals to Deathmark\n## actions.cds+=/invoke_external_buff,name=power_infusion,if=dot.deathmark.ticking\n# Cast Deathmark if the target will survive long enough\nactions.cds+=/deathmark,if=(variable.deathmark_condition&target.time_to_die>=10)||boss&fight_remains<=20\n# Check for Applicable Shiv usage\nactions.cds+=/call_action_list,name=shiv\nactions.cds+=/kingsbane,if=(debuff.shiv.up||cooldown.shiv.remains<6)&(buff.envenom.up||spell_targets.fan_of_knives>1)&(cooldown.deathmark.remains>=50||dot.deathmark.ticking)||boss&fight_remains<=15\n# Use with shiv or in niche cases at the end of Kingsbane if not already up\nactions.cds+=/thistle_tea,if=!buff.thistle_tea.up&debuff.shiv.remains>=6||!buff.thistle_tea.up&dot.kingsbane.ticking&dot.kingsbane.remains<=6||!buff.thistle_tea.up&fight_remains<=cooldown.thistle_tea.charges*6\n# Potion/Racials/Other misc cooldowns\nactions.cds+=/call_action_list,name=misc_cds\nactions.cds+=/call_action_list,name=vanish,if=!stealthed.all&master_assassin_remains=0\n# Cold Blood for Edge Case or Envenoms during shiv\nactions.cds+=/cold_blood,use_off_gcd=1,if=(buff.fatebound_coin_tails.stack>0&buff.fatebound_coin_heads.stack>0)||debuff.shiv.up&(cooldown.deathmark.remains>50||!talent.inevitabile_end&effective_combo_points>=variable.effective_spend_cp)\n\n# Core damage over time abilities used everywhere Maintain Garrote\nactions.core_dot+=/garrote,if=combo_points.deficit>=1&(pmultiplier<=1)&refreshable&target.time_to_die-remains>12\n# Maintain Rupture unless darkest night is up\nactions.core_dot+=/rupture,if=combo_points>=variable.effective_spend_cp&(pmultiplier<=1)&refreshable&target.time_to_die-remains>(4+(talent.dashing_scoundrel*5)+(variable.regen_saturated*6))&(!buff.darkest_night.up||talent.caustic_spatter&!debuff.caustic_spatter.up)\n# Maintain Crimson Tempest unless it would remove a stronger cast\nactions.core_dot+=/crimson_tempest,if=combo_points>=variable.effective_spend_cp&refreshable&pmultiplier<=persistent_multiplier&!buff.darkest_night.up&!talent.amplifying_poison\n\nactions.direct+=/pool_resource,for_next=1,extra_amount=energy.max*(0.5+0.3*talent.hand_of_fate.rank-0.15*talent.vicious_venoms.rank)-action.envenom.cost,if=active_dot.envenom=0\n# Direct Damage Abilities   Envenom at applicable cp if not pooling, capped on amplifying poison stacks, on an animacharged CP, or in aoe.\nactions.direct+=/envenom,if=!buff.darkest_night.up&combo_points>=variable.effective_spend_cp&(variable.not_pooling||debuff.amplifying_poison.stack>=20||active_enemies>1)\n# Special Envenom handling for Darkest Night\nactions.direct+=/envenom,if=buff.darkest_night.up&effective_combo_points>=cp_max_spend\n# Check if we should be using a filler\nactions.direct+=/variable,name=fok_target_count,value=(buff.clear_the_witnesses.up&(spell_targets.fan_of_knives>=2-(buff.lingering_darkness.up||!talent.vicious_venoms)))||(spell_targets.fan_of_knives>=3-(talent.momentum_of_despair&talent.thrown_precision)+talent.vicious_venoms+talent.blindside)\nactions.direct+=/variable,name=use_filler,value=combo_points<=variable.effective_spend_cp&!variable.cd_soon||variable.not_pooling||active_enemies>1\n# Maintain Caustic Spatter\nactions.direct+=/variable,name=use_caustic_filler,value=talent.caustic_spatter&dot.rupture.ticking&(!debuff.caustic_spatter.up||debuff.caustic_spatter.remains<=2)&combo_points.deficit>=1&active_enemies>1\nactions.direct+=/mutilate,if=variable.use_caustic_filler\nactions.direct+=/ambush,if=variable.use_caustic_filler\n# Fan of Knives at 6cp for Darkest Night\nactions.direct+=/fan_of_knives,if=buff.darkest_night.up&combo_points=6&(!talent.vicious_venoms||spell_targets.fan_of_knives>=2)\n# Fan of Knives at 3+ targets, accounting for various edge cases\nactions.direct+=/fan_of_knives,if=variable.use_filler&!toggle.funnel&variable.fok_target_count\n# Ambush on Blindside/Subterfuge. Do not use Ambush from stealth during Kingsbane & Deathmark.\nactions.direct+=/ambush,if=variable.use_filler&(buff.blindside.up||stealthed.rogue)&(!dot.kingsbane.ticking||debuff.deathmark.down||buff.blindside.up)\n# Tab-Mutilate to apply Deadly Poison at 2 targets if not using Fan of Knives\nactions.direct+=/mutilate,cycle_targets=1,if=variable.use_filler&spell_targets.fan_of_knives=2\n# Fallback Mutilate\nactions.direct+=/mutilate,if=variable.use_filler\n\n# Special Case Trinkets\nactions.items+=/variable,name=base_trinket_condition,value=dot.rupture.ticking&cooldown.deathmark.remains<2&!cooldown.deathmark.ready||dot.deathmark.ticking||boss&fight_remains<=22\nactions.items+=/use_item,name=treacherous_transmitter,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=mad_queens_mandate,if=cooldown.deathmark.remains>=30&!dot.deathmark.ticking||boss&fight_remains<=3\nactions.items+=/use_item,name=junkmaestros_mega_magnet,if=cooldown.deathmark.remains>=30&!dot.deathmark.ticking&!debuff.shiv.up&(!talent.deathstalkers_mark||buff.lingering_darkness.up&buff.junkmaestros_mega_magnet.stack>5)||boss&fight_remains<=10\n## actions.items+=/do_treacherous_transmitter_task,use_off_gcd=1,if=dot.deathmark.ticking&active_enemies=1||buff.realigning_nexus_convergence_divergence.up&buff.realigning_nexus_convergence_divergence.remains<=2||buff.cryptic_instructions.up&buff.cryptic_instructions.remains<=2||buff.errant_manaforge_emission.up&buff.errant_manaforge_emission.remains<=2||fight_remains<=15\nactions.items+=/use_item,name=imperfect_ascendancy_serum,use_off_gcd=1,if=variable.base_trinket_condition\nactions.items+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=dot.rupture.ticking&cooldown.deathmark.remains<2||boss&fight_remains<=22\n# Fallback case for using stat trinkets\nactions.items+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(debuff.deathmark.up||dot.kingsbane.ticking)||(variable.trinket_sync_slot=2&!trinket.2.cooldown.ready&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot||boss&fight_remains<=20\nactions.items+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(debuff.deathmark.up||dot.kingsbane.ticking)||(variable.trinket_sync_slot=1&!trinket.1.cooldown.ready&cooldown.deathmark.remains>20))||!variable.trinket_sync_slot||boss&fight_remains<=20\n\n# Miscellaneous Cooldowns Potion\nactions.misc_cds+=/potion,if=buff.bloodlust.react||boss&fight_remains<30||debuff.deathmark.up\n# Various special racials to be synced with cooldowns\nactions.misc_cds+=/blood_fury,if=debuff.deathmark.up\nactions.misc_cds+=/berserking,if=debuff.deathmark.up\nactions.misc_cds+=/fireblood,if=debuff.deathmark.up\nactions.misc_cds+=/ancestral_call,if=debuff.deathmark.up\n\n# Shiv conditions\nactions.shiv+=/variable,name=shiv_condition,value=!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&spell_targets.fan_of_knives<=5\nactions.shiv+=/variable,name=shiv_kingsbane_condition,value=talent.kingsbane&buff.envenom.up&variable.shiv_condition\n# Shiv for aoe with Arterial Precision\nactions.shiv+=/shiv,if=talent.arterial_precision&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking&spell_targets.fan_of_knives>=4&dot.crimson_tempest.ticking&(target.health.pct<=35&talent.zoldyck_recipe||cooldown.shiv.charges_fractional>=1.9)\n# Shiv cases for Kingsbane\nactions.shiv+=/shiv,if=!talent.lightweight_shiv.enabled&variable.shiv_kingsbane_condition&(dot.kingsbane.ticking&dot.kingsbane.remains<8||!dot.kingsbane.ticking&cooldown.kingsbane.remains>=20)&(!talent.crimson_tempest.enabled||active_enemies=1||dot.crimson_tempest.ticking)\n# Shiv for big Darkest Night Envenom during Lingering Darkness\nactions.shiv+=/shiv,if=buff.darkest_night.up&combo_points>=variable.effective_spend_cp&buff.lingering_darkness.up\nactions.shiv+=/shiv,if=talent.lightweight_shiv.enabled&variable.shiv_kingsbane_condition&(dot.kingsbane.ticking&dot.kingsbane.remains<8||cooldown.kingsbane.remains<=1&cooldown.shiv.charges_fractional>=1.7)\n# Fallback shiv for arterial during deathmark\nactions.shiv+=/shiv,if=debuff.deathmark.up&talent.arterial_precision&!debuff.shiv.up&dot.garrote.ticking&dot.rupture.ticking\n# Fallback if no special cases apply\nactions.shiv+=/shiv,if=!debuff.deathmark.up&!talent.kingsbane&variable.shiv_condition&(dot.crimson_tempest.ticking||talent.amplifying_poison)&(((talent.lightweight_shiv+1)-cooldown.shiv.charges_fractional)*30<cooldown.deathmark.remains)&raid_event.adds.in>20\nactions.shiv+=/shiv,if=!talent.kingsbane&!talent.arterial_precision&variable.shiv_condition&(!talent.crimson_tempest.enabled||active_enemies=1||dot.crimson_tempest.ticking)\n# Dump Shiv on fight end\nactions.shiv+=/shiv,if=boss&fight_remains<=cooldown.shiv.charges*8\n\n# Stealthed Actions\nactions.stealthed+=/pool_resource,for_next=1\n# Apply Deathstalkers Mark if it has fallen off or waiting for Rupture in AoE\nactions.stealthed+=/ambush,if=!debuff.deathstalkers_mark.up&talent.deathstalkers_mark&combo_points<variable.effective_spend_cp&(dot.rupture.ticking||variable.single_target||!talent.subterfuge)\n# Make sure to have Shiv up during Kingsbane as a final check [Hekili] with Lightweight Shiv only\nactions.stealthed+=/shiv,if=talent.kingsbane&dot.kingsbane.ticking&dot.kingsbane.remains<8&(!debuff.shiv.up&debuff.shiv.remains<1)&buff.envenom.up\n# Envenom to maintain the buff during Subterfuge\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&dot.kingsbane.ticking&buff.envenom.remains<=3&(debuff.deathstalkers_mark.up||buff.cold_blood.up||buff.darkest_night.up&combo_points=7)\n# Envenom during Master Assassin in single target\nactions.stealthed+=/envenom,if=effective_combo_points>=variable.effective_spend_cp&buff.master_assassin_aura.up&variable.single_target&(debuff.deathstalkers_mark.up||buff.cold_blood.up||buff.darkest_night.up&combo_points=7)\n# Rupture during Indiscriminate Carnage\nactions.stealthed+=/rupture,cycle_targets=1,if=effective_combo_points>=variable.effective_spend_cp&buff.indiscriminate_carnage_any.up&(refreshable||!settings.cycle)&((!variable.regen_saturated&active_dot.rupture<active_enemies)||!variable.scent_saturation||!dot.rupture.ticking)&target.time_to_die>15\n# Improved Garrote: Apply or Refresh with buffed Garrotes, accounting for Indiscriminate Carnage\nactions.stealthed+=/garrote,cycle_targets=1,if=stealthed.improved_garrote&(remains<12||pmultiplier<=1||(buff.indiscriminate_carnage.up&active_dot.garrote<spell_targets.fan_of_knives))&!variable.single_target&target.time_to_die-remains>2&combo_points.deficit>2-buff.darkest_night.up*2\nactions.stealthed+=/garrote,if=stealthed.improved_garrote&(pmultiplier<=1||refreshable)&combo_points.deficit>=1+2*talent.shrouded_suffocation\n\n# Stealth Cooldowns   Vanish Sync for Improved Garrote with Deathmark\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish to fish for Fateful Ending\nactions.vanish+=/vanish,if=!buff.fatebound_lucky_coin.up&effective_combo_points>=variable.effective_spend_cp&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)\n# Vanish to spread Garrote during Deathmark without Indiscriminate Carnage\nactions.vanish+=/vanish,if=!talent.master_assassin&!talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&combo_points.deficit>=(spell_targets.fan_of_knives>?4)\nactions.vanish+=/pool_resource,for_next=1,extra_amount=45\n# Vanish for cleaving Garrotes with Indiscriminate Carnage\nactions.vanish+=/vanish,if=talent.indiscriminate_carnage&talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&spell_targets.fan_of_knives>2&(target.time_to_die-remains>15||raid_event.adds.in>20)\n# Vanish fallback for Master Assassin\nactions.vanish+=/vanish,if=talent.master_assassin&debuff.deathmark.up&dot.kingsbane.remains<=6+3*talent.subterfuge.rank\n# Vanish fallback for Improved Garrote during Deathmark if no add waves are expected\nactions.vanish+=/vanish,if=talent.improved_garrote&cooldown.garrote.up&(dot.garrote.pmultiplier<=1||dot.garrote.refreshable)&(debuff.deathmark.up||cooldown.deathmark.remains<4)&raid_event.adds.in>30",
},
["Fury"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250308,
["author"] = "SimC",
["desc"] = "2025-03-08: Sync with SimC\n\n2025-02-28: Additional SimC changes\n\n2025-02-26: Sync with SimC",
["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/berserker_stance,toggle=on\nactions.precombat+=/variable,name=treacherous_transmitter_precombat_cast,value=2\nactions.precombat+=/use_item,name=treacherous_transmitter\nactions.precombat+=/recklessness,if=!equipped.fyralath_the_dreamrender\nactions.precombat+=/avatar\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0||trinket.1.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0||trinket.2.cooldown.duration%%cooldown.odyns_fury.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\nactions.precombat+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20\nactions.precombat+=/variable,name=on_gcd_racials,value=buff.recklessness.down&buff.avatar.down&rage<80&buff.sudden_death.down&!cooldown.bladestorm.ready&(!cooldown.execute.ready||!variable.execute_phase)\n\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/charge,if=time<=0.5||movement.distance>5\nactions+=/heroic_leap,if=movement.distance>25\nactions+=/potion,if=boss&(fight_remains>300||boss&fight_remains<35&buff.recklessness.up||boss&fight_remains<25)\nactions+=/use_item,name=treacherous_transmitter\n\n## Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains\nactions+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains\n## If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions+=/use_item,slot=main_hand,if=!equipped.fyralath_the_dreamrender&!equipped.bestinslots&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions+=/use_item,name=bestinslots,if=target.time_to_die>120&(cooldown.avatar.remains>20&(trinket.1.cooldown.remains||trinket.2.cooldown.remains)||cooldown.avatar.remains>20&(!trinket.1.has_cooldown||!trinket.2.has_cooldown))||target.time_to_die<=120&target.health.pct<35&cooldown.avatar.remains>85||boss&target.time_to_die<15\nactions+=/lights_judgment,if=buff.recklessness.down&buff.avatar.down&rage<80&buff.sudden_death.down&!cooldown.bladestorm.ready&(!cooldown.execute.ready||!variable.execute_phase)\nactions+=/bag_of_tricks,if=buff.recklessness.down&buff.avatar.down&rage<80&buff.sudden_death.down&!cooldown.bladestorm.ready&(!cooldown.execute.ready||!variable.execute_phase)\nactions+=/berserking,if=buff.recklessness.up\nactions+=/blood_fury\nactions+=/fireblood\nactions+=/ancestral_call\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.avatar.remains>15&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=slayer,strict=1,if=!talent.lightning_strikes\nactions+=/run_action_list,name=thane,strict=1,if=talent.lightning_strikes\n\nactions.slayer+=/recklessness\nactions.slayer+=/avatar,if=cooldown.recklessness.remains\nactions.slayer+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<=gcd\nactions.slayer+=/champions_spear,if=buff.enrage.up&(cooldown.bladestorm.remains>=2||cooldown.bladestorm.remains>=16&debuff.marked_for_execution.stack=3)\nactions.slayer+=/bladestorm,if=buff.enrage.up&(talent.reckless_abandon&cooldown.avatar.remains>=24||talent.anger_management&cooldown.recklessness.remains>=24)\nactions.slayer+=/odyns_fury,if=(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.slayer+=/whirlwind,if=active_enemies>=2&talent.meat_cleaver&buff.meat_cleaver.down\nactions.slayer+=/execute,if=buff.sudden_death.stack=2&buff.sudden_death.remains<7\nactions.slayer+=/execute,if=buff.sudden_death.up&buff.sudden_death.remains<2\nactions.slayer+=/execute,if=buff.sudden_death.up&buff.imminent_demise.stack<3&cooldown.bladestorm.remains<25\nactions.slayer+=/execute,if=debuff.marked_for_execution.up&buff.brutal_finish.up&debuff.overwhelmed.stack<10\nactions.slayer+=/onslaught,if=talent.tenderize&buff.brutal_finish.up\nactions.slayer+=/rampage,if=!buff.enrage.up||buff.slaughtering_strikes.stack>=4\nactions.slayer+=/crushing_blow,if=action.raging_blow.charges=2||buff.brutal_finish.up&(!debuff.champions_might.up||debuff.champions_might.up&debuff.champions_might.remains>gcd)\nactions.slayer+=/thunderous_roar,if=buff.enrage.up&!buff.brutal_finish.up\nactions.slayer+=/execute,if=buff.ashen_juggernaut.up&buff.ashen_juggernaut.remains<3\nactions.slayer+=/execute,if=debuff.marked_for_execution.stack=3\nactions.slayer+=/bloodbath,if=buff.bloodcraze.stack>=1||(talent.uproar&dot.bloodbath_dot.remains<40&talent.bloodborne)||buff.enrage.up&buff.enrage.remains<gcd\nactions.slayer+=/raging_blow,if=buff.brutal_finish.up&buff.slaughtering_strikes.stack<5&(!debuff.champions_might.up||debuff.champions_might.up&debuff.champions_might.remains>gcd)\nactions.slayer+=/rampage,if=action.raging_blow.charges<=1&rage>=100&talent.anger_management&buff.recklessness.down\nactions.slayer+=/bloodthirst,if=target.health.pct<35&talent.vicious_contempt&buff.brutal_finish.up&buff.enrage.up&buff.bloodcraze.stack>=2||active_enemies>=5\nactions.slayer+=/rampage,if=rage>=130\nactions.slayer+=/rampage,if=rage>=115&talent.reckless_abandon&buff.recklessness.up&buff.slaughtering_strikes.stack>=3\nactions.slayer+=/bloodbath,if=(buff.bloodcraze.stack>=4||crit_pct_current>=85)\nactions.slayer+=/crushing_blow\nactions.slayer+=/bloodbath,if=target.health.pct<35&talent.vicious_contempt\nactions.slayer+=/bloodbath\nactions.slayer+=/raging_blow,if=buff.opportunist.up\nactions.slayer+=/bloodthirst,if=target.health.pct<35&talent.vicious_contempt&buff.bloodcraze.stack>=2\nactions.slayer+=/rampage,if=rage>=100&talent.anger_management&buff.recklessness.up\nactions.slayer+=/bloodthirst,if=buff.bloodcraze.stack>=4||crit_pct_current>=85\nactions.slayer+=/raging_blow\nactions.slayer+=/bloodthirst\nactions.slayer+=/execute,if=target.health.pct<35&talent.massacre||target.health.pct<20\nactions.slayer+=/rampage,if=talent.unbridled_ferocity\nactions.slayer+=/rampage\nactions.slayer+=/execute\nactions.slayer+=/onslaught,if=talent.tenderize\nactions.slayer+=/whirlwind,if=talent.improved_whirlwind\nactions.slayer+=/storm_bolt,if=buff.bladestorm.up\n\nactions.thane+=/recklessness\nactions.thane+=/avatar\nactions.thane+=/ravager\nactions.thane+=/thunder_blast,if=buff.enrage.up&talent.meat_cleaver\nactions.thane+=/thunder_clap,if=buff.meat_cleaver.down&talent.meat_cleaver&active_enemies>=2\nactions.thane+=/thunderous_roar,if=buff.enrage.up\nactions.thane+=/champions_spear,if=buff.enrage.up\nactions.thane+=/odyns_fury,if=(buff.enrage.up||talent.titanic_rage)&cooldown.avatar.remains\nactions.thane+=/rampage,if=buff.enrage.down\nactions.thane+=/execute,if=talent.ashen_juggernaut&buff.ashen_juggernaut.remains<=gcd&buff.enrage.up\nactions.thane+=/rampage,if=talent.bladestorm&cooldown.bladestorm.remains<=gcd&!debuff.champions_might.up\nactions.thane+=/bladestorm,if=buff.enrage.up&talent.unhinged\nactions.thane+=/bloodbath,if=buff.bloodcraze.stack>=2\nactions.thane+=/rampage,if=rage>=115&talent.reckless_abandon&buff.recklessness.up&buff.slaughtering_strikes.stack>=3\nactions.thane+=/crushing_blow\nactions.thane+=/bloodbath\nactions.thane+=/onslaught,if=talent.tenderize\nactions.thane+=/rampage\nactions.thane+=/bloodthirst,if=talent.vicious_contempt&target.health.pct<35&buff.bloodcraze.stack>=2||!dot.ravager.remains&buff.bloodcraze.stack>=3||active_enemies>=6\nactions.thane+=/raging_blow\nactions.thane+=/execute,if=talent.ashen_juggernaut\nactions.thane+=/thunder_blast\nactions.thane+=/bloodthirst\nactions.thane+=/execute\nactions.thane+=/thunder_clap",
["version"] = 20250308,
["warnings"] = "The import for 'thane' required some automated changes.\nLine 4: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 5: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 8: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 10: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\nLine 11: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 12: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 14: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 17: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 19: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 21: Converted 'talent.ashen_juggernaut' to 'talent.ashen_juggernaut.enabled' (1x).\n\nThe import for 'slayer' required some automated changes.\nLine 5: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 5: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 6: Converted 'talent.titanic_rage' to 'talent.titanic_rage.enabled' (1x).\nLine 7: Converted 'talent.meat_cleaver' to 'talent.meat_cleaver.enabled' (1x).\nLine 12: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 18: Converted 'talent.uproar' to 'talent.uproar.enabled' (1x).\nLine 18: Converted 'talent.bloodborne' to 'talent.bloodborne.enabled' (1x).\nLine 20: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 21: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 23: Converted 'talent.reckless_abandon' to 'talent.reckless_abandon.enabled' (1x).\nLine 26: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 29: Converted 'talent.vicious_contempt' to 'talent.vicious_contempt.enabled' (1x).\nLine 30: Converted 'talent.anger_management' to 'talent.anger_management.enabled' (1x).\nLine 34: Converted 'talent.massacre' to 'talent.massacre.enabled' (1x).\nLine 35: Converted 'talent.unbridled_ferocity' to 'talent.unbridled_ferocity.enabled' (1x).\nLine 38: Converted 'talent.tenderize' to 'talent.tenderize.enabled' (1x).\nLine 39: Converted 'talent.improved_whirlwind' to 'talent.improved_whirlwind.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 6: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 6: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 6: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 6: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 7: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 7: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 7: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 8: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 9: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 10: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 11: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 11: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 18: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\nLine 19: Converted 'talent.lightning_strikes' to 'talent.lightning_strikes.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 7: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 8: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 9: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0||trinket.t1.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 10: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 10: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 10: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%%cooldown.odyns_fury.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0||trinket.t2.cooldown.duration%cooldown.odyns_fury.duration=0)'.\nLine 11: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 12: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 12: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 13: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 13: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 13: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 13: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 13: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 13: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 13: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 13: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 13: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 14: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 15: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nImported 4 action lists.\n",
["spec"] = 72,
["lists"] = {
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "berserker_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "treacherous_transmitter_precombat_cast",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["criteria"] = "! equipped.fyralath_the_dreamrender",
["action"] = "recklessness",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar or odyns fur. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t1.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 || trinket.t2.cooldown.duration % cooldown.odyns_fury.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.recklessness.down & buff.avatar.down & rage < 80 & buff.sudden_death.down & ! cooldown.bladestorm.ready & ( ! cooldown.execute.ready || ! variable.execute_phase )",
["var_name"] = "on_gcd_racials",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 5",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "movement.distance > 25",
["action"] = "heroic_leap",
},
{
["enabled"] = true,
["criteria"] = "boss & ( fight_remains > 300 || boss & fight_remains < 35 & buff.recklessness.up || boss & fight_remains < 25 )",
["action"] = "potion",
},
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["criteria"] = "! equipped.fyralath_the_dreamrender & ! equipped.bestinslots & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["slot"] = "main_hand",
},
{
["enabled"] = true,
["name"] = "bestinslots",
["action"] = "bestinslots",
["criteria"] = "target.time_to_die > 120 & ( cooldown.avatar.remains > 20 & ( trinket.t1.cooldown.remains || trinket.t2.cooldown.remains ) || cooldown.avatar.remains > 20 & ( ! trinket.t1.has_cooldown || ! trinket.t2.has_cooldown ) ) || target.time_to_die <= 120 & target.health.pct < 35 & cooldown.avatar.remains > 85 || boss & target.time_to_die < 15",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.down & buff.avatar.down & rage < 80 & buff.sudden_death.down & ! cooldown.bladestorm.ready & ( ! cooldown.execute.ready || ! variable.execute_phase )",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.down & buff.avatar.down & rage < 80 & buff.sudden_death.down & ! cooldown.bladestorm.ready & ( ! cooldown.execute.ready || ! variable.execute_phase )",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "buff.recklessness.up",
["action"] = "berserking",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.lightning_strikes.enabled",
["list_name"] = "slayer",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.lightning_strikes.enabled",
["list_name"] = "thane",
},
},
["slayer"] = {
{
["action"] = "recklessness",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.recklessness.remains",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains <= gcd.max",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( cooldown.bladestorm.remains >= 2 || cooldown.bladestorm.remains >= 16 & debuff.marked_for_execution.stack = 3 )",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ( talent.reckless_abandon.enabled & cooldown.avatar.remains >= 24 || talent.anger_management.enabled & cooldown.recklessness.remains >= 24 )",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2 & talent.meat_cleaver.enabled & buff.meat_cleaver.down",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.stack = 2 & buff.sudden_death.remains < 7",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & buff.sudden_death.remains < 2",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & buff.imminent_demise.stack < 3 & cooldown.bladestorm.remains < 25",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.up & buff.brutal_finish.up & debuff.overwhelmed.stack < 10",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled & buff.brutal_finish.up",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "! buff.enrage.up || buff.slaughtering_strikes.stack >= 4",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "action.raging_blow.charges = 2 || buff.brutal_finish.up & ( ! debuff.champions_might.up || debuff.champions_might.up & debuff.champions_might.remains > gcd.max )",
["action"] = "crushing_blow",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & ! buff.brutal_finish.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.ashen_juggernaut.up & buff.ashen_juggernaut.remains < 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodcraze.stack >= 1 || ( talent.uproar.enabled & dot.bloodbath_dot.remains < 40 & talent.bloodborne.enabled ) || buff.enrage.up & buff.enrage.remains < gcd.max",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "buff.brutal_finish.up & buff.slaughtering_strikes.stack < 5 & ( ! debuff.champions_might.up || debuff.champions_might.up & debuff.champions_might.remains > gcd.max )",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "action.raging_blow.charges <= 1 & rage >= 100 & talent.anger_management.enabled & buff.recklessness.down",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled & buff.brutal_finish.up & buff.enrage.up & buff.bloodcraze.stack >= 2 || active_enemies >= 5",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "rage >= 130",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "rage >= 115 & talent.reckless_abandon.enabled & buff.recklessness.up & buff.slaughtering_strikes.stack >= 3",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "( buff.bloodcraze.stack >= 4 || crit_pct_current >= 85 )",
["action"] = "bloodbath",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled",
["action"] = "bloodbath",
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "raging_blow",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.vicious_contempt.enabled & buff.bloodcraze.stack >= 2",
["action"] = "bloodthirst",
},
{
["enabled"] = true,
["criteria"] = "rage >= 100 & talent.anger_management.enabled & buff.recklessness.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodcraze.stack >= 4 || crit_pct_current >= 85",
["action"] = "bloodthirst",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 35 & talent.massacre.enabled || target.health.pct < 20",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.unbridled_ferocity.enabled",
["action"] = "rampage",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["enabled"] = true,
["criteria"] = "talent.improved_whirlwind.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["thane"] = {
{
["action"] = "recklessness",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.meat_cleaver.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.meat_cleaver.down & talent.meat_cleaver.enabled & active_enemies >= 2",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "thunderous_roar",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "( buff.enrage.up || talent.titanic_rage.enabled ) & cooldown.avatar.remains",
["action"] = "odyns_fury",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.down",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled & buff.ashen_juggernaut.remains <= gcd.max & buff.enrage.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "talent.bladestorm.enabled & cooldown.bladestorm.remains <= gcd.max & ! debuff.champions_might.up",
["action"] = "rampage",
},
{
["enabled"] = true,
["criteria"] = "buff.enrage.up & talent.unhinged.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodcraze.stack >= 2",
["action"] = "bloodbath",
},
{
["enabled"] = true,
["criteria"] = "rage >= 115 & talent.reckless_abandon.enabled & buff.recklessness.up & buff.slaughtering_strikes.stack >= 3",
["action"] = "rampage",
},
{
["action"] = "crushing_blow",
["enabled"] = true,
},
{
["action"] = "bloodbath",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.tenderize.enabled",
["action"] = "onslaught",
},
{
["action"] = "rampage",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.vicious_contempt.enabled & target.health.pct < 35 & buff.bloodcraze.stack >= 2 || ! dot.ravager.remains & buff.bloodcraze.stack >= 3 || active_enemies >= 6",
["action"] = "bloodthirst",
},
{
["action"] = "raging_blow",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.ashen_juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "bloodthirst",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
},
},
},
["Restoration Shaman"] = {
["builtIn"] = true,
["date"] = 20241020,
["spec"] = 264,
["desc"] = "2024-07-30: The War Within",
["profile"] = "actions.precombat+=/earthliving_weapon\nactions.precombat+=/tidecallers_guard\nactions.precombat+=/water_shield,if=buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank||(!buff.water_shield.up&settings.healing_mode)\nactions.precombat+=/lightning_shield,if=(buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank)&settings.second_shield=lightning_shield\nactions.precombat+=/earth_shield,if=(buff.water_shield.up+buff.earth_shield.up+buff.lightning_shield.up<1+talent.elemental_orbit.rank)&settings.second_shield=earth_shield\nactions.precombat+=/earth_elemental\nactions.precombat+=/potion\n\nactions+=/spiritwalkers_grace,moving=1,if=movement.distance>6\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/call_action_list,name=healing,strict=1,if=settings.healing_mode\nactions+=/potion\nactions+=/use_items\nactions+=/blood_fury\nactions+=/berserking\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/surging_totem,if=talent.acid_rain\nactions+=/healing_rain,if=!moving&talent.acid_rain\nactions+=/flame_shock,cycle_targets=1,if=active_enemies<3&refreshable\n# actions+=/primordial_wave\nactions+=/lava_burst,if=(active_enemies=1||active_enemies=2&buff.lava_surge.up)&dot.flame_shock.remains>cast_time&cooldown_react\nactions+=/earth_elemental\nactions+=/lightning_bolt,if=spell_targets.chain_lightning<2||!talent.chain_lightning\nactions+=/chain_lightning,if=spell_targets.chain_lightning>1\nactions+=/flame_shock,moving=1\nactions+=/frost_shock,moving=1\n\nactions.healing+=/downpour,if=buff.unleash_life.up||buff.downpour.up&buff.downpour.remains<2\nactions.healing+=/mana_tide_totem,if=mana.pct<85\nactions.healing+=/totemic_recall,if=prev_gcd.earthen_wall_totem\nactions.healing+=/earthen_wall_totem\nactions.healing+=/chain_heal,if=buff.high_tide.up\nactions.healing+=/call_action_list,strict=1,name=unleash,if=buff.unleash_life.up\nactions.healing+=/surging_totem\nactions.healing+=/healing_rain\nactions.healing+=/earth_shield,if=active_dot.earth_shield<1+talent.elemental_orbit.rank&buff.earth_shield.up\nactions.healing+=/earth_shield,if=(!buff.earth_shield.up&settings.second_shield=earth_shield&talent.elemental_orbit.enabled)\nactions.healing+=/healing_stream_totem,if=totem.surging_totem.up&!totem.healing_stream_totem.up\nactions.healing+=/riptide,if=cooldown.riptide.charges=cooldown.riptide.charges_max\nactions.healing+=/unleash_life,if=talent.call_of_the_ancestors.enabled||cooldown.wellspring.remains<2||(cooldown.surging_totem.remains<3||buff.downpour.up&buff.downpour.remains>3)\nactions.healing+=/wellspring\n\nactions.unleash+=/downpour\nactions.unleash+=/wellspring\nactions.unleash+=/riptide",
["version"] = 20241020,
["warnings"] = "The import for 'default' required some automated changes.\nLine 11: Converted 'talent.acid_rain' to 'talent.acid_rain.enabled' (1x).\nLine 12: Converted 'talent.acid_rain' to 'talent.acid_rain.enabled' (1x).\nLine 16: Converted 'talent.chain_lightning' to 'talent.chain_lightning.enabled' (1x).\n\nImported 4 action lists.\n",
["lists"] = {
["precombat"] = {
{
["action"] = "earthliving_weapon",
["enabled"] = true,
},
{
["action"] = "tidecallers_guard",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank || ( ! buff.water_shield.up & settings.healing_mode )",
["action"] = "water_shield",
},
{
["enabled"] = true,
["criteria"] = "( buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank ) & settings.second_shield = lightning_shield",
["action"] = "lightning_shield",
},
{
["enabled"] = true,
["criteria"] = "( buff.water_shield.up + buff.earth_shield.up + buff.lightning_shield.up < 1 + talent.elemental_orbit.rank ) & settings.second_shield = earth_shield",
["action"] = "earth_shield",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["action"] = "potion",
["enabled"] = true,
},
},
["healing"] = {
{
["enabled"] = true,
["criteria"] = "buff.unleash_life.up || buff.downpour.up & buff.downpour.remains < 2",
["action"] = "downpour",
},
{
["enabled"] = true,
["criteria"] = "mana.pct < 85",
["action"] = "mana_tide_totem",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.earthen_wall_totem",
["action"] = "totemic_recall",
},
{
["action"] = "earthen_wall_totem",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.high_tide.up",
["action"] = "chain_heal",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "buff.unleash_life.up",
["list_name"] = "unleash",
},
{
["action"] = "surging_totem",
["enabled"] = true,
},
{
["action"] = "healing_rain",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.earth_shield < 1 + talent.elemental_orbit.rank & buff.earth_shield.up",
["action"] = "earth_shield",
},
{
["enabled"] = true,
["criteria"] = "( ! buff.earth_shield.up & settings.second_shield = earth_shield & talent.elemental_orbit.enabled )",
["action"] = "earth_shield",
},
{
["enabled"] = true,
["criteria"] = "totem.surging_totem.up & ! totem.healing_stream_totem.up",
["action"] = "healing_stream_totem",
},
{
["enabled"] = true,
["criteria"] = "cooldown.riptide.charges = cooldown.riptide.charges_max",
["action"] = "riptide",
},
{
["enabled"] = true,
["criteria"] = "talent.call_of_the_ancestors.enabled || cooldown.wellspring.remains < 2 || ( cooldown.surging_totem.remains < 3 || buff.downpour.up & buff.downpour.remains > 3 )",
["action"] = "unleash_life",
},
{
["action"] = "wellspring",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["enable_moving"] = true,
["action"] = "spiritwalkers_grace",
["criteria"] = "movement.distance > 6",
["moving"] = 1,
},
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "settings.healing_mode",
["list_name"] = "healing",
},
{
["action"] = "potion",
["enabled"] = true,
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.acid_rain.enabled",
["action"] = "surging_totem",
},
{
["enabled"] = true,
["criteria"] = "! moving & talent.acid_rain.enabled",
["action"] = "healing_rain",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "active_enemies < 3 & refreshable",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["description"] = "actions.default+=/primordial_wave",
["criteria"] = "( active_enemies = 1 || active_enemies = 2 & buff.lava_surge.up ) & dot.flame_shock.remains > cast_time & cooldown_react",
["action"] = "lava_burst",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.chain_lightning < 2 || ! talent.chain_lightning.enabled",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.chain_lightning > 1",
["action"] = "chain_lightning",
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "flame_shock",
["enabled"] = true,
},
{
["moving"] = 1,
["enable_moving"] = true,
["action"] = "frost_shock",
["enabled"] = true,
},
},
["unleash"] = {
{
["action"] = "downpour",
["enabled"] = true,
},
{
["action"] = "wellspring",
["enabled"] = true,
},
{
["action"] = "riptide",
["enabled"] = true,
},
},
},
["author"] = "Hekili",
},
["Subtlety"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/rogue_subtlety.simc",
["builtIn"] = true,
["date"] = 20250406,
["spec"] = 261,
["desc"] = "2025-04-06: SimC Sync\n2025-03-25: SimC Sync\n2025-03-06: Workaround for rupture spam re: Flagellation cooldown\n2025-03-01: Sync with SimC",
["lists"] = {
["build"] = {
{
["enabled"] = true,
["criteria"] = "buff.shadow_dance.up & ! used_for_danse || ! variable.stealth & buff.shadow_blades.up",
["action"] = "backstab",
["description"] = "Combo Point Builder",
},
{
["enabled"] = true,
["criteria"] = "buff.shadow_dance.up & ! used_for_danse || ! variable.stealth & buff.shadow_blades.up",
["action"] = "gloomblade",
},
{
["enabled"] = true,
["criteria"] = "debuff.find_weakness.remains <= 2 & active_enemies = 2 & talent.unseen_blade.enabled || ! used_for_danse & ! talent.premeditation.enabled",
["action"] = "shadowstrike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.lingering_darkness.up || talent.deathstalkers_mark.enabled & cooldown.shadow_blades.remains >= 32 & active_enemies >= 3 || talent.unseen_blade.enabled & buff.symbols_of_death.up & active_enemies >= 4",
["action"] = "shuriken_tornado",
},
{
["enabled"] = true,
["criteria"] = "buff.clear_the_witnesses.up & ( active_enemies >= 2 || ! buff.symbols_of_death.up )",
["action"] = "shuriken_storm",
},
{
["enabled"] = true,
["criteria"] = "talent.deathstalkers_mark.enabled & ! debuff.deathstalkers_mark.up & active_enemies >= 3 & ( buff.shadow_blades.up || buff.premeditation.up || talent.the_rotten.enabled )",
["action"] = "shadowstrike",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.deathstalkers_mark.enabled & active_enemies >= ( 2 + 3 * buff.shadow_dance.up )",
["action"] = "shuriken_storm",
},
{
["enabled"] = true,
["criteria"] = "talent.unseen_blade.enabled & ( buff.flawless_form.up & active_enemies >= 3 & ! variable.stealth || buff.the_rotten.stack = 1 & active_enemies >= 7 & buff.shadow_dance.up )",
["action"] = "shuriken_storm",
},
{
["action"] = "shadowstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "combo_points.deficit >= 3",
["action"] = "goremaws_bite",
},
{
["action"] = "gloomblade",
["enabled"] = true,
},
{
["action"] = "backstab",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "stealth",
["enabled"] = true,
},
{
["action"] = "kick",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_dance.up || buff.stealth.up || buff.vanish.up",
["var_name"] = "stealth",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_dance.up || buff.darkest_night.up || active_enemies >= 8 & ! talent.replicating_shadows.enabled & talent.unseen_blade.enabled",
["var_name"] = "skip_rupture",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( dot.rupture.ticking || variable.skip_rupture ) & ( buff.slice_and_dice.up || active_enemies <= 2 )",
["var_name"] = "maintenance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.shadow_dance.up || ( cooldown.flagellation.remains < 40 & cooldown.flagellation.remains > 20 & talent.death_perception.enabled )",
["var_name"] = "secret",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.shadow_blades.up & buff.shadow_dance.up ) || ! talent.shadow_blades.enabled & buff.symbols_of_death.up || boss & fight_remains < 20",
["var_name"] = "racial_sync",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points <= 1 || buff.darkest_night.up & combo_points >= 7 || effective_combo_points >= 6 & talent.unseen_blade.enabled",
["var_name"] = "shd_cp",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cooldowns",
["list_name"] = "cds",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "blood_fury",
["description"] = "Racials",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync & buff.shadow_dance.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.racial_sync",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "treacherous_transmitter",
["description"] = "Items (Trinkets)",
["criteria"] = "cooldown.flagellation.remains <= 2 || boss & fight_remains <= 15",
["name"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "imperfect_ascendancy_serum",
["use_off_gcd"] = 1,
["criteria"] = "dot.rupture.ticking & buff.flagellation_buff.up",
["name"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["name"] = "mad_queens_mandate",
["action"] = "mad_queens_mandate",
["criteria"] = "( ! talent.lingering_darkness.enabled || buff.lingering_darkness.up || equipped.treacherous_transmitter ) & ( ! equipped.treacherous_transmitter || cooldown.treacherous_transmitter.remains > 20 ) || boss & fight_remains <= 15",
},
{
["enabled"] = true,
["slots"] = "trinket1",
["action"] = "trinket1",
["criteria"] = "( variable.trinket_sync_slot = 1 & ( buff.shadow_blades.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 2 & ( ! trinket.t2.cooldown.ready & cooldown.shadow_blades.remains > 20 ) ) || ! variable.trinket_sync_slot )",
},
{
["enabled"] = true,
["slots"] = "trinket2",
["action"] = "trinket2",
["criteria"] = "( variable.trinket_sync_slot = 2 & ( buff.shadow_blades.up || boss & fight_remains <= 20 ) || ( variable.trinket_sync_slot = 1 & ( ! trinket.t1.cooldown.ready & cooldown.shadow_blades.remains > 20 ) ) || ! variable.trinket_sync_slot )",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Cooldowns for Stealth",
["criteria"] = "! variable.stealth",
["list_name"] = "stealth_cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Finishing Rules",
["criteria"] = "! buff.darkest_night.up & effective_combo_points >= 6 || buff.darkest_night.up & combo_points = cp_max_spend",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Combo Point Builder",
["list_name"] = "build",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Filler, Spells used if you can use nothing else.",
["criteria"] = "! variable.stealth",
["list_name"] = "fill",
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "toggle.funnel",
["var_name"] = "priority_rotation",
["description"] = "Swap to priority rotation if the variable is enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t1.has_use_buff & ( ! trinket.t2.has_use_buff || trinket.t1.is.treacherous_transmitter || trinket.t1.cooldown.duration >= trinket.t2.cooldown.duration )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2",
["var_name"] = "trinket_sync_slot",
["criteria"] = "trinket.t2.has_use_buff & ( ! trinket.t1.has_use_buff || trinket.t2.cooldown.duration > trinket.t1.cooldown.duration )",
},
{
["action"] = "stealth",
["enabled"] = true,
},
},
["finish"] = {
{
["enabled"] = true,
["op"] = "setif",
["criteria"] = "! toggle.cooldowns",
["var_name"] = "cooldowns_soon",
["value"] = "false",
["action"] = "variable",
["value_else"] = "cooldown.shadow_blades.remains <= 13 & cooldown.flagellation.remains < 10 & ( dot.rupture.remains < ( cooldown.shadow_blades.remains + buff.shadow_blades.duration ) )",
["description"] = "[Syrif] - This variable prevents rupture spam when CDs are toggled off, or otherwise desynced due to dungeon gameplay environment ",
},
{
["enabled"] = true,
["criteria"] = "variable.secret",
["action"] = "secret_technique",
},
{
["enabled"] = true,
["criteria"] = "! variable.skip_rupture & ( ! dot.rupture.ticking || refreshable ) & target.time_to_die - remains > 6",
["action"] = "rupture",
["description"] = "Maintenance Finisher",
},
{
["enabled"] = true,
["criteria"] = "! variable.skip_rupture & ! variable.priority_rotation & target.time_to_die >= ( 2 * combo_points ) & refreshable & active_enemies >= 2",
["action"] = "rupture",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.unseen_blade.enabled & variable.cooldowns_soon & dot.rupture.remains < fight_remains",
["action"] = "rupture",
["description"] = "[Syrif] Uses Hekili-specific variable as a workaround",
},
{
["enabled"] = true,
["criteria"] = "debuff.fazed.up & cooldown.flagellation.remains >= 20",
["action"] = "coup_de_grace",
["description"] = "Direct Damage Finisher",
},
{
["enabled"] = true,
["criteria"] = "! variable.priority_rotation & variable.maintenance & ( ( ( active_enemies >= 2 & talent.deathstalkers_mark.enabled & ( ! buff.darkest_night.up || buff.shadow_dance.up & active_enemies >= 5 ) ) || talent.unseen_blade.enabled & active_enemies >= 7 ) || action.coup_de_grace.ready )",
["action"] = "black_powder",
},
{
["action"] = "eviscerate",
["enabled"] = true,
},
},
["cds"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.secret_technique.up & buff.shadow_dance.up & combo_points >= 6 & variable.secret & ( ! talent.flagellation.enabled || buff.flagellation_persist.up )",
["action"] = "cold_blood",
["description"] = "Cooldowns",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || boss & fight_remains < 30 || buff.flagellation_buff.up",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "( buff.symbols_of_death.remains <= 3 & variable.maintenance & ( ! talent.flagellation.enabled || cooldown.flagellation.remains >= 30 - 15 * ! talent.death_perception.enabled & cooldown.secret_technique.remains < 8 || ! talent.death_perception.enabled ) || boss & fight_remains <= 15 & ( raid || buff.symbols_of_death.down ) )",
["action"] = "symbols_of_death",
},
{
["enabled"] = true,
["criteria"] = "variable.maintenance & variable.shd_cp & buff.shadow_dance.up & ! buff.premeditation.up",
["action"] = "shadow_blades",
},
{
["enabled"] = true,
["criteria"] = "buff.shadow_dance.remains > 2 & ! buff.thistle_tea.up",
["action"] = "thistle_tea",
},
{
["enabled"] = true,
["criteria"] = "combo_points >= 5 & cooldown.shadow_blades.remains <= 3 || boss & fight_remains <= 25",
["action"] = "flagellation",
},
},
["stealth_cds"] = {
{
["enabled"] = true,
["criteria"] = "variable.shd_cp & variable.maintenance & cooldown.secret_technique.remains <= 24 & ( buff.symbols_of_death.remains >= 6 || buff.shadow_blades.remains >= 6 ) || boss & fight_remains <= 10",
["action"] = "shadow_dance",
["description"] = "Shadow Dance, Vanish, Shadowmeld",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & ! buff.subterfuge.up & effective_combo_points <= 3",
["action"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "energy >= 40 & combo_points.deficit >= 3",
["action"] = "shadowmeld",
},
},
["fill"] = {
{
["enabled"] = true,
["criteria"] = "energy.deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
["description"] = "This list usually contains Cooldowns with neglectable impact that causes global cooldowns",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
},
["version"] = 20250406,
["warnings"] = "The import for 'default' required some automated changes.\nLine 4: Converted 'talent.replicating_shadows' to 'talent.replicating_shadows.enabled' (1x).\nLine 4: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 6: Converted 'talent.death_perception' to 'talent.death_perception.enabled' (1x).\nLine 7: Converted 'talent.shadow_blades' to 'talent.shadow_blades.enabled' (1x).\nLine 8: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 16: Converted 'talent.lingering_darkness' to 'talent.lingering_darkness.enabled' (1x).\nLine 16: Converted 'trinket.treacherous_transmitter.cooldown.remains' to 'cooldown.treacherous_transmitter.remains'.\nLine 17: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready' (1x).\nLine 17: Converted 'trinket.2.cooldown.ready' to 'trinket.t2.cooldown.ready'.\nLine 18: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready' (1x).\nLine 18: Converted 'trinket.1.cooldown.ready' to 'trinket.t1.cooldown.ready'.\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 3: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 3: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 3: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 4: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 4: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\n\nThe import for 'finish' required some automated changes.\nLine 5: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 7: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 7: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\n\nThe import for 'cds' required some automated changes.\nLine 1: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 3: Converted 'talent.flagellation' to 'talent.flagellation.enabled' (1x).\nLine 3: Converted 'talent.death_perception' to 'talent.death_perception.enabled' (1x).\nLine 3: Converted 'talent.death_perception' to 'talent.death_perception.enabled' (1x).\n\nThe import for 'build' required some automated changes.\nLine 3: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 3: Converted 'talent.premeditation' to 'talent.premeditation.enabled' (1x).\nLine 4: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 4: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\nLine 6: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 6: Converted 'talent.the_rotten' to 'talent.the_rotten.enabled' (1x).\nLine 7: Converted 'talent.deathstalkers_mark' to 'talent.deathstalkers_mark.enabled' (1x).\nLine 8: Converted 'talent.unseen_blade' to 'talent.unseen_blade.enabled' (1x).\n\nImported 7 action lists.\n",
["profile"] = "## https://github.com/simulationcraft/simc/commits/thewarwithin/ActionPriorityLists/rogue_subtlety.simc\n## Up to date with SimC: April 5 2025 - ed7963f\n\nactions.precombat+=/apply_poison\n# Swap to priority rotation if the variable is enabled\nactions.precombat+=/variable,name=priority_rotation,value=toggle.funnel\nactions.precombat+=/variable,name=trinket_sync_slot,value=1,if=trinket.1.has_use_buff&(!trinket.2.has_use_buff||trinket.1.is.treacherous_transmitter||trinket.1.cooldown.duration>=trinket.2.cooldown.duration)\nactions.precombat+=/variable,name=trinket_sync_slot,value=2,if=trinket.2.has_use_buff&(!trinket.1.has_use_buff||trinket.2.cooldown.duration>trinket.1.cooldown.duration)\nactions.precombat+=/stealth\n\n\nactions+=/stealth\nactions+=/kick\nactions+=/variable,name=stealth,value=buff.shadow_dance.up||buff.stealth.up||buff.vanish.up\n## [Syrif] -Replaced below variable with active_enemies\n## actions+=/variable,name=targets,value=spell_targets.shuriken_storm\nactions+=/variable,name=skip_rupture,value=buff.shadow_dance.up||buff.darkest_night.up||active_enemies>=8&!talent.replicating_shadows&talent.unseen_blade\nactions+=/variable,name=maintenance,value=(dot.rupture.ticking||variable.skip_rupture)&(buff.slice_and_dice.up||active_enemies<=2)\nactions+=/variable,name=secret,value=buff.shadow_dance.up||(cooldown.flagellation.remains<40&cooldown.flagellation.remains>20&talent.death_perception)\nactions+=/variable,name=racial_sync,value=(buff.shadow_blades.up&buff.shadow_dance.up)||!talent.shadow_blades&buff.symbols_of_death.up||boss&fight_remains<20\nactions+=/variable,name=shd_cp,value=combo_points<=1||buff.darkest_night.up&combo_points>=7||effective_combo_points>=6&talent.unseen_blade\n# Cooldowns\nactions+=/call_action_list,name=cds\n# Racials\nactions+=/blood_fury,if=variable.racial_sync\nactions+=/berserking,if=variable.racial_sync\nactions+=/fireblood,if=variable.racial_sync&buff.shadow_dance.up\nactions+=/ancestral_call,if=variable.racial_sync\n## actions+=/invoke_external_buff,name=power_infusion,if=buff.shadow_dance.up\n# Items (Trinkets)\nactions+=/use_item,name=treacherous_transmitter,if=cooldown.flagellation.remains<=2||boss&fight_remains<=15\n## actions+=/do_treacherous_transmitter_task,if=buff.shadow_dance.up||boss&fight_remains<=15\nactions+=/use_item,name=imperfect_ascendancy_serum,use_off_gcd=1,if=dot.rupture.ticking&buff.flagellation_buff.up\nactions+=/use_item,name=mad_queens_mandate,if=(!talent.lingering_darkness||buff.lingering_darkness.up||equipped.treacherous_transmitter)&(!equipped.treacherous_transmitter||trinket.treacherous_transmitter.cooldown.remains>20)||boss&fight_remains<=15\nactions+=/use_items,slots=trinket1,if=(variable.trinket_sync_slot=1&(buff.shadow_blades.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=2&(!trinket.2.cooldown.ready&cooldown.shadow_blades.remains>20))||!variable.trinket_sync_slot)\nactions+=/use_items,slots=trinket2,if=(variable.trinket_sync_slot=2&(buff.shadow_blades.up||boss&fight_remains<=20)||(variable.trinket_sync_slot=1&(!trinket.1.cooldown.ready&cooldown.shadow_blades.remains>20))||!variable.trinket_sync_slot)\n\n# Cooldowns for Stealth\nactions+=/call_action_list,name=stealth_cds,if=!variable.stealth\n# Finishing Rules\nactions+=/call_action_list,name=finish,if=!buff.darkest_night.up&effective_combo_points>=6||buff.darkest_night.up&combo_points=cp_max_spend\n# Combo Point Builder\nactions+=/call_action_list,name=build\n# Filler, Spells used if you can use nothing else.\nactions+=/call_action_list,name=fill,if=!variable.stealth\n\n# Combo Point Builder\nactions.build+=/backstab,if=buff.shadow_dance.up&!used_for_danse||!variable.stealth&buff.shadow_blades.up\nactions.build+=/gloomblade,if=buff.shadow_dance.up&!used_for_danse||!variable.stealth&buff.shadow_blades.up\nactions.build+=/shadowstrike,cycle_targets=1,if=debuff.find_weakness.remains<=2&active_enemies=2&talent.unseen_blade||!used_for_danse&!talent.premeditation\nactions.build+=/shuriken_tornado,if=buff.lingering_darkness.up||talent.deathstalkers_mark&cooldown.shadow_blades.remains>=32&active_enemies>=3||talent.unseen_blade&(!variable.stealth||active_enemies>=3)&(buff.symbols_of_death.up||!raid_event.adds.up)\nactions.build+=/shuriken_storm,if=buff.clear_the_witnesses.up&(active_enemies>=2||!buff.symbols_of_death.up)\nactions.build+=/shadowstrike,cycle_targets=1,if=talent.deathstalkers_mark&!debuff.deathstalkers_mark.up&active_enemies>=3&(buff.shadow_blades.up||buff.premeditation.up||talent.the_rotten)\nactions.build+=/shuriken_storm,if=talent.deathstalkers_mark&active_enemies>=(2+3*buff.shadow_dance.up)\nactions.build+=/shuriken_storm,if=talent.unseen_blade&(buff.flawless_form.up&active_enemies>=3&!variable.stealth||buff.the_rotten.stack=1&active_enemies>=6&buff.shadow_dance.up)\nactions.build+=/shadowstrike\nactions.build+=/goremaws_bite,if=combo_points.deficit>=3\nactions.build+=/gloomblade\nactions.build+=/backstab\n\n# Cooldowns\nactions.cds+=/cold_blood,if=cooldown.secret_technique.up&buff.shadow_dance.up&combo_points>=6&variable.secret&(!talent.flagellation||buff.flagellation_persist.up)\nactions.cds+=/potion,if=buff.bloodlust.up||boss&fight_remains<30||buff.flagellation_buff.up\n## [Syrif] - Workaround to stop symbols wasteful spam in dungeons\nactions.cds+=/symbols_of_death,if=(buff.symbols_of_death.remains<=3&variable.maintenance&(active_enemies>=3||!buff.flagellation_buff.up||dot.rupture.remains>=30)&(!talent.flagellation||cooldown.flagellation.remains>=30-15*!talent.death_perception&cooldown.secret_technique.remains<8||!talent.death_perception)||boss&fight_remains<=15&(raid||buff.symbols_of_death.down))\nactions.cds+=/shadow_blades,if=variable.maintenance&variable.shd_cp&buff.shadow_dance.up&!buff.premeditation.up\nactions.cds+=/thistle_tea,if=buff.shadow_dance.remains>2&!buff.thistle_tea.up\nactions.cds+=/flagellation,if=combo_points>=5&cooldown.shadow_blades.remains<=3||boss&fight_remains<=25\n\n# This list usually contains Cooldowns with neglectable impact that causes global cooldowns\nactions.fill+=/arcane_torrent,if=energy.deficit>=15+energy.regen\nactions.fill+=/arcane_pulse\nactions.fill+=/lights_judgment\nactions.fill+=/bag_of_tricks\n\n# [Syrif] - This variable prevents rupture spam when CDs are toggled off, or otherwise desynced due to dungeon gameplay environment \nactions.finish+=/variable,name=cooldowns_soon,op=setif,condition=!toggle.cooldowns,value=false,value_else=cooldown.shadow_blades.remains<=13&cooldown.flagellation.remains<10&(dot.rupture.remains<(cooldown.shadow_blades.remains+buff.shadow_blades.duration))\nactions.finish+=/secret_technique,if=variable.secret\n# Maintenance Finisher\nactions.finish+=/rupture,if=!variable.skip_rupture&(!dot.rupture.ticking||refreshable||buff.flagellation_buff.up&!buff.symbols_of_death.up&active_enemies<=2)&target.time_to_die-remains>6\nactions.finish+=/rupture,cycle_targets=1,if=!variable.skip_rupture&!variable.priority_rotation&target.time_to_die>=(2*combo_points)&refreshable&active_enemies>=2\n# [Syrif] Uses Hekili-specific variable as a workaround\nactions.finish+=/rupture,if=talent.unseen_blade&variable.cooldowns_soon&active_enemies>=3&dot.rupture.remains<fight_remains\n# Direct Damage Finisher\nactions.finish+=/coup_de_grace,if=debuff.fazed.up&cooldown.flagellation.remains>=20||fight_remains<=10\nactions.finish+=/black_powder,if=!variable.priority_rotation&variable.maintenance&(((active_enemies>=2&talent.deathstalkers_mark&(!buff.darkest_night.up||buff.shadow_dance.up&active_enemies>=5))||talent.unseen_blade&fw_targets>=5)||action.coup_de_grace.ready&active_enemies>=3)\nactions.finish+=/eviscerate,if=cooldown.flagellation.remains>=10||active_enemies>=3\n\n# Shadow Dance, Vanish, Shadowmeld\nactions.stealth_cds+=/shadow_dance,if=variable.shd_cp&variable.maintenance&(cooldown.secret_technique.remains<=24||talent.the_first_dance&buff.shadow_blades.up)&(buff.symbols_of_death.remains>=6||buff.shadow_blades.remains>=6)||boss&fight_remains<=10\nactions.stealth_cds+=/vanish,if=energy>=40&!buff.subterfuge.up&effective_combo_points<=3\nactions.stealth_cds+=/shadowmeld,if=energy>=40&combo_points.deficit>=3",
["author"] = "SimC",
},
["Affliction"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250303,
["spec"] = 265,
["desc"] = "2025-03-03: Sync with SimC",
["profile"] = "actions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/variable,name=cleave_apl,value=toggle.funnel\n# Used to set Trinket in slot 1 as Buff Trinkets for the automatic logic\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\n# Used to set Trinkets in slot 2 as Buff Trinkets for the automatic logic\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\n# Automatic Logic for Buff Trinkets in Trinket Slot 1\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.1.cooldown.duration=0)\n# Automatic Logic for Buff Trinkets in Trinket Slot 2\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.2.cooldown.duration=0)\n#  Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.spymasters_web||trinket.1.is.aberrant_spellforge\n#  Sets a specific Trinkets in Slot 2 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.spymasters_web||trinket.2.is.aberrant_spellforge\n# For On Use Trinkets on slot 1 with on use effects you dont want to use in combat\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell\n# For On Use Trinkets on Slot 2 with on use effects you don't want to use in combat\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell\n#  Sets the duration of Trinket 1 in the automatic logic\nactions.precombat+=/variable,name=trinket_1_buff_duration,value=trinket.1.proc.any_dps.duration+(trinket.1.is.mirror_of_fractured_tomorrows*20)\n#  Sets the duration of Trinket 2 in the automatic logic\nactions.precombat+=/variable,name=trinket_2_buff_duration,value=trinket.2.proc.any_dps.duration+(trinket.2.is.mirror_of_fractured_tomorrows*20)\n# Automatic Logic in case of 2 On Use Buff Trinkets\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.1.has_buff.intellect)*(variable.trinket_1_sync))\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/seed_of_corruption,if=spell_targets.seed_of_corruption_aoe>2||spell_targets.seed_of_corruption_aoe>1&talent.demonic_soul\nactions.precombat+=/haunt\n\nactions+=/spell_lock\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=ogcd\nactions+=/call_action_list,name=items\n# This entry is manually translated and will differ from SIMC, but maintains the same functionality.\nactions+=/call_action_list,name=cleave,if=active_enemies=2||active_enemies>2&variable.cleave_apl\nactions+=/call_action_list,name=aoe,if=active_enemies>2\nactions+=/call_action_list,name=end_of_fight\nactions+=/agony,if=(!talent.vile_taint||remains<cooldown.vile_taint.remains+action.vile_taint.cast_time)&(talent.absolute_corruption&remains<3||!talent.absolute_corruption&remains<5||cooldown.soul_rot.remains<5&remains<8)&fight_remains>dot.agony.remains+5\nactions+=/haunt,if=talent.demonic_soul&buff.nightfall.stack<2-prev_gcd.1.drain_soul&(!talent.vile_taint||cooldown.vile_taint.remains)\nactions+=/unstable_affliction,if=(active_dot.unstable_affliction=0||ticking)&(talent.absolute_corruption&remains<3||!talent.absolute_corruption&remains<5||cooldown.soul_rot.remains<5&remains<8)&(!talent.demonic_soul||buff.nightfall.stack<2||prev_gcd.1.haunt&buff.nightfall.stack<2)&fight_remains>dot.unstable_affliction.remains+5\nactions+=/haunt,if=(talent.absolute_corruption&debuff.haunt.remains<3||!talent.absolute_corruption&debuff.haunt.remains<5||cooldown.soul_rot.remains<5&debuff.haunt.remains<8)&(!talent.vile_taint||cooldown.vile_taint.remains)&fight_remains>debuff.haunt.remains+5\nactions+=/wither,if=talent.wither&!(action.seed_of_corruption.in_flight||active_dot.seed_of_corruption>0)&(talent.absolute_corruption&remains<3||!talent.absolute_corruption&remains<5)&fight_remains>dot.wither.remains+5\nactions+=/corruption,if=!(action.seed_of_corruption.in_flight||active_dot.seed_of_corruption>0)&refreshable&fight_remains>dot.corruption.remains+5\nactions+=/drain_soul,if=buff.nightfall.up&(buff.nightfall.stack>1||buff.nightfall.remains<execute_time*2)&!buff.tormented_crescendo.up&cooldown.soul_rot.remains&soul_shard<5-buff.tormented_crescendo.up&(!talent.vile_taint||cooldown.vile_taint.remains)\nactions+=/shadow_bolt,if=buff.nightfall.up&(buff.nightfall.stack>1||buff.nightfall.remains<execute_time*2)&buff.tormented_crescendo.stack<2&cooldown.soul_rot.remains&soul_shard<5-buff.tormented_crescendo.up&(!talent.vile_taint||cooldown.vile_taint.remains)\nactions+=/call_action_list,name=se_maintenance,if=talent.wither\nactions+=/vile_taint,if=(!talent.soul_rot||cooldown.soul_rot.remains>20||cooldown.soul_rot.remains<=execute_time+gcd.max||boss&fight_remains<cooldown.soul_rot.remains)&dot.agony.remains&(dot.corruption.remains||dot.wither.remains)&dot.unstable_affliction.remains\nactions+=/phantom_singularity,if=(!talent.soul_rot||cooldown.soul_rot.remains<4||boss&fight_remains<cooldown.soul_rot.remains)&dot.agony.remains&(dot.corruption.remains||dot.wither.remains)&dot.unstable_affliction.remains\nactions+=/malevolence,if=variable.vt_ps_up\nactions+=/soul_rot,if=variable.vt_ps_up\nactions+=/summon_darkglare,if=variable.cd_dots_up&(debuff.shadow_embrace.stack=debuff.shadow_embrace.max_stack)\nactions+=/call_action_list,name=se_maintenance,if=talent.demonic_soul\nactions+=/malefic_rapture,if=soul_shard>4&(talent.demonic_soul&buff.nightfall.stack<2||!talent.demonic_soul)||buff.tormented_crescendo.stack>1\nactions+=/drain_soul,if=talent.demonic_soul&buff.nightfall.up&buff.tormented_crescendo.stack<2&target.health.pct<20\nactions+=/malefic_rapture,if=talent.demonic_soul&(soul_shard>1||buff.tormented_crescendo.up&cooldown.soul_rot.remains>buff.tormented_crescendo.remains*gcd.max)&(!talent.vile_taint||soul_shard>1&cooldown.vile_taint.remains>10)&(!talent.oblivion||cooldown.oblivion.remains>10||soul_shard>2&cooldown.oblivion.remains<10)\nactions+=/oblivion,if=dot.agony.remains&(dot.corruption.remains||dot.wither.remains)&dot.unstable_affliction.remains&debuff.haunt.remains>5\nactions+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.up&(buff.tormented_crescendo.remains<gcd.max*2||buff.tormented_crescendo.stack=2)\nactions+=/malefic_rapture,if=(variable.cd_dots_up||(talent.demonic_soul||talent.phantom_singularity)&variable.vt_ps_up||talent.wither&variable.vt_ps_up&!dot.soul_rot.remains&soul_shard>2)&(!talent.oblivion||cooldown.oblivion.remains>10||soul_shard>2&cooldown.oblivion.remains<10)\nactions+=/malefic_rapture,if=talent.tormented_crescendo&talent.nightfall&buff.tormented_crescendo.up&buff.nightfall.up||talent.demonic_soul&!buff.nightfall.up&(!talent.vile_taint||cooldown.vile_taint.remains>10||soul_shard>1&cooldown.vile_taint.remains<10)\nactions+=/malefic_rapture,if=!talent.demonic_soul&buff.tormented_crescendo.up\nactions+=/drain_soul,if=buff.nightfall.up\nactions+=/shadow_bolt,if=buff.nightfall.up\nactions+=/agony,if=refreshable\nactions+=/unstable_affliction,if=(active_dot.unstable_affliction=0||ticking)&refreshable\nactions+=/drain_soul,chain=1,early_chain_if=buff.nightfall.up,interrupt_if=tick_time>0.5\nactions+=/shadow_bolt\n\nactions.aoe+=/variable,name=min_agony,op=min,default=0,value=dot.agony.remains\nactions.aoe+=/variable,name=min_vt,op=min,default=10,value=dot.vile_taint.remains\nactions.aoe+=/variable,name=min_ps,op=min,default=16,value=dot.phantom_singularity.remains\nactions.aoe+=/variable,name=min_ps1,op=set,value=(variable.min_vt*talent.vile_taint)<?(variable.min_ps*talent.phantom_singularity)\nactions.aoe+=/haunt,if=debuff.haunt.remains<3\nactions.aoe+=/vile_taint,if=(cooldown.soul_rot.remains<=execute_time||cooldown.soul_rot.remains>=25)\nactions.aoe+=/phantom_singularity,if=(cooldown.soul_rot.remains<=execute_time||cooldown.soul_rot.remains>=25)&dot.agony.remains\nactions.aoe+=/unstable_affliction,if=(active_dot.unstable_affliction=0||ticking)&remains<5\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<8&(remains<cooldown.vile_taint.remains+action.vile_taint.cast_time||!talent.vile_taint)&gcd.max+action.soul_rot.cast_time+gcd.max<((variable.min_vt*talent.vile_taint)<?(variable.min_ps*talent.phantom_singularity))&remains<10\nactions.aoe+=/soul_rot,if=variable.vt_up&(variable.ps_up||variable.vt_up)&dot.agony.remains\nactions.aoe+=/malevolence,if=variable.ps_up&variable.vt_up&variable.sr_up\nactions.aoe+=/seed_of_corruption,if=((!talent.wither&dot.corruption.remains<5)||(talent.wither&dot.wither.remains<5))&!(action.seed_of_corruption.in_flight||active_dot.seed_of_corruption>0)\nactions.aoe+=/corruption,cycle_targets=1,if=remains<5&!talent.seed_of_corruption\nactions.aoe+=/wither,cycle_targets=1,if=remains<5&!talent.seed_of_corruption\nactions.aoe+=/summon_darkglare,if=variable.ps_up&variable.vt_up&variable.sr_up\nactions.aoe+=/malefic_rapture,if=(cooldown.summon_darkglare.remains>15||soul_shard>3||(talent.demonic_soul&soul_shard>2))&buff.tormented_crescendo.up\nactions.aoe+=/malefic_rapture,if=soul_shard>4||(talent.tormented_crescendo&buff.tormented_crescendo.stack=1&soul_shard>3)\nactions.aoe+=/malefic_rapture,if=talent.demonic_soul&(soul_shard>2||(talent.tormented_crescendo&buff.tormented_crescendo.stack=1&soul_shard))\nactions.aoe+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.up\nactions.aoe+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.stack=2\nactions.aoe+=/malefic_rapture,if=(variable.cd_dots_up||variable.vt_ps_up)&(soul_shard>2||cooldown.oblivion.remains>10||!talent.oblivion)\nactions.aoe+=/malefic_rapture,if=talent.tormented_crescendo&talent.nightfall&buff.tormented_crescendo.up&buff.nightfall.up\nactions.aoe+=/drain_soul,interrupt_if=cooldown.vile_taint.ready,if=talent.drain_soul&buff.nightfall.up&talent.shadow_embrace&(debuff.shadow_embrace.stack<4||debuff.shadow_embrace.remains<3)\nactions.aoe+=/drain_soul,interrupt_if=cooldown.vile_taint.ready,interrupt_global=1,if=talent.drain_soul&(talent.shadow_embrace&(debuff.shadow_embrace.stack<4||debuff.shadow_embrace.remains<3))||!talent.shadow_embrace\nactions.aoe+=/shadow_bolt,if=buff.nightfall.up&talent.shadow_embrace&(debuff.shadow_embrace.stack<2||debuff.shadow_embrace.remains<3)\n\nactions.cleave+=/call_action_list,name=end_of_fight,strict=1,if=boss\nactions.cleave+=/agony,cycle_targets=1,if=refreshable&(remains<cooldown.vile_taint.remains+action.vile_taint.cast_time||!talent.vile_taint)&(remains<gcd.max*2||talent.demonic_soul&remains<cooldown.soul_rot.remains+8&cooldown.soul_rot.remains<5)&fight_remains>remains+5\nactions.cleave+=/wither,cycle_targets=1,if=refreshable&remains<5&!(action.seed_of_corruption.in_flight||dot.seed_of_corruption.remains>0)&fight_remains>remains+5\nactions.cleave+=/haunt,if=talent.demonic_soul&buff.nightfall.stack<2-prev_gcd.1.drain_soul&(!talent.vile_taint||cooldown.vile_taint.remains)||debuff.haunt.remains<3\nactions.cleave+=/unstable_affliction,if=(remains<5||talent.demonic_soul&remains<cooldown.soul_rot.remains+8&cooldown.soul_rot.remains<5)&fight_remains>remains+5\nactions.cleave+=/corruption,cycle_targets=1,if=refreshable&remains<5&!(action.seed_of_corruption.in_flight||dot.seed_of_corruption.remains>0)&fight_remains>remains+5\nactions.cleave+=/call_action_list,name=cleave_se_maintenance,if=talent.wither\nactions.cleave+=/vile_taint,if=!talent.soul_rot||(variable.min_agony<1.5||cooldown.soul_rot.remains<=execute_time+gcd.max)||cooldown.soul_rot.remains>=20\nactions.cleave+=/phantom_singularity,if=(!talent.soul_rot||cooldown.soul_rot.remains<4||fight_remains<cooldown.soul_rot.remains)&active_dot.agony=2\nactions.cleave+=/malevolence,if=variable.vt_ps_up\nactions.cleave+=/soul_rot,if=(variable.vt_ps_up)&active_dot.agony=2\nactions.cleave+=/summon_darkglare,if=variable.cd_dots_up\nactions.cleave+=/call_action_list,name=opener_cleave_se,strict=1,if=talent.demonic_soul\nactions.cleave+=/call_action_list,name=cleave_se_maintenance,strict=1,if=talent.demonic_soul\nactions.cleave+=/malefic_rapture,if=soul_shard>4&(talent.demonic_soul&buff.nightfall.stack<2||!talent.demonic_soul)||buff.tormented_crescendo.stack>1\nactions.cleave+=/drain_soul,if=talent.demonic_soul&buff.nightfall.up&buff.tormented_crescendo.stack<2&target.health.pct<20\nactions.cleave+=/malefic_rapture,if=talent.demonic_soul&(soul_shard>1||buff.tormented_crescendo.up&cooldown.soul_rot.remains>buff.tormented_crescendo.remains*gcd.max)&(!talent.vile_taint||soul_shard>1&cooldown.vile_taint.remains>10)&(!talent.oblivion||cooldown.oblivion.remains>10||soul_shard>2&cooldown.oblivion.remains<10)\nactions.cleave+=/malefic_rapture,if=talent.tormented_crescendo&buff.tormented_crescendo.up&(buff.tormented_crescendo.remains<gcd.max*2||buff.tormented_crescendo.stack=2)\nactions.cleave+=/malefic_rapture,if=(variable.cd_dots_up||(talent.demonic_soul||talent.phantom_singularity)&variable.vt_ps_up||talent.wither&variable.vt_ps_up&!dot.soul_rot.remains&soul_shard>1)&(!talent.oblivion||cooldown.oblivion.remains>10||soul_shard>2&cooldown.oblivion.remains<10)\nactions.cleave+=/malefic_rapture,if=talent.tormented_crescendo&talent.nightfall&buff.tormented_crescendo.up&buff.nightfall.up||talent.demonic_soul&!buff.nightfall.up&(!talent.vile_taint||cooldown.vile_taint.remains>10||soul_shard>1&cooldown.vile_taint.remains<10)\nactions.cleave+=/malefic_rapture,if=!talent.demonic_soul&buff.tormented_crescendo.up\nactions.cleave+=/agony,if=refreshable||cooldown.soul_rot.remains<5&remains<8\nactions.cleave+=/unstable_affliction,if=refreshable||cooldown.soul_rot.remains<5&remains<8\nactions.cleave+=/drain_soul,if=buff.nightfall.up\nactions.cleave+=/shadow_bolt,if=buff.nightfall.up\nactions.cleave+=/wither,if=refreshable\nactions.cleave+=/corruption,if=refreshable\nactions.cleave+=/drain_soul,chain=1,early_chain_if=buff.nightfall.up,interrupt_if=tick_time>0.5\nactions.cleave+=/shadow_bolt\n\nactions.end_of_fight+=/drain_soul,if=talent.demonic_soul&(boss&fight_remains<5&buff.nightfall.up||prev_gcd.1.haunt&buff.nightfall.stack=2&!buff.tormented_crescendo.up)\nactions.end_of_fight+=/oblivion,if=soul_shard>1&boss&fight_remains<(soul_shard+buff.tormented_crescendo.up)*gcd.max+execute_time\nactions.end_of_fight+=/malefic_rapture,if=boss&fight_remains<4&(!talent.demonic_soul||talent.demonic_soul&buff.nightfall.stack<1)\n\nactions.se_maintenance+=/drain_soul,interrupt=1,if=talent.shadow_embrace&talent.drain_soul&(debuff.shadow_embrace.stack<debuff.shadow_embrace.max_stack||debuff.shadow_embrace.remains<3)&active_enemies<=4&target.time_to_die>15,interrupt_if=debuff.shadow_embrace.stack=debuff.shadow_embrace.max_stack\nactions.se_maintenance+=/shadow_bolt,if=talent.shadow_embrace&((debuff.shadow_embrace.stack+(action.shadow_bolt.time_since<1))<debuff.shadow_embrace.max_stack||debuff.shadow_embrace.remains<3&!action.shadow_bolt.in_flight_to_target)&active_enemies<=4&target.time_to_die>15\n\nactions.opener_cleave_se+=/drain_soul,if=talent.shadow_embrace&talent.drain_soul&buff.nightfall.up&(debuff.shadow_embrace.stack<debuff.shadow_embrace.max_stack||debuff.shadow_embrace.remains<3)&(target.time_to_die>15||time<20),interrupt_if=debuff.shadow_embrace.stack=debuff.shadow_embrace.max_stack\n\nactions.cleave_se_maintenance+=/drain_soul,cycle_targets=1,if=talent.shadow_embrace&talent.drain_soul&(talent.wither||talent.demonic_soul&buff.nightfall.up)&(debuff.shadow_embrace.stack<debuff.shadow_embrace.max_stack||debuff.shadow_embrace.remains<3)&fight_remains>15,interrupt_if=debuff.shadow_embrace.stack>3\nactions.cleave_se_maintenance+=/shadow_bolt,cycle_targets=1,if=talent.shadow_embrace&!talent.drain_soul&((debuff.shadow_embrace.stack+action.shadow_bolt.in_flight_to_target_count)<debuff.shadow_embrace.max_stack||debuff.shadow_embrace.remains<3&!action.shadow_bolt.in_flight_to_target)&fight_remains>15\n\nactions.items+=/use_item,name=aberrant_spellforge,use_off_gcd=1,if=gcd.remains>gcd.max*0.8\nactions.items+=/use_item,name=spymasters_web,if=variable.cd_dots_up&(buff.spymasters_report.stack>=38||boss&fight_remains<=80||talent.drain_soul&target.health.pct<20)||boss&fight_remains<20\nactions.items+=/use_item,slot=trinket1,if=(variable.cds_active)&(variable.trinket_priority=1||variable.trinket_2_exclude||!trinket.2.has_cooldown||(trinket.2.cooldown.remains||variable.trinket_priority=2&cooldown.summon_darkglare.remains>20&!pet.darkglare.active&trinket.2.cooldown.remains<cooldown.summon_darkglare.remains))&variable.trinket_1_buffs&!variable.trinket_1_manual||(variable.trinket_1_buff_duration+1>=fight_remains)\nactions.items+=/use_item,slot=trinket2,if=(variable.cds_active)&(variable.trinket_priority=2||variable.trinket_1_exclude||!trinket.1.has_cooldown||(trinket.1.cooldown.remains||variable.trinket_priority=1&cooldown.summon_darkglare.remains>20&!pet.darkglare.active&trinket.1.cooldown.remains<cooldown.summon_darkglare.remains))&variable.trinket_2_buffs&!variable.trinket_2_manual||(variable.trinket_2_buff_duration+1>=fight_remains)\nactions.items+=/use_item,name=time_thiefs_gambit,if=variable.cds_active||boss&fight_remains<15||((trinket.1.cooldown.duration<cooldown.summon_darkglare.remains_expected+5)&active_enemies=1)||(active_enemies>1&havoc_active)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||talent.summon_darkglare&cooldown.summon_darkglare.remains_expected>20||!talent.summon_darkglare)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||talent.summon_darkglare&cooldown.summon_darkglare.remains_expected>20||!talent.summon_darkglare)\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.neural_synapse_enhancer\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,name=neural_synapse_enhancer,if=(prev_gcd.1.soul_rot||boss&fight_remains<=15)&!variable.trinket_1_buffs&!variable.trinket_2_buffs\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,name=neural_synapse_enhancer,if=(prev_gcd.1.soul_rot||boss&fight_remains<=15||cooldown.soul_rot.remains>=45)&trinket.2.cooldown.remains&variable.trinket_2_buffs\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,name=neural_synapse_enhancer,if=(prev_gcd.1.soul_rot||boss&fight_remains<=15||cooldown.soul_rot.remains>=45)&trinket.1.cooldown.remains&variable.trinket_1_buffs\n\nactions.ogcd+=/potion,if=variable.cds_active||fight_remains<32||prev_gcd.1.soul_rot&time<20\nactions.ogcd+=/berserking,if=variable.cds_active||fight_remains<14||prev_gcd.1.soul_rot&time<20\nactions.ogcd+=/blood_fury,if=variable.cds_active||fight_remains<17||prev_gcd.1.soul_rot&time<20\n## actions.ogcd+=/invoke_external_buff,name=power_infusion,if=variable.cds_active\nactions.ogcd+=/fireblood,if=variable.cds_active||fight_remains<10||prev_gcd.1.soul_rot&time<20\nactions.ogcd+=/ancestral_call,if=variable.cds_active||fight_remains<17||prev_gcd.1.soul_rot&time<20\n\nactions.variables+=/variable,name=ps_up,op=set,value=!talent.phantom_singularity||dot.phantom_singularity.up\nactions.variables+=/variable,name=vt_up,op=set,value=!talent.vile_taint||dot.vile_taint_dot.up\nactions.variables+=/variable,name=vt_ps_up,op=set,value=(!talent.vile_taint&!talent.phantom_singularity)||dot.vile_taint_dot.up||dot.phantom_singularity.up\nactions.variables+=/variable,name=sr_up,op=set,value=!talent.soul_rot||dot.soul_rot.up\nactions.variables+=/variable,name=cd_dots_up,op=set,value=variable.ps_up&variable.vt_up&variable.sr_up\nactions.variables+=/variable,name=has_cds,op=set,value=talent.phantom_singularity||talent.vile_taint||talent.soul_rot||talent.summon_darkglare\nactions.variables+=/variable,name=cds_active,op=set,value=!variable.has_cds||(variable.cd_dots_up&(!talent.summon_darkglare||cooldown.summon_darkglare.remains>20||pet.darkglare.remains))\nactions.variables+=/variable,name=min_vt,op=reset,if=variable.min_vt\nactions.variables+=/variable,name=min_ps,op=reset,if=variable.min_ps",
["version"] = 20250303,
["warnings"] = "The import for 'cleave' required some automated changes.\nLine 2: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 2: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 4: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 4: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 5: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 7: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 8: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 9: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 13: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 14: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 15: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 15: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 16: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 17: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 17: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 17: Converted 'talent.oblivion' to 'talent.oblivion.enabled' (1x).\nLine 18: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 19: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 19: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 19: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 19: Converted 'talent.oblivion' to 'talent.oblivion.enabled' (1x).\nLine 20: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 20: Converted 'talent.nightfall' to 'talent.nightfall.enabled' (1x).\nLine 20: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 20: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 21: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\n\nThe import for 'variables' required some automated changes.\nLine 1: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 2: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 3: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 3: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 4: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 6: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 6: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 6: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 6: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 7: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\n\nThe import for 'se_maintenance' required some automated changes.\nLine 1: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 1: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\nLine 2: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\n\nThe import for 'items' required some automated changes.\nLine 2: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\nLine 3: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Unsupported use_item action [ time_thiefs_gambit]; entry disabled.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 6: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 6: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 7: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 7: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 7: Converted 'talent.summon_darkglare' to 'talent.summon_darkglare.enabled' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 10: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 11: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nThe import for 'opener_cleave_se' required some automated changes.\nLine 1: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 1: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 8: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 8: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 8: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 9: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 9: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 10: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 10: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 10: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 11: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 11: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 11: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 12: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 12: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 12: Converted 'talent.absolute_corruption' to 'talent.absolute_corruption.enabled' (1x).\nLine 14: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 15: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 16: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 17: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 18: Converted 'talent.soul_rot' to 'talent.soul_rot.enabled' (1x).\nLine 22: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 23: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 23: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 24: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 25: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 25: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 25: Converted 'talent.oblivion' to 'talent.oblivion.enabled' (1x).\nLine 27: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 28: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 28: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 28: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 28: Converted 'talent.oblivion' to 'talent.oblivion.enabled' (1x).\nLine 29: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 29: Converted 'talent.nightfall' to 'talent.nightfall.enabled' (1x).\nLine 29: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 29: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 30: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.soul_rot.duration=0||cooldown.soul_rot.duration%trinket.t2.cooldown.duration=0)'.\nLine 8: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 8: Converted 'trinket.1.is.aberrant_spellforge' to 'trinket.t1.is.aberrant_spellforge' (1x).\nLine 9: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 9: Converted 'trinket.2.is.aberrant_spellforge' to 'trinket.t2.is.aberrant_spellforge' (1x).\nLine 10: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 11: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 12: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 13: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 14: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 16: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 4: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 4: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 9: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 9: Converted 'talent.vile_taint' to 'talent.vile_taint.enabled' (1x).\nLine 9: Converted 'talent.phantom_singularity' to 'talent.phantom_singularity.enabled' (1x).\nLine 12: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 12: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 13: Converted 'talent.seed_of_corruption' to 'talent.seed_of_corruption.enabled' (1x).\nLine 14: Converted 'talent.seed_of_corruption' to 'talent.seed_of_corruption.enabled' (1x).\nLine 16: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 17: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 18: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 18: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 19: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 20: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 21: Converted 'talent.oblivion' to 'talent.oblivion.enabled' (1x).\nLine 22: Converted 'talent.tormented_crescendo' to 'talent.tormented_crescendo.enabled' (1x).\nLine 22: Converted 'talent.nightfall' to 'talent.nightfall.enabled' (1x).\nLine 23: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\nLine 23: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 24: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\nLine 24: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 24: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 25: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\n\nThe import for 'end_of_fight' required some automated changes.\nLine 1: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 3: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 3: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\n\nThe import for 'cleave_se_maintenance' required some automated changes.\nLine 1: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 1: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\nLine 1: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 1: Converted 'talent.demonic_soul' to 'talent.demonic_soul.enabled' (1x).\nLine 2: Converted 'talent.shadow_embrace' to 'talent.shadow_embrace.enabled' (1x).\nLine 2: Converted 'talent.drain_soul' to 'talent.drain_soul.enabled' (1x).\n\nImported 11 action lists.\n",
["author"] = "SimC",
["lists"] = {
["cleave"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "boss",
["list_name"] = "end_of_fight",
},
{
["enabled"] = true,
["criteria"] = "refreshable & ( remains < cooldown.vile_taint.remains + action.vile_taint.cast_time || ! talent.vile_taint.enabled ) & ( remains < gcd.max * 2 || talent.demonic_soul.enabled & remains < cooldown.soul_rot.remains + 8 & cooldown.soul_rot.remains < 5 ) & fight_remains > remains + 5",
["action"] = "agony",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "refreshable & remains < 5 & ! ( action.seed_of_corruption.in_flight || dot.seed_of_corruption.remains > 0 ) & fight_remains > remains + 5",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & buff.nightfall.stack < 2 - prev_gcd.1.drain_soul & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains ) || debuff.haunt.remains < 3",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "( remains < 5 || talent.demonic_soul.enabled & remains < cooldown.soul_rot.remains + 8 & cooldown.soul_rot.remains < 5 ) & fight_remains > remains + 5",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "refreshable & remains < 5 & ! ( action.seed_of_corruption.in_flight || dot.seed_of_corruption.remains > 0 ) & fight_remains > remains + 5",
["action"] = "corruption",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.wither.enabled",
["list_name"] = "cleave_se_maintenance",
},
{
["enabled"] = true,
["criteria"] = "! talent.soul_rot.enabled || ( variable.min_agony < 1.5 || cooldown.soul_rot.remains <= execute_time + gcd.max ) || cooldown.soul_rot.remains >= 20",
["action"] = "vile_taint",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.soul_rot.enabled || cooldown.soul_rot.remains < 4 || fight_remains < cooldown.soul_rot.remains ) & active_dot.agony = 2",
["action"] = "phantom_singularity",
},
{
["enabled"] = true,
["criteria"] = "variable.vt_ps_up",
["action"] = "malevolence",
},
{
["enabled"] = true,
["criteria"] = "( variable.vt_ps_up ) & active_dot.agony = 2",
["action"] = "soul_rot",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_dots_up",
["action"] = "summon_darkglare",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.demonic_soul.enabled",
["list_name"] = "opener_cleave_se",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "talent.demonic_soul.enabled",
["list_name"] = "cleave_se_maintenance",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 4 & ( talent.demonic_soul.enabled & buff.nightfall.stack < 2 || ! talent.demonic_soul.enabled ) || buff.tormented_crescendo.stack > 1",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & buff.nightfall.up & buff.tormented_crescendo.stack < 2 & target.health.pct < 20",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & ( soul_shard > 1 || buff.tormented_crescendo.up & cooldown.soul_rot.remains > buff.tormented_crescendo.remains * gcd.max ) & ( ! talent.vile_taint.enabled || soul_shard > 1 & cooldown.vile_taint.remains > 10 ) & ( ! talent.oblivion.enabled || cooldown.oblivion.remains > 10 || soul_shard > 2 & cooldown.oblivion.remains < 10 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.up & ( buff.tormented_crescendo.remains < gcd.max * 2 || buff.tormented_crescendo.stack = 2 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "( variable.cd_dots_up || ( talent.demonic_soul.enabled || talent.phantom_singularity.enabled ) & variable.vt_ps_up || talent.wither.enabled & variable.vt_ps_up & ! dot.soul_rot.remains & soul_shard > 1 ) & ( ! talent.oblivion.enabled || cooldown.oblivion.remains > 10 || soul_shard > 2 & cooldown.oblivion.remains < 10 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & talent.nightfall.enabled & buff.tormented_crescendo.up & buff.nightfall.up || talent.demonic_soul.enabled & ! buff.nightfall.up & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains > 10 || soul_shard > 1 & cooldown.vile_taint.remains < 10 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "! talent.demonic_soul.enabled & buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "refreshable || cooldown.soul_rot.remains < 5 & remains < 8",
["action"] = "agony",
},
{
["enabled"] = true,
["criteria"] = "refreshable || cooldown.soul_rot.remains < 5 & remains < 8",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "wither",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "corruption",
},
{
["enabled"] = true,
["action"] = "drain_soul",
["interrupt_if"] = "tick_time>0.5",
["early_chain_if"] = "buff.nightfall.up",
["chain"] = "1",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "time > 0 & ! pet.alive",
["action"] = "fel_domination",
},
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "toggle.funnel",
["var_name"] = "cleave_apl",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
["description"] = "Used to set Trinket in slot 1 as Buff Trinkets for the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
["description"] = "Used to set Trinkets in slot 2 as Buff Trinkets for the automatic logic",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Automatic Logic for Buff Trinkets in Trinket Slot 1",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.soul_rot.duration = 0 || cooldown.soul_rot.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Automatic Logic for Buff Trinkets in Trinket Slot 2",
["value"] = "1",
["var_name"] = "trinket_2_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.soul_rot.duration = 0 || cooldown.soul_rot.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.spymasters_web || trinket.t1.is.aberrant_spellforge",
["var_name"] = "trinket_1_manual",
["description"] = " Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.spymasters_web || trinket.t2.is.aberrant_spellforge",
["var_name"] = "trinket_2_manual",
["description"] = " Sets a specific Trinkets in Slot 2 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell",
["var_name"] = "trinket_1_exclude",
["description"] = "For On Use Trinkets on slot 1 with on use effects you dont want to use in combat",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell",
["var_name"] = "trinket_2_exclude",
["description"] = "For On Use Trinkets on Slot 2 with on use effects you don't want to use in combat",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration + ( trinket.t1.is.mirror_of_fractured_tomorrows * 20 )",
["var_name"] = "trinket_1_buff_duration",
["description"] = " Sets the duration of Trinket 1 in the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration + ( trinket.t2.is.mirror_of_fractured_tomorrows * 20 )",
["var_name"] = "trinket_2_buff_duration",
["description"] = " Sets the duration of Trinket 2 in the automatic logic",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Automatic Logic in case of 2 On Use Buff Trinkets",
["value"] = "2",
["var_name"] = "trinket_priority",
["action"] = "variable",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_buff_duration ) * ( 1 + 0.5 * trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_buff_duration ) * ( 1 + 0.5 * trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["criteria"] = "talent.grimoire_of_sacrifice.enabled",
["action"] = "grimoire_of_sacrifice",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.seed_of_corruption_aoe > 2 || spell_targets.seed_of_corruption_aoe > 1 & talent.demonic_soul.enabled",
["action"] = "seed_of_corruption",
},
{
["action"] = "haunt",
["enabled"] = true,
},
},
["se_maintenance"] = {
{
["enabled"] = true,
["criteria"] = "talent.shadow_embrace.enabled & talent.drain_soul.enabled & ( debuff.shadow_embrace.stack < debuff.shadow_embrace.max_stack || debuff.shadow_embrace.remains < 3 ) & active_enemies <= 4 & target.time_to_die > 15",
["interrupt_if"] = "debuff.shadow_embrace.stack=debuff.shadow_embrace.max_stack",
["interrupt"] = "1",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "talent.shadow_embrace.enabled & ( ( debuff.shadow_embrace.stack + ( action.shadow_bolt.time_since < 1 ) ) < debuff.shadow_embrace.max_stack || debuff.shadow_embrace.remains < 3 & ! action.shadow_bolt.in_flight_to_target ) & active_enemies <= 4 & target.time_to_die > 15",
["action"] = "shadow_bolt",
},
},
["items"] = {
{
["enabled"] = true,
["action"] = "aberrant_spellforge",
["use_off_gcd"] = 1,
["criteria"] = "gcd.remains > gcd.max * 0.8",
["name"] = "aberrant_spellforge",
},
{
["enabled"] = true,
["name"] = "spymasters_web",
["action"] = "spymasters_web",
["criteria"] = "variable.cd_dots_up & ( buff.spymasters_report.stack >= 38 || boss & fight_remains <= 80 || talent.drain_soul.enabled & target.health.pct < 20 ) || boss & fight_remains < 20",
},
{
["enabled"] = true,
["criteria"] = "( variable.cds_active ) & ( variable.trinket_priority = 1 || variable.trinket_2_exclude || ! trinket.t2.has_cooldown || ( trinket.t2.cooldown.remains || variable.trinket_priority = 2 & cooldown.summon_darkglare.remains > 20 & ! pet.darkglare.active & trinket.t2.cooldown.remains < cooldown.summon_darkglare.remains ) ) & variable.trinket_1_buffs & ! variable.trinket_1_manual || ( variable.trinket_1_buff_duration + 1 >= fight_remains )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( variable.cds_active ) & ( variable.trinket_priority = 2 || variable.trinket_1_exclude || ! trinket.t1.has_cooldown || ( trinket.t1.cooldown.remains || variable.trinket_priority = 1 & cooldown.summon_darkglare.remains > 20 & ! pet.darkglare.active & trinket.t1.cooldown.remains < cooldown.summon_darkglare.remains ) ) & variable.trinket_2_buffs & ! variable.trinket_2_manual || ( variable.trinket_2_buff_duration + 1 >= fight_remains )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = false,
["criteria"] = "variable.cds_active || boss & fight_remains < 15 || ( ( trinket.t1.cooldown.duration < cooldown.summon_darkglare.remains_expected + 5 ) & active_enemies = 1 ) || ( active_enemies > 1 & havoc_active )",
["name"] = "time_thiefs_gambit",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || talent.summon_darkglare.enabled & cooldown.summon_darkglare.remains_expected > 20 || ! talent.summon_darkglare.enabled )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || talent.summon_darkglare.enabled & cooldown.summon_darkglare.remains_expected > 20 || ! talent.summon_darkglare.enabled )",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "( prev_gcd.1.soul_rot || boss & fight_remains <= 15 ) & ! variable.trinket_1_buffs & ! variable.trinket_2_buffs",
["name"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "( prev_gcd.1.soul_rot || boss & fight_remains <= 15 || cooldown.soul_rot.remains >= 45 ) & trinket.t2.cooldown.remains & variable.trinket_2_buffs",
["name"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "( prev_gcd.1.soul_rot || boss & fight_remains <= 15 || cooldown.soul_rot.remains >= 45 ) & trinket.t1.cooldown.remains & variable.trinket_1_buffs",
["name"] = "neural_synapse_enhancer",
},
},
["aoe"] = {
{
["enabled"] = true,
["op"] = "min",
["action"] = "variable",
["value"] = "dot.agony.remains",
["var_name"] = "min_agony",
["default"] = "0",
},
{
["enabled"] = true,
["op"] = "min",
["action"] = "variable",
["value"] = "dot.vile_taint.remains",
["var_name"] = "min_vt",
["default"] = "10",
},
{
["enabled"] = true,
["op"] = "min",
["action"] = "variable",
["value"] = "dot.phantom_singularity.remains",
["var_name"] = "min_ps",
["default"] = "16",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( variable.min_vt * talent.vile_taint.enabled ) <? ( variable.min_ps * talent.phantom_singularity.enabled )",
["var_name"] = "min_ps1",
},
{
["enabled"] = true,
["criteria"] = "debuff.haunt.remains < 3",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.soul_rot.remains <= execute_time || cooldown.soul_rot.remains >= 25 )",
["action"] = "vile_taint",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.soul_rot.remains <= execute_time || cooldown.soul_rot.remains >= 25 ) & dot.agony.remains",
["action"] = "phantom_singularity",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.unstable_affliction = 0 || ticking ) & remains < 5",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "active_dot.agony < 8 & ( remains < cooldown.vile_taint.remains + action.vile_taint.cast_time || ! talent.vile_taint.enabled ) & gcd.max + action.soul_rot.cast_time + gcd.max < ( ( variable.min_vt * talent.vile_taint.enabled ) <? ( variable.min_ps * talent.phantom_singularity.enabled ) ) & remains < 10",
["action"] = "agony",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.vt_up & ( variable.ps_up || variable.vt_up ) & dot.agony.remains",
["action"] = "soul_rot",
},
{
["enabled"] = true,
["criteria"] = "variable.ps_up & variable.vt_up & variable.sr_up",
["action"] = "malevolence",
},
{
["enabled"] = true,
["criteria"] = "( ( ! talent.wither.enabled & dot.corruption.remains < 5 ) || ( talent.wither.enabled & dot.wither.remains < 5 ) ) & ! ( action.seed_of_corruption.in_flight || active_dot.seed_of_corruption > 0 )",
["action"] = "seed_of_corruption",
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & ! talent.seed_of_corruption.enabled",
["action"] = "corruption",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "remains < 5 & ! talent.seed_of_corruption.enabled",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.ps_up & variable.vt_up & variable.sr_up",
["action"] = "summon_darkglare",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.summon_darkglare.remains > 15 || soul_shard > 3 || ( talent.demonic_soul.enabled & soul_shard > 2 ) ) & buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 4 || ( talent.tormented_crescendo.enabled & buff.tormented_crescendo.stack = 1 & soul_shard > 3 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & ( soul_shard > 2 || ( talent.tormented_crescendo.enabled & buff.tormented_crescendo.stack = 1 & soul_shard ) )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.stack = 2",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "( variable.cd_dots_up || variable.vt_ps_up ) & ( soul_shard > 2 || cooldown.oblivion.remains > 10 || ! talent.oblivion.enabled )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & talent.nightfall.enabled & buff.tormented_crescendo.up & buff.nightfall.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["interrupt_if"] = "cooldown.vile_taint.ready",
["criteria"] = "talent.drain_soul.enabled & buff.nightfall.up & talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 4 || debuff.shadow_embrace.remains < 3 )",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["action"] = "drain_soul",
["interrupt_if"] = "cooldown.vile_taint.ready",
["criteria"] = "talent.drain_soul.enabled & ( talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 4 || debuff.shadow_embrace.remains < 3 ) ) || ! talent.shadow_embrace.enabled",
["interrupt_global"] = "1",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up & talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < 2 || debuff.shadow_embrace.remains < 3 )",
["action"] = "shadow_bolt",
},
},
["default"] = {
{
["action"] = "spell_lock",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "This entry is manually translated and will differ from SIMC, but maintains the same functionality.",
["criteria"] = "active_enemies = 2 || active_enemies > 2 & variable.cleave_apl",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "active_enemies > 2",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "end_of_fight",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.vile_taint.enabled || remains < cooldown.vile_taint.remains + action.vile_taint.cast_time ) & ( talent.absolute_corruption.enabled & remains < 3 || ! talent.absolute_corruption.enabled & remains < 5 || cooldown.soul_rot.remains < 5 & remains < 8 ) & fight_remains > dot.agony.remains + 5",
["action"] = "agony",
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & buff.nightfall.stack < 2 - prev_gcd.1.drain_soul & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains )",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.unstable_affliction = 0 || ticking ) & ( talent.absolute_corruption.enabled & remains < 3 || ! talent.absolute_corruption.enabled & remains < 5 || cooldown.soul_rot.remains < 5 & remains < 8 ) & ( ! talent.demonic_soul.enabled || buff.nightfall.stack < 2 || prev_gcd.1.haunt & buff.nightfall.stack < 2 ) & fight_remains > dot.unstable_affliction.remains + 5",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["criteria"] = "( talent.absolute_corruption.enabled & debuff.haunt.remains < 3 || ! talent.absolute_corruption.enabled & debuff.haunt.remains < 5 || cooldown.soul_rot.remains < 5 & debuff.haunt.remains < 8 ) & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains ) & fight_remains > debuff.haunt.remains + 5",
["action"] = "haunt",
},
{
["enabled"] = true,
["criteria"] = "talent.wither.enabled & ! ( action.seed_of_corruption.in_flight || active_dot.seed_of_corruption > 0 ) & ( talent.absolute_corruption.enabled & remains < 3 || ! talent.absolute_corruption.enabled & remains < 5 ) & fight_remains > dot.wither.remains + 5",
["action"] = "wither",
},
{
["enabled"] = true,
["criteria"] = "! ( action.seed_of_corruption.in_flight || active_dot.seed_of_corruption > 0 ) & refreshable & fight_remains > dot.corruption.remains + 5",
["action"] = "corruption",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up & ( buff.nightfall.stack > 1 || buff.nightfall.remains < execute_time * 2 ) & ! buff.tormented_crescendo.up & cooldown.soul_rot.remains & soul_shard < 5 - buff.tormented_crescendo.up & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains )",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up & ( buff.nightfall.stack > 1 || buff.nightfall.remains < execute_time * 2 ) & buff.tormented_crescendo.stack < 2 & cooldown.soul_rot.remains & soul_shard < 5 - buff.tormented_crescendo.up & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains )",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.wither.enabled",
["list_name"] = "se_maintenance",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.soul_rot.enabled || cooldown.soul_rot.remains > 20 || cooldown.soul_rot.remains <= execute_time + gcd.max || boss & fight_remains < cooldown.soul_rot.remains ) & dot.agony.remains & ( dot.corruption.remains || dot.wither.remains ) & dot.unstable_affliction.remains",
["action"] = "vile_taint",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.soul_rot.enabled || cooldown.soul_rot.remains < 4 || boss & fight_remains < cooldown.soul_rot.remains ) & dot.agony.remains & ( dot.corruption.remains || dot.wither.remains ) & dot.unstable_affliction.remains",
["action"] = "phantom_singularity",
},
{
["enabled"] = true,
["criteria"] = "variable.vt_ps_up",
["action"] = "malevolence",
},
{
["enabled"] = true,
["criteria"] = "variable.vt_ps_up",
["action"] = "soul_rot",
},
{
["enabled"] = true,
["criteria"] = "variable.cd_dots_up & ( debuff.shadow_embrace.stack = debuff.shadow_embrace.max_stack )",
["action"] = "summon_darkglare",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "talent.demonic_soul.enabled",
["list_name"] = "se_maintenance",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 4 & ( talent.demonic_soul.enabled & buff.nightfall.stack < 2 || ! talent.demonic_soul.enabled ) || buff.tormented_crescendo.stack > 1",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & buff.nightfall.up & buff.tormented_crescendo.stack < 2 & target.health.pct < 20",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & ( soul_shard > 1 || buff.tormented_crescendo.up & cooldown.soul_rot.remains > buff.tormented_crescendo.remains * gcd.max ) & ( ! talent.vile_taint.enabled || soul_shard > 1 & cooldown.vile_taint.remains > 10 ) & ( ! talent.oblivion.enabled || cooldown.oblivion.remains > 10 || soul_shard > 2 & cooldown.oblivion.remains < 10 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "dot.agony.remains & ( dot.corruption.remains || dot.wither.remains ) & dot.unstable_affliction.remains & debuff.haunt.remains > 5",
["action"] = "oblivion",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & buff.tormented_crescendo.up & ( buff.tormented_crescendo.remains < gcd.max * 2 || buff.tormented_crescendo.stack = 2 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "( variable.cd_dots_up || ( talent.demonic_soul.enabled || talent.phantom_singularity.enabled ) & variable.vt_ps_up || talent.wither.enabled & variable.vt_ps_up & ! dot.soul_rot.remains & soul_shard > 2 ) & ( ! talent.oblivion.enabled || cooldown.oblivion.remains > 10 || soul_shard > 2 & cooldown.oblivion.remains < 10 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "talent.tormented_crescendo.enabled & talent.nightfall.enabled & buff.tormented_crescendo.up & buff.nightfall.up || talent.demonic_soul.enabled & ! buff.nightfall.up & ( ! talent.vile_taint.enabled || cooldown.vile_taint.remains > 10 || soul_shard > 1 & cooldown.vile_taint.remains < 10 )",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "! talent.demonic_soul.enabled & buff.tormented_crescendo.up",
["action"] = "malefic_rapture",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "buff.nightfall.up",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "refreshable",
["action"] = "agony",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.unstable_affliction = 0 || ticking ) & refreshable",
["action"] = "unstable_affliction",
},
{
["enabled"] = true,
["action"] = "drain_soul",
["interrupt_if"] = "tick_time>0.5",
["early_chain_if"] = "buff.nightfall.up",
["chain"] = "1",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["cleave_se_maintenance"] = {
{
["enabled"] = true,
["action"] = "drain_soul",
["cycle_targets"] = 1,
["interrupt_if"] = "debuff.shadow_embrace.stack>3",
["criteria"] = "talent.shadow_embrace.enabled & talent.drain_soul.enabled & ( talent.wither.enabled || talent.demonic_soul.enabled & buff.nightfall.up ) & ( debuff.shadow_embrace.stack < debuff.shadow_embrace.max_stack || debuff.shadow_embrace.remains < 3 ) & fight_remains > 15",
},
{
["enabled"] = true,
["criteria"] = "talent.shadow_embrace.enabled & ! talent.drain_soul.enabled & ( ( debuff.shadow_embrace.stack + action.shadow_bolt.in_flight_to_target_count ) < debuff.shadow_embrace.max_stack || debuff.shadow_embrace.remains < 3 & ! action.shadow_bolt.in_flight_to_target ) & fight_remains > 15",
["action"] = "shadow_bolt",
["cycle_targets"] = 1,
},
},
["opener_cleave_se"] = {
{
["enabled"] = true,
["interrupt_if"] = "debuff.shadow_embrace.stack=debuff.shadow_embrace.max_stack",
["action"] = "drain_soul",
["criteria"] = "talent.shadow_embrace.enabled & talent.drain_soul.enabled & buff.nightfall.up & ( debuff.shadow_embrace.stack < debuff.shadow_embrace.max_stack || debuff.shadow_embrace.remains < 3 ) & ( target.time_to_die > 15 || time < 20 )",
},
},
["end_of_fight"] = {
{
["enabled"] = true,
["criteria"] = "talent.demonic_soul.enabled & ( boss & fight_remains < 5 & buff.nightfall.up || prev_gcd.1.haunt & buff.nightfall.stack = 2 & ! buff.tormented_crescendo.up )",
["action"] = "drain_soul",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 1 & boss & fight_remains < ( soul_shard + buff.tormented_crescendo.up ) * gcd.max + execute_time",
["action"] = "oblivion",
},
{
["enabled"] = true,
["criteria"] = "boss & fight_remains < 4 & ( ! talent.demonic_soul.enabled || talent.demonic_soul.enabled & buff.nightfall.stack < 1 )",
["action"] = "malefic_rapture",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.phantom_singularity.enabled || dot.phantom_singularity.up",
["var_name"] = "ps_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.vile_taint.enabled || dot.vile_taint_dot.up",
["var_name"] = "vt_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ! talent.vile_taint.enabled & ! talent.phantom_singularity.enabled ) || dot.vile_taint_dot.up || dot.phantom_singularity.up",
["var_name"] = "vt_ps_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! talent.soul_rot.enabled || dot.soul_rot.up",
["var_name"] = "sr_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.ps_up & variable.vt_up & variable.sr_up",
["var_name"] = "cd_dots_up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.phantom_singularity.enabled || talent.vile_taint.enabled || talent.soul_rot.enabled || talent.summon_darkglare.enabled",
["var_name"] = "has_cds",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! variable.has_cds || ( variable.cd_dots_up & ( ! talent.summon_darkglare.enabled || cooldown.summon_darkglare.remains > 20 || pet.darkglare.remains ) )",
["var_name"] = "cds_active",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "min_vt",
["criteria"] = "variable.min_vt",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "min_ps",
["criteria"] = "variable.min_ps",
},
},
["ogcd"] = {
{
["enabled"] = true,
["criteria"] = "variable.cds_active || fight_remains < 32 || prev_gcd.1.soul_rot & time < 20",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active || fight_remains < 14 || prev_gcd.1.soul_rot & time < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active || fight_remains < 17 || prev_gcd.1.soul_rot & time < 20",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active || fight_remains < 10 || prev_gcd.1.soul_rot & time < 20",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.cds_active || fight_remains < 17 || prev_gcd.1.soul_rot & time < 20",
["action"] = "ancestral_call",
},
},
},
},
["Enhancement"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/sc_shaman.cpp",
["builtIn"] = true,
["date"] = 20250430,
["spec"] = 263,
["desc"] = "2025-04-30: Tweak Feral Spirit and big CDs\n\n2025-04-17: Tweak/fix AOE MW spenders\n\n2025-04-16: Use upcoming priority; tweak Primordial Storm\n\n2025-04-15: Improve efficiency\n\n2025-04-13: Implement (some) Ashen Catalyst CDR\n + Add (disabled) utility entries to default\n\n2025-04-10: Use Primordial Storm before the buff falls off, even without Maelstrom/Legacy of the Frost Witch\n\n2025-03-10: SimC update\n\n2025-02-28: SimC  update\n\n2025-02-26: Voltaic Blaze is fully distinct from Flame Shock\n + Revised Primordial Storm check for Elemental Blast / Totemic ST\n\n2025-02-25: Resync with SimC",
["lists"] = {
["single"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Single target action priority list",
["strict_if"] = "time < 18",
["criteria"] = "time < 18 & ( cooldown.doom_winds.remains = 0 || cooldown.sundering.remains = 0 || ! buff.hot_hand.up )",
["list_name"] = "single_open",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 || buff.primordial_storm.remains <= 4 & buff.maelstrom_weapon.stack >= 5 )",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["criteria"] = "! ticking & ( talent.ashen_catalyst.enabled || talent.primordial_wave.enabled || talent.lashing_flames.enabled )",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 16 || cooldown.doom_winds.remains > 15 || cooldown.doom_winds.remains < 7 || buff.winning_streak.stack = 1 & buff.maelstrom_weapon.stack > 7",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 0 & ti_lightning_bolt",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up ) & ( cooldown.feral_spirit.remains > 30 || cooldown.feral_spirit.remains < 2 )",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( raid_event.adds.in > action.primordial_wave.cooldown || raid_event.adds.in < 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "( dot.flame_shock.ticking || ! talent.primordial_wave.enabled || ! talent.ashen_catalyst.enabled )",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 0 & ti_lightning_bolt",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "( ( ! talent.overflowing_maelstrom.enabled & buff.maelstrom_weapon.stack >= 5 ) || ( buff.maelstrom_weapon.stack >= 9 ) ) & charges_fractional >= 1.8",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.tempest.stack = buff.tempest.max_stack & ( tempest_mael_count > 30 || buff.awakening_storms.stack = 3 ) & buff.maelstrom_weapon.stack >= 9 )",
["action"] = "tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 9 & ! buff.primordial_storm.up & buff.arc_discharge.stack > 1",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "( ( ! talent.overflowing_maelstrom.enabled & buff.maelstrom_weapon.stack >= 5 ) || ( buff.maelstrom_weapon.stack >= 9 ) )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 9",
["action"] = "tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 9",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "( buff.hot_hand.up & ( buff.ashen_catalyst.stack = buff.ashen_catalyst.max_stack ) ) || ( dot.flame_shock.remains <= 2 & ! talent.voltaic_blaze.enabled ) || ( talent.lashing_flames.enabled & ( debuff.lashing_flames.down ) )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "( buff.doom_winds.up & buff.electrostatic_wager.stack > 1 ) || buff.electrostatic_wager.stack > 8",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || buff.stormblast.stack > 0",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.unrelenting_storms.enabled & talent.alpha_wolf.enabled & alpha_wolf_min_remains = 0",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww2_4pc",
["action"] = "crash_lightning",
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.elemental_assault.enabled & talent.molten_assault.enabled & dot.flame_shock.ticking",
["action"] = "lava_lash",
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ! buff.primordial_storm.up",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in >= action.sundering.cooldown",
["action"] = "sundering",
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["action"] = "frost_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock",
["action"] = "fire_nova",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "settings.filler_shock",
["action"] = "flame_shock",
},
},
["funnel"] = {
{
["enabled"] = true,
["criteria"] = "talent.elemental_spirits.enabled",
["action"] = "feral_spirit",
},
{
["action"] = "surging_totem",
["enabled"] = true,
},
{
["action"] = "ascendance",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 0 ) || buff.converging_storms.stack = buff.converging_storms.max_stack",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack || ( buff.maelstrom_weapon.stack >= 5 & ( tempest_mael_count > 30 || buff.awakening_storms.stack = 2 ) )",
["action"] = "tempest",
},
{
["enabled"] = true,
["criteria"] = "( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! buff.splintered_elements.up || boss & fight_remains <= 12 || raid_event.adds.remains <= gcd.max )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & talent.elemental_spirits.enabled & feral_spirit.active >= 4",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.supercharge.enabled & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( variable.expected_lb_funnel > variable.expected_cl_funnel )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "( talent.supercharge.enabled & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack ) || buff.arc_discharge.up & buff.maelstrom_weapon.stack >= 5",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "( talent.molten_assault.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6 ) || ( talent.ashen_catalyst.enabled & buff.ashen_catalyst.stack = buff.ashen_catalyst.max_stack )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["action"] = "primordial_wave",
["criteria"] = "! buff.primordial_wave.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "elemental_blast",
},
{
["action"] = "feral_spirit",
["enabled"] = true,
},
{
["action"] = "doom_winds",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.converging_storms.stack = buff.converging_storms.max_stack",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "( buff.molten_weapon.stack > buff.crackling_surge.stack ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( variable.expected_lb_funnel > variable.expected_cl_funnel )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || ! buff.crash_lightning.up || ( talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0 ) || ( talent.converging_storms.enabled & buff.converging_storms.stack < buff.converging_storms.max_stack )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || talent.earthsurge.enabled",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= active_enemies )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "sundering",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "refreshable & ( talent.fire_nova.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.crash_lightning.up & talent.deeply_rooted_elements.enabled",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & buff.cl_crash_lightning.up & active_enemies >= 4",
["action"] = "crash_lightning",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 2",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || buff.feral_spirit.up ) ) ) & buff.maelstrom_weapon.stack >= 5",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.molten_weapon.stack > buff.crackling_surge.stack ) & buff.maelstrom_weapon.stack >= 5",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ( variable.expected_lb_funnel > variable.expected_cl_funnel )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! talent.hailstorm.enabled",
["action"] = "frost_shock",
},
},
["aoe_open"] = {
{
["enabled"] = true,
["description"] = "Multi target opener priority list",
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "( buff.electrostatic_wager.stack > 9 & buff.doom_winds.up ) || ! buff.crash_lightning.up",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock < active_enemies & active_dot.flame_shock < 3",
["action"] = "voltaic_blaze",
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ( talent.primordial_wave.enabled || talent.fire_nova.enabled ) & dot.flame_shock.ticking & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 3",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 4 ) & dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 16 || buff.maelstrom_weapon.stack >= 9",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 9 || boss & fight_remains < 9",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["criteria"] = "( dot.flame_shock.ticking || ! talent.molten_assault.enabled ) & ti_chain_lightning & ( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled ) & ! buff.doom_winds.up || boss & fight_remains < 16",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 9 ) & ( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled )",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["action"] = "tempest",
["criteria"] = "buff.maelstrom_weapon.stack >= 9 & buff.arc_discharge.down",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( buff.electrostatic_wager.stack > 4 )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["action"] = "windstrike",
["criteria"] = "talent.thorims_invocation.enabled & ti_chain_lightning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ( ! buff.primordial_storm.up || ! buff.legacy_of_the_frost_witch.up ) & buff.doom_winds.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["criteria"] = "buff.maelstrom_weapon.stack >= 9 & ( ! buff.primordial_storm.up || ! buff.legacy_of_the_frost_witch.up )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.converging_storms.stack = 6 & buff.stormblast.stack > 1",
["action"] = "stormstrike",
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
},
["single_totemic_open"] = {
{
["enabled"] = true,
["description"] = "Single target opener priority list for the Totemic hero talent tree",
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! pet.surging_totem.active & talent.lashing_flames.enabled & debuff.lashing_flames.down",
["action"] = "lava_lash",
},
{
["action"] = "surging_totem",
["enabled"] = true,
},
{
["action"] = "primordial_wave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up || fight_remains < 16",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up || boss & fight_remains < 9",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled )",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up & buff.legacy_of_the_frost_witch.up",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.legacy_of_the_frost_witch.up",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = 10",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack = 10",
["action"] = "lightning_bolt",
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
},
["single_totemic"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Single target action priority list for the Totemic hero talent tree",
["strict_if"] = "time < 20",
["criteria"] = "time < 20 & ( cooldown.doom_winds.remains = 0 || cooldown.sundering.remains = 0 || ! buff.hot_hand.up )",
["list_name"] = "single_totemic_open",
},
{
["action"] = "surging_totem",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "ti_lightning_bolt & pet.surging_totem.remains > 4 & ( buff.totemic_rebound.stack >= 3 || buff.maelstrom_weapon.stack > 0 )",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "! ticking & ( talent.ashen_catalyst.enabled || talent.primordial_wave.enabled )",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 16 || ( ( cooldown.doom_winds.remains > 23 || cooldown.doom_winds.remains < 7 || buff.winning_streak.stack = 1 & buff.maelstrom_weapon.stack > 7 ) & ( cooldown.primordial_wave.remains < 20 || buff.primordial_storm.up || ! talent.primordial_storm.enabled ) )",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( raid_event.adds.in > action.primordial_wave.cooldown ) || raid_event.adds.in < 6",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( ( cooldown.doom_winds.remains >= buff.primordial_storm.remains ) || buff.doom_winds.up || ! talent.doom_winds.enabled || ( buff.primordial_storm.remains < 2 * gcd.max ) )",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["criteria"] = "buff.ascendance.up & pet.surging_totem.active & talent.earthsurge.enabled & buff.legacy_of_the_frost_witch.up & buff.totemic_rebound.stack >= 5 & buff.earthen_weapon.stack >= 2",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 0 & ti_lightning_bolt",
["action"] = "windstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.legacy_of_the_frost_witch.up & ( ( cooldown.ascendance.remains >= 10 & talent.ascendance.enabled ) || ! talent.ascendance.enabled ) & pet.surging_totem.active & buff.totemic_rebound.stack >= 3 & ! buff.ascendance.up",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "talent.unrelenting_storms.enabled & talent.alpha_wolf.enabled & alpha_wolf_min_remains = 0",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "! talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack >= 10 & buff.whirling_air.down",
["action"] = "lava_burst",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( buff.primordial_storm.down || buff.primordial_storm.remains > 4 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up & buff.legacy_of_the_frost_witch.up",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( buff.primordial_storm.down || buff.primordial_storm.remains > 4 )",
["action"] = "lightning_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.electrostatic_wager.stack > 4",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || buff.stormblast.stack > 1",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.whirling_fire.up || buff.ashen_catalyst.stack >= 8",
["action"] = "lava_lash",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww2_4pc",
["action"] = "crash_lightning",
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unrelenting_storms.enabled",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["action"] = "frost_shock",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock",
["action"] = "fire_nova",
},
{
["action"] = "earth_elemental",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! talent.voltaic_blaze.enabled",
["action"] = "flame_shock",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % 300 <= 30 ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "potion",
},
{
["enabled"] = true,
["description"] = "Interrupt of casts.",
["action"] = "wind_shear",
},
{
["enabled"] = false,
["action"] = "lightning_lasso",
["criteria"] = "! target.is_boss & debuff.casting.up & debuff.casting.v2 = 0 & debuff.casting.remains > gcd.remains & debuff.casting.remains < gcd.remains + gcd.max",
},
{
["enabled"] = false,
["action"] = "thunderstorm",
["criteria"] = "talent.thundershock.enabled & ! target.is_boss & debuff.casting.up & debuff.casting.v2 = 0 & debuff.casting.remains > gcd.remains & debuff.casting.remains < gcd.remains + gcd.max",
},
{
["enabled"] = false,
["action"] = "capacitor_totem",
["criteria"] = "! target.is_boss & debuff.casting.up & debuff.casting.v2 = 0 & debuff.casting.remains > gcd.remains & debuff.casting.remains < gcd.remains + gcd.max",
},
{
["enabled"] = true,
["action"] = "purge",
["criteria"] = "buff.dispellable_magic.up",
["line_cd"] = "settings.purge_icd",
},
{
["enabled"] = true,
["criteria"] = "buff.dispellable_magic.up",
["action"] = "greater_purge",
},
{
["enabled"] = false,
["action"] = "poison_cleansing_totem",
["criteria"] = "buff.dispellable_poison.up",
},
{
["enabled"] = true,
["action"] = "elementium_pocket_anvil",
["name"] = "elementium_pocket_anvil",
["use_off_gcd"] = 1,
},
{
["enabled"] = true,
["action"] = "algethar_puzzle_box",
["use_off_gcd"] = 1,
["name"] = "algethar_puzzle_box",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || ( talent.ascendance.enabled & ( cooldown.ascendance.remains < 2 * action.stormstrike.gcd ) ) || ( fight_remains % 180 <= 30 )",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket1_is_weird & trinket.t1.has_use_buff & ( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % trinket.t1.cooldown.duration <= trinket.t1.buff_duration ) || ( variable.min_talented_cd_remains >= trinket.t1.cooldown.duration ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket2_is_weird & trinket.t2.has_use_buff & ( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % trinket.t2.cooldown.duration <= trinket.t2.buff_duration ) || ( variable.min_talented_cd_remains >= trinket.t2.cooldown.duration ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "beacon_to_the_beyond",
["use_off_gcd"] = 1,
["name"] = "beacon_to_the_beyond",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || boss & ( fight_remains % 150 <= 5 )",
},
{
["enabled"] = true,
["action"] = "manic_grieftorch",
["use_off_gcd"] = 1,
["name"] = "manic_grieftorch",
["criteria"] = "( ! buff.ascendance.up & ! buff.feral_spirit.up & ! buff.doom_winds.up ) || boss & ( fight_remains % 120 <= 5 )",
},
{
["enabled"] = true,
["action"] = "house_of_cards",
["use_off_gcd"] = 1,
["name"] = "house_of_cards",
["criteria"] = "buff.ascendance.up",
},
{
["enabled"] = true,
["action"] = "funhouse_lens",
["use_off_gcd"] = 1,
["name"] = "funhouse_lens",
["criteria"] = "buff.ascendance.up",
},
{
["enabled"] = true,
["action"] = "trinket1",
["criteria"] = "! variable.trinket1_is_weird & ! trinket.t1.has_use_buff",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket2_is_weird & ! trinket.t2.has_use_buff",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.blood_fury.cooldown <= action.blood_fury.duration ) || ( variable.min_talented_cd_remains >= action.blood_fury.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.berserking.cooldown <= action.berserking.duration ) || ( variable.min_talented_cd_remains >= action.berserking.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || ( boss & fight_remains % action.fireblood.cooldown <= action.fireblood.duration ) || ( variable.min_talented_cd_remains >= action.fireblood.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "( buff.ascendance.up || buff.feral_spirit.up || buff.doom_winds.up || boss & ( fight_remains % action.ancestral_call.cooldown <= action.ancestral_call.duration ) || ( variable.min_talented_cd_remains >= action.ancestral_call.cooldown ) || ( ! talent.ascendance.enabled & ! talent.feral_spirit.enabled & ! talent.doom_winds.enabled ) )",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1 & ! talent.surging_totem.enabled",
["list_name"] = "single",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies = 1 & talent.surging_totem.enabled",
["list_name"] = "single_totemic",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & ! toggle.funnel & ! talent.surging_totem.enabled",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & ! toggle.funnel & talent.surging_totem.enabled",
["list_name"] = "aoe_totemic",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "active_enemies > 1 & toggle.funnel",
["list_name"] = "funnel",
},
},
["precombat"] = {
{
["action"] = "windfury_weapon",
["enabled"] = true,
},
{
["action"] = "flametongue_weapon",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.skyfury.down || active_dot.skyfury < group_members",
["action"] = "skyfury",
},
{
["action"] = "lightning_shield",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.elemental_orbit.enabled & buff.earth_shield.down",
["action"] = "earth_shield",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box || trinket.t1.is.manic_grieftorch || trinket.t1.is.elementium_pocket_anvil || trinket.t1.is.beacon_to_the_beyond",
["var_name"] = "trinket1_is_weird",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box || trinket.t2.is.manic_grieftorch || trinket.t2.is.elementium_pocket_anvil || trinket.t2.is.beacon_to_the_beyond",
["var_name"] = "trinket2_is_weird",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( cooldown.feral_spirit.remains / ( 4 * talent.witch_doctors_ancestry.enabled ) ) + 1000 * ! talent.feral_spirit.enabled ) >? ( cooldown.doom_winds.remains + 1000 * ! talent.doom_winds.enabled ) >? ( cooldown.ascendance.remains + 1000 * ! talent.ascendance.enabled )",
["var_name"] = "min_talented_cd_remains",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( 1 + debuff.chaos_brand.up * debuff.chaos_brand.value ) * ( 1 + ( debuff.hunters_mark.up * target.health.pct >= 80 ) * debuff.hunters_mark.value )",
["var_name"] = "target_nature_mod",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "action.lightning_bolt.damage * ( 1 + debuff.lightning_rod.up * variable.target_nature_mod * ( 1 + buff.primordial_wave.up * active_dot.flame_shock * buff.primordial_wave.value ) * debuff.lightning_rod.value )",
["var_name"] = "expected_lb_funnel",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "action.chain_lightning.damage * ( 1 + debuff.lightning_rod.up * variable.target_nature_mod * ( active_enemies >? ( 3 + 2 * talent.crashing_storms.enabled ) ) * debuff.lightning_rod.value )",
["var_name"] = "expected_cl_funnel",
},
},
["aoe"] = {
{
["enabled"] = true,
["description"] = "Multi target action priority list",
["criteria"] = "talent.elemental_spirits.enabled || talent.alpha_wolf.enabled",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "time < 15",
["list_name"] = "aoe_open",
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "( dot.flame_shock.ticking || ! talent.molten_assault.enabled ) & ti_chain_lightning || boss & fight_remains < 1",
["action"] = "ascendance",
},
{
["enabled"] = true,
["action"] = "tempest",
["criteria"] = "! buff.arc_discharge.stack >= 1 & ( ( buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ! talent.raging_maelstrom.enabled ) || ( buff.maelstrom_weapon.stack >= 9 ) ) || ( buff.maelstrom_weapon.stack >= 5 & ( tempest_mael_count > 30 ) )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 16 || cooldown.doom_winds.remains > 15 || cooldown.doom_winds.remains < 7 || buff.winning_streak.stack = 1 & buff.maelstrom_weapon.stack > 7",
["action"] = "feral_spirit",
},
{
["action"] = "doom_winds",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( buff.doom_winds.up || ! talent.doom_winds.enabled || ( cooldown.doom_winds.remains > buff.primordial_storm.remains ) || ( buff.primordial_storm.remains < 2 * gcd.max ) )",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["criteria"] = "talent.converging_storms.enabled & buff.electrostatic_wager.stack > 6 || ! buff.crash_lightning.up",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["action"] = "windstrike",
["criteria"] = "talent.thorims_invocation.enabled & buff.maelstrom_weapon.stack > 0 & ti_chain_lightning",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.converging_storms.enabled & talent.alpha_wolf.enabled",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.converging_storms.stack = 6 & buff.stormblast.stack > 0 & buff.legacy_of_the_frost_witch.up & buff.maelstrom_weapon.stack <= 8",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack <= 8",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack <= 8",
["action"] = "voltaic_blaze",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ! buff.primordial_storm.up & ( cooldown.crash_lightning.remains >= 1 || ! talent.alpha_wolf.enabled )",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= active_enemies )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.stormblast.enabled & talent.stormflurry.enabled",
["action"] = "stormstrike",
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "lava_lash",
["criteria"] = "talent.lashing_flames.enabled || talent.molten_assault.enabled & dot.flame_shock.ticking",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "sundering",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["action"] = "flame_shock",
["criteria"] = "( talent.fire_nova.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies ) & active_dot.flame_shock < 6",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "buff.crash_lightning.up & ( talent.deeply_rooted_elements.enabled || buff.converging_storms.stack = buff.converging_storms.max_stack )",
["action"] = "stormstrike",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & buff.cl_crash_lightning.up",
["action"] = "crash_lightning",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 2",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["action"] = "chain_lightning",
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ! buff.primordial_storm.up",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! talent.hailstorm.enabled",
["action"] = "frost_shock",
},
},
["aoe_totemic_open"] = {
{
["enabled"] = true,
["criteria"] = "! ticking & ! ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "! pet.surging_totem.active & ! ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "lava_lash",
},
{
["action"] = "surging_totem",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.swirling_maelstrom.enabled & dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "fire_nova",
},
{
["action"] = "feral_spirit",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( cooldown.doom_winds.remains > 3 ) & ( buff.doom_winds.remains <= gcd.max || ! buff.doom_winds.up & cooldown.doom_winds.remains > 15 ) || buff.primordial_storm.remains < 3 * gcd.max",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 10 & ! buff.legacy_of_the_frost_witch.up & cooldown.doom_winds.remains = 0",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["criteria"] = "( buff.electrostatic_wager.stack > 9 & buff.doom_winds.up ) || ! buff.crash_lightning.up",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "buff.legacy_of_the_frost_witch.up || ( buff.earthen_weapon.stack >= 2 & buff.primordial_storm.up )",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "( buff.legacy_of_the_frost_witch.up & buff.whirling_fire.up )",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "( buff.earthen_weapon.stack >= 2 & buff.primordial_storm.up & buff.doom_winds.up )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 10",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 10",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up & pet.searing_totem.active",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["criteria"] = "pet.searing_totem.active & dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "fire_nova",
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack < 10 & ! buff.legacy_of_the_frost_witch.up",
["action"] = "stormstrike",
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up & pet.searing_totem.active",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ! buff.primordial_storm.up",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ! buff.primordial_storm.up",
["action"] = "chain_lightning",
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
},
["single_open"] = {
{
["enabled"] = true,
["description"] = "Single target opener priority list",
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock < 3 & ! buff.ascendance.up",
["action"] = "voltaic_blaze",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 4 ) & dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "primordial_wave",
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up || fight_remains < 16",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up || boss & fight_remains < 9",
["action"] = "doom_winds",
},
{
["enabled"] = true,
["criteria"] = "! talent.legacy_of_the_frost_witch.enabled || buff.legacy_of_the_frost_witch.up || boss & fight_remains < 16",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled )",
["action"] = "primordial_storm",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "tempest",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5",
["action"] = "lightning_bolt",
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "set_bonus.tww2_4pc",
["action"] = "crash_lightning",
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.elemental_assault.enabled & talent.molten_assault.enabled & dot.flame_shock.ticking",
["action"] = "lava_lash",
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
},
["aoe_totemic"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "time < 16 & ( cooldown.doom_winds.remains = 0 || cooldown.sundering.remains = 0 || ! buff.hot_hand.up )",
["strict_if"] = "time < 16",
["list_name"] = "aoe_totemic_open",
},
{
["action"] = "surging_totem",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "ti_chain_lightning",
["action"] = "ascendance",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled & ( active_enemies >= 15 - 5 * talent.unruly_winds.enabled )",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 16 || ( ( cooldown.doom_winds.remains > 15 || cooldown.doom_winds.remains < 7 || buff.winning_streak.stack = 1 & buff.maelstrom_weapon.stack > 7 ) & ( cooldown.primordial_wave.remains < 2 || buff.primordial_storm.up || ! talent.primordial_storm.enabled ) )",
["action"] = "feral_spirit",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( cooldown.doom_winds.remains > 3 ) & ( buff.doom_winds.remains <= 3 || ! buff.doom_winds.up & cooldown.doom_winds.remains > 15 || buff.earthen_weapon.stack >= 4 ) || buff.primordial_storm.remains < 3 * gcd.max",
["action"] = "primordial_storm",
},
{
["enabled"] = true,
["criteria"] = "! ticking & ( talent.ashen_catalyst.enabled || talent.primordial_wave.enabled ) & ( active_dot.flame_shock < active_enemies || active_dot.flame_shock < 6 )",
["action"] = "flame_shock",
},
{
["action"] = "doom_winds",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "primordial_wave",
},
{
["action"] = "windstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ! talent.elemental_spirits.enabled || ( talent.elemental_spirits.enabled & ( charges = max_charges || feral_spirit.active >= 2 ) ) ) & buff.maelstrom_weapon.stack = buff.maelstrom_weapon.max_stack & ( ! talent.crashing_storms.enabled || active_enemies <= 3 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.hot_hand.up",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "buff.electrostatic_wager.stack > 8",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || talent.earthsurge.enabled & ( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled ) & pet.surging_totem.active",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 10 & buff.electrostatic_wager.stack > 4 & ! buff.cl_crash_lightning.up & buff.doom_winds.up",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "( buff.maelstrom_weapon.stack >= 10 ) & ( buff.primordial_storm.down || buff.primordial_storm.remains > gcd.max * 4 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 10 & ( buff.primordial_storm.down || buff.primordial_storm.remains > gcd.max * 4 )",
["action"] = "chain_lightning",
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || ! buff.crash_lightning.up || ( talent.alpha_wolf.enabled & feral_spirit.active & alpha_wolf_min_remains = 0 )",
["action"] = "crash_lightning",
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 ) ) & pet.searing_totem.active",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & dot.flame_shock.ticking",
["action"] = "lava_lash",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up & pet.searing_totem.active",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["criteria"] = "talent.crashing_storms.enabled",
["action"] = "crash_lightning",
},
{
["enabled"] = true,
["criteria"] = "dot.flame_shock.ticking & ( active_dot.flame_shock >= active_enemies || active_dot.flame_shock = 6 )",
["action"] = "fire_nova",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ( buff.primordial_storm.down || buff.primordial_storm.remains > gcd.max * 4 )",
["action"] = "elemental_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.maelstrom_weapon.stack >= 5 & ( buff.primordial_storm.down || buff.primordial_storm.remains > gcd.max * 4 )",
["action"] = "chain_lightning",
},
{
["action"] = "stormstrike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.doom_winds.up || talent.earthsurge.enabled & ( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled ) & pet.surging_totem.active",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock = 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= active_enemies )",
["action"] = "fire_nova",
},
{
["action"] = "voltaic_blaze",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & ! buff.ice_strike.up",
["action"] = "ice_strike",
},
{
["enabled"] = true,
["criteria"] = "talent.hailstorm.enabled & buff.hailstorm.up",
["action"] = "frost_shock",
},
{
["enabled"] = true,
["criteria"] = "( buff.legacy_of_the_frost_witch.up || ! talent.legacy_of_the_frost_witch.enabled ) & pet.surging_totem.active",
["action"] = "sundering",
},
{
["enabled"] = true,
["criteria"] = "talent.molten_assault.enabled & ! ticking",
["action"] = "flame_shock",
},
{
["enabled"] = true,
["criteria"] = "active_dot.flame_shock >= 3",
["action"] = "fire_nova",
},
{
["action"] = "ice_strike",
["enabled"] = true,
},
{
["action"] = "lava_lash",
["enabled"] = true,
},
{
["action"] = "crash_lightning",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! ticking",
["action"] = "flame_shock",
},
},
},
["version"] = 20250430,
["warnings"] = "The import for 'precombat' required some automated changes.\nLine 6: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 6: Converted 'trinket.1.is.manic_grieftorch' to 'trinket.t1.is.manic_grieftorch' (1x).\nLine 6: Converted 'trinket.1.is.elementium_pocket_anvil' to 'trinket.t1.is.elementium_pocket_anvil' (1x).\nLine 6: Converted 'trinket.1.is.beacon_to_the_beyond' to 'trinket.t1.is.beacon_to_the_beyond' (1x).\nLine 7: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\nLine 7: Converted 'trinket.2.is.manic_grieftorch' to 'trinket.t2.is.manic_grieftorch' (1x).\nLine 7: Converted 'trinket.2.is.elementium_pocket_anvil' to 'trinket.t2.is.elementium_pocket_anvil' (1x).\nLine 7: Converted 'trinket.2.is.beacon_to_the_beyond' to 'trinket.t2.is.beacon_to_the_beyond' (1x).\nLine 8: Converted operations in '((cooldown.feral_spirit.remains%(4*talent.witch_doctors_ancestry.enabled))+1000*!talent.feral_spirit.enabled)>?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)>?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)' to '((cooldown.feral_spirit.remains/(4*talent.witch_doctors_ancestry.enabled))+1000*!talent.feral_spirit.enabled)>?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)>?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)'.\n\nThe import for 'default' required some automated changes.\nLine 1: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%300<=30)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%300<=30)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 10: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||(fight_remains%%180<=30)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||(fight_remains%180<=30)'.\nLine 11: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 11: Converted 'trinket.1.buff.any.duration' to 'trinket.t1.buff.any.duration' (1x).\nLine 11: Converted 'trinket.1.buff.any.duration' to 'trinket.t1.buff_duration' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 11: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 11: Converted operations in '!variable.trinket1_is_weird&trinket.t1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.t1.cooldown.duration<=trinket.t1.buff_duration)||(variable.min_talented_cd_remains>=trinket.t1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '!variable.trinket1_is_weird&trinket.t1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%trinket.t1.cooldown.duration<=trinket.t1.buff_duration)||(variable.min_talented_cd_remains>=trinket.t1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 12: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 12: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 12: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 12: Converted 'trinket.2.buff.any.duration' to 'trinket.t2.buff.any.duration' (1x).\nLine 12: Converted 'trinket.2.buff.any.duration' to 'trinket.t2.buff_duration' (1x).\nLine 12: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 12: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 12: Converted operations in '!variable.trinket2_is_weird&trinket.t2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.t2.cooldown.duration<=trinket.t2.buff_duration)||(variable.min_talented_cd_remains>=trinket.t2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '!variable.trinket2_is_weird&trinket.t2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%trinket.t2.cooldown.duration<=trinket.t2.buff_duration)||(variable.min_talented_cd_remains>=trinket.t2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 13: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%150<=5)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%150<=5)'.\nLine 14: Converted operations in '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%120<=5)' to '(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%120<=5)'.\nLine 17: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 18: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 19: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 20: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 21: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||(boss&fight_remains%%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||(boss&fight_remains%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nLine 22: Converted operations in '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))' to '(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))'.\nThe following auras were used in the action list but were not found in the addon database:\n - any\n\nImported 11 action lists.\n",
["profile"] = "actions.precombat+=/windfury_weapon\nactions.precombat+=/flametongue_weapon\nactions.precombat+=/skyfury,if=buff.skyfury.down||active_dot.skyfury<group_members\nactions.precombat+=/lightning_shield\nactions.precombat+=/earth_shield,if=talent.elemental_orbit&buff.earth_shield.down\nactions.precombat+=/variable,name=trinket1_is_weird,value=trinket.1.is.algethar_puzzle_box||trinket.1.is.manic_grieftorch||trinket.1.is.elementium_pocket_anvil||trinket.1.is.beacon_to_the_beyond\nactions.precombat+=/variable,name=trinket2_is_weird,value=trinket.2.is.algethar_puzzle_box||trinket.2.is.manic_grieftorch||trinket.2.is.elementium_pocket_anvil||trinket.2.is.beacon_to_the_beyond\nactions.precombat+=/variable,name=min_talented_cd_remains,value=((cooldown.feral_spirit.remains%(4*talent.witch_doctors_ancestry.enabled))+1000*!talent.feral_spirit.enabled)>?(cooldown.doom_winds.remains+1000*!talent.doom_winds.enabled)>?(cooldown.ascendance.remains+1000*!talent.ascendance.enabled)\nactions.precombat+=/variable,name=target_nature_mod,value=(1+debuff.chaos_brand.up*debuff.chaos_brand.value)*(1+(debuff.hunters_mark.up*target.health.pct>=80)*debuff.hunters_mark.value)\nactions.precombat+=/variable,name=expected_lb_funnel,value=action.lightning_bolt.damage*(1+debuff.lightning_rod.up*variable.target_nature_mod*(1+buff.primordial_wave.up*active_dot.flame_shock*buff.primordial_wave.value)*debuff.lightning_rod.value)\nactions.precombat+=/variable,name=expected_cl_funnel,value=action.chain_lightning.damage*(1+debuff.lightning_rod.up*variable.target_nature_mod*(active_enemies>?(3+2*talent.crashing_storms.enabled))*debuff.lightning_rod.value)\n\n## actions+=/bloodlust,line_cd=600\nactions+=/potion,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%300<=30)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/lightning_lasso,enabled=0,if=!target.is_boss&debuff.casting.up&debuff.casting.v2=0&debuff.casting.remains>gcd.remains&debuff.casting.remains<gcd.remains+gcd.max\nactions+=/thunderstorm,enabled=0,if=talent.thundershock.enabled&!target.is_boss&debuff.casting.up&debuff.casting.v2=0&debuff.casting.remains>gcd.remains&debuff.casting.remains<gcd.remains+gcd.max\nactions+=/capacitor_totem,enabled=0,if=!target.is_boss&debuff.casting.up&debuff.casting.v2=0&debuff.casting.remains>gcd.remains&debuff.casting.remains<gcd.remains+gcd.max\nactions+=/purge,line_cd=settings.purge_icd,if=buff.dispellable_magic.up\nactions+=/greater_purge,if=buff.dispellable_magic.up\nactions+=/poison_cleansing_totem,enabled=0,if=buff.dispellable_poison.up\nactions+=/use_item,name=elementium_pocket_anvil,use_off_gcd=1\nactions+=/use_item,name=algethar_puzzle_box,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||(talent.ascendance.enabled&(cooldown.ascendance.remains<2*action.stormstrike.gcd))||(fight_remains%%180<=30)\nactions+=/use_item,slot=trinket1,if=!variable.trinket1_is_weird&trinket.1.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.1.cooldown.duration<=trinket.1.buff.any.duration)||(variable.min_talented_cd_remains>=trinket.1.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/use_item,slot=trinket2,if=!variable.trinket2_is_weird&trinket.2.has_use_buff&(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%trinket.2.cooldown.duration<=trinket.2.buff.any.duration)||(variable.min_talented_cd_remains>=trinket.2.cooldown.duration)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/use_item,name=beacon_to_the_beyond,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%150<=5)\nactions+=/use_item,name=manic_grieftorch,use_off_gcd=1,if=(!buff.ascendance.up&!buff.feral_spirit.up&!buff.doom_winds.up)||boss&(fight_remains%%120<=5)\nactions+=/use_item,name=house_of_cards,use_off_gcd=1,if=buff.ascendance.up\nactions+=/use_item,name=funhouse_lens,use_off_gcd=1,if=buff.ascendance.up\nactions+=/use_item,slot=trinket1,if=!variable.trinket1_is_weird&!trinket.1.has_use_buff\nactions+=/use_item,slot=trinket2,if=!variable.trinket2_is_weird&!trinket.2.has_use_buff\nactions+=/blood_fury,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.blood_fury.cooldown<=action.blood_fury.duration)||(variable.min_talented_cd_remains>=action.blood_fury.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/berserking,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.berserking.cooldown<=action.berserking.duration)||(variable.min_talented_cd_remains>=action.berserking.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/fireblood,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||(boss&fight_remains%%action.fireblood.cooldown<=action.fireblood.duration)||(variable.min_talented_cd_remains>=action.fireblood.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/ancestral_call,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||boss&(fight_remains%%action.ancestral_call.cooldown<=action.ancestral_call.duration)||(variable.min_talented_cd_remains>=action.ancestral_call.cooldown)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\n## actions+=/invoke_external_buff,name=power_infusion,if=(buff.ascendance.up||buff.feral_spirit.up||buff.doom_winds.up||(fight_remains%%120<=20)||(variable.min_talented_cd_remains>=120)||(!talent.ascendance.enabled&!talent.feral_spirit.enabled&!talent.doom_winds.enabled))\nactions+=/call_action_list,name=single,strict=1,if=active_enemies=1&!talent.surging_totem.enabled\nactions+=/call_action_list,name=single_totemic,strict=1,if=active_enemies=1&talent.surging_totem.enabled\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>1&!toggle.funnel&!talent.surging_totem.enabled\nactions+=/call_action_list,name=aoe_totemic,strict=1,if=active_enemies>1&!toggle.funnel&talent.surging_totem.enabled\nactions+=/call_action_list,name=funnel,strict=1,if=active_enemies>1&toggle.funnel\n\n# Multi target action priority list\nactions.aoe+=/feral_spirit,if=talent.elemental_spirits.enabled||talent.alpha_wolf.enabled\nactions.aoe+=/call_action_list,name=aoe_open,strict=1,if=time<15\nactions.aoe+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.aoe+=/ascendance,if=(dot.flame_shock.ticking||!talent.molten_assault.enabled)&ti_chain_lightning||boss&fight_remains<1\nactions.aoe+=/tempest,cycle_targets=1,if=!buff.arc_discharge.stack>=1&((buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&!talent.raging_maelstrom.enabled)||(buff.maelstrom_weapon.stack>=9))||(buff.maelstrom_weapon.stack>=5&(tempest_mael_count>30))\nactions.aoe+=/feral_spirit,if=fight_remains<16||cooldown.doom_winds.remains>15||cooldown.doom_winds.remains<7||buff.winning_streak.stack=1&buff.maelstrom_weapon.stack>7\nactions.aoe+=/doom_winds\nactions.aoe+=/primordial_wave,if=dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10)&(buff.doom_winds.up||!talent.doom_winds.enabled||(cooldown.doom_winds.remains>buff.primordial_storm.remains)||(buff.primordial_storm.remains<2*gcd))\nactions.aoe+=/crash_lightning,if=talent.converging_storms.enabled&buff.electrostatic_wager.stack>6||!buff.crash_lightning.up\nactions.aoe+=/windstrike,cycle_targets=1,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>0&ti_chain_lightning\nactions.aoe+=/crash_lightning,if=talent.converging_storms.enabled&talent.alpha_wolf.enabled\nactions.aoe+=/stormstrike,if=buff.converging_storms.stack=6&buff.stormblast.stack>0&buff.legacy_of_the_frost_witch.up&buff.maelstrom_weapon.stack<=8\nactions.aoe+=/crash_lightning,if=buff.maelstrom_weapon.stack<=8\nactions.aoe+=/voltaic_blaze,if=buff.maelstrom_weapon.stack<=8\nactions.aoe+=/chain_lightning,cycle_targets=1,if=buff.maelstrom_weapon.stack>=5&!buff.primordial_storm.up&(cooldown.crash_lightning.remains>=1||!talent.alpha_wolf.enabled)\nactions.aoe+=/fire_nova,if=active_dot.flame_shock=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=active_enemies)\nactions.aoe+=/stormstrike,if=talent.stormblast.enabled&talent.stormflurry.enabled\nactions.aoe+=/voltaic_blaze\nactions.aoe+=/lava_lash,cycle_targets=1,if=talent.lashing_flames.enabled||talent.molten_assault.enabled&dot.flame_shock.ticking\nactions.aoe+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.aoe+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe+=/sundering\nactions.aoe+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.aoe+=/flame_shock,cycle_targets=1,if=(talent.fire_nova.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=3\nactions.aoe+=/stormstrike,if=buff.crash_lightning.up&(talent.deeply_rooted_elements.enabled||buff.converging_storms.stack=buff.converging_storms.max_stack)\nactions.aoe+=/crash_lightning,if=talent.crashing_storms.enabled&buff.cl_crash_lightning.up\nactions.aoe+=/windstrike\nactions.aoe+=/stormstrike\nactions.aoe+=/ice_strike\nactions.aoe+=/lava_lash\nactions.aoe+=/crash_lightning\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=2\nactions.aoe+=/chain_lightning,cycle_targets=1,if=buff.maelstrom_weapon.stack>=5&!buff.primordial_storm.up\nactions.aoe+=/flame_shock,if=!ticking\nactions.aoe+=/frost_shock,if=!talent.hailstorm.enabled\n\n# Multi target opener priority list\nactions.aoe_open+=/flame_shock,if=!ticking\nactions.aoe_open+=/crash_lightning,if=(buff.electrostatic_wager.stack>9&buff.doom_winds.up)||!buff.crash_lightning.up\nactions.aoe_open+=/voltaic_blaze,if=active_dot.flame_shock<active_enemies&active_dot.flame_shock<3\nactions.aoe_open+=/lava_lash,if=talent.molten_assault.enabled&(talent.primordial_wave.enabled||talent.fire_nova.enabled)&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<3\nactions.aoe_open+=/primordial_wave,if=(buff.maelstrom_weapon.stack>=4)&dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_open+=/feral_spirit,if=fight_remains<16||buff.maelstrom_weapon.stack>=9\nactions.aoe_open+=/doom_winds,if=buff.maelstrom_weapon.stack>=9||boss&fight_remains<9\nactions.aoe_open+=/ascendance,if=(dot.flame_shock.ticking||!talent.molten_assault.enabled)&ti_chain_lightning&(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)&!buff.doom_winds.up||boss&fight_remains<16\nactions.aoe_open+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=9)&(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)\nactions.aoe_open+=/tempest,cycle_targets=1,if=buff.maelstrom_weapon.stack>=9&buff.arc_discharge.down\nactions.aoe_open+=/crash_lightning,if=(buff.electrostatic_wager.stack>4)\nactions.aoe_open+=/windstrike,cycle_targets=1,if=talent.thorims_invocation.enabled&ti_chain_lightning\nactions.aoe_open+=/chain_lightning,cycle_targets=1,if=buff.maelstrom_weapon.stack>=5&(!buff.primordial_storm.up||!buff.legacy_of_the_frost_witch.up)&buff.doom_winds.up\nactions.aoe_open+=/chain_lightning,cycle_targets=1,if=buff.maelstrom_weapon.stack>=9&(!buff.primordial_storm.up||!buff.legacy_of_the_frost_witch.up)\nactions.aoe_open+=/stormstrike,if=buff.converging_storms.stack=6&buff.stormblast.stack>1\nactions.aoe_open+=/crash_lightning\nactions.aoe_open+=/voltaic_blaze\nactions.aoe_open+=/stormstrike\n\n## Multi target action priority list for the Totemic hero talent tree\nactions.aoe_totemic+=/call_action_list,name=aoe_totemic_open,strict_if=time<16,if=time<16&(cooldown.doom_winds.remains=0||cooldown.sundering.remains=0||!buff.hot_hand.up)\nactions.aoe_totemic+=/surging_totem\nactions.aoe_totemic+=/ascendance,if=ti_chain_lightning\nactions.aoe_totemic+=/crash_lightning,if=talent.crashing_storms.enabled&(active_enemies>=15-5*talent.unruly_winds.enabled)\nactions.aoe_totemic+=/feral_spirit,if=fight_remains<16||((cooldown.doom_winds.remains>15||cooldown.doom_winds.remains<7||buff.winning_streak.stack=1&buff.maelstrom_weapon.stack>7)&(cooldown.primordial_wave.remains<2||buff.primordial_storm.up||!talent.primordial_storm.enabled))\nactions.aoe_totemic+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10)&(cooldown.doom_winds.remains>3)&(buff.doom_winds.remains<=3||!buff.doom_winds.up&cooldown.doom_winds.remains>15||buff.earthen_weapon.stack>=4)||buff.primordial_storm.remains<3*gcd.max\nactions.aoe_totemic+=/flame_shock,if=!ticking&(talent.ashen_catalyst.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies||active_dot.flame_shock<6)\nactions.aoe_totemic+=/doom_winds\nactions.aoe_totemic+=/primordial_wave,if=dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic+=/windstrike\nactions.aoe_totemic+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||feral_spirit.active>=2)))&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!talent.crashing_storms.enabled||active_enemies<=3)\nactions.aoe_totemic+=/lava_lash,if=buff.hot_hand.up\nactions.aoe_totemic+=/crash_lightning,if=buff.electrostatic_wager.stack>8\nactions.aoe_totemic+=/sundering,if=buff.doom_winds.up||talent.earthsurge.enabled&(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)&pet.surging_totem.active\nactions.aoe_totemic+=/chain_lightning,if=buff.maelstrom_weapon.stack>=10&buff.electrostatic_wager.stack>4&!buff.cl_crash_lightning.up&buff.doom_winds.up\nactions.aoe_totemic+=/elemental_blast,if=(buff.maelstrom_weapon.stack>=10)&(buff.primordial_storm.down||buff.primordial_storm.remains>gcd.max*4)\nactions.aoe_totemic+=/chain_lightning,if=buff.maelstrom_weapon.stack>=10&(buff.primordial_storm.down||buff.primordial_storm.remains>gcd.max*4)\nactions.aoe_totemic+=/crash_lightning,if=buff.doom_winds.up||!buff.crash_lightning.up||(talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0)\nactions.aoe_totemic+=/voltaic_blaze\nactions.aoe_totemic+=/fire_nova,if=(dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6))&pet.searing_totem.active\nactions.aoe_totemic+=/lava_lash,if=talent.molten_assault.enabled&dot.flame_shock.ticking\nactions.aoe_totemic+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up&pet.searing_totem.active\nactions.aoe_totemic+=/crash_lightning,if=talent.crashing_storms.enabled\nactions.aoe_totemic+=/fire_nova,if=dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe_totemic+=/crash_lightning\nactions.aoe_totemic+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.aoe_totemic+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&(buff.primordial_storm.down||buff.primordial_storm.remains>gcd.max*4)\nactions.aoe_totemic+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5&(buff.primordial_storm.down||buff.primordial_storm.remains>gcd.max*4)\nactions.aoe_totemic+=/stormstrike\nactions.aoe_totemic+=/sundering,if=buff.doom_winds.up||talent.earthsurge.enabled&(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)&pet.surging_totem.active\nactions.aoe_totemic+=/fire_nova,if=active_dot.flame_shock=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=active_enemies)\nactions.aoe_totemic+=/voltaic_blaze\nactions.aoe_totemic+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.aoe_totemic+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe_totemic+=/sundering,if=(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)&pet.surging_totem.active\nactions.aoe_totemic+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.aoe_totemic+=/fire_nova,if=active_dot.flame_shock>=3\nactions.aoe_totemic+=/ice_strike\nactions.aoe_totemic+=/lava_lash\nactions.aoe_totemic+=/crash_lightning\nactions.aoe_totemic+=/flame_shock,if=!ticking\n\n## Multi target opener priority list for the Totemic hero talent tree\nactions.aoe_totemic_open+=/flame_shock,if=!ticking&!(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic_open+=/lava_lash,if=!pet.surging_totem.active&!(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic_open+=/surging_totem\nactions.aoe_totemic_open+=/fire_nova,if=talent.swirling_maelstrom.enabled&dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic_open+=/feral_spirit\nactions.aoe_totemic_open+=/primordial_wave,if=dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic_open+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10)&(cooldown.doom_winds.remains>3)&(buff.doom_winds.remains<=gcd.max||!buff.doom_winds.up&cooldown.doom_winds.remains>15)||buff.primordial_storm.remains<3*gcd.max\nactions.aoe_totemic_open+=/elemental_blast,if=buff.maelstrom_weapon.stack>=10&!buff.legacy_of_the_frost_witch.up&cooldown.doom_winds.remains=0\nactions.aoe_totemic_open+=/doom_winds,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up\nactions.aoe_totemic_open+=/crash_lightning,if=(buff.electrostatic_wager.stack>9&buff.doom_winds.up)||!buff.crash_lightning.up\nactions.aoe_totemic_open+=/lava_lash,if=buff.hot_hand.up\nactions.aoe_totemic_open+=/sundering,if=buff.legacy_of_the_frost_witch.up||(buff.earthen_weapon.stack>=2&buff.primordial_storm.up)\nactions.aoe_totemic_open+=/lava_lash,if=(buff.legacy_of_the_frost_witch.up&buff.whirling_fire.up)\nactions.aoe_totemic_open+=/crash_lightning,if=(buff.earthen_weapon.stack>=2&buff.primordial_storm.up&buff.doom_winds.up)\nactions.aoe_totemic_open+=/elemental_blast,if=buff.maelstrom_weapon.stack>=10\nactions.aoe_totemic_open+=/chain_lightning,if=buff.maelstrom_weapon.stack>=10\nactions.aoe_totemic_open+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up&pet.searing_totem.active\nactions.aoe_totemic_open+=/fire_nova,if=pet.searing_totem.active&dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic_open+=/ice_strike\nactions.aoe_totemic_open+=/stormstrike,if=buff.maelstrom_weapon.stack<10&!buff.legacy_of_the_frost_witch.up\nactions.aoe_totemic_open+=/lava_lash\nactions.aoe_totemic_open+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up&pet.searing_totem.active\nactions.aoe_totemic_open+=/crash_lightning,if=talent.crashing_storms.enabled\nactions.aoe_totemic_open+=/fire_nova,if=dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.aoe_totemic_open+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.aoe_totemic_open+=/crash_lightning\nactions.aoe_totemic_open+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.aoe_totemic_open+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&!buff.primordial_storm.up\nactions.aoe_totemic_open+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5&!buff.primordial_storm.up\nactions.aoe_totemic_open+=/stormstrike\n\n## Funnel action priority list\nactions.funnel+=/feral_spirit,if=talent.elemental_spirits.enabled\nactions.funnel+=/surging_totem\nactions.funnel+=/ascendance\nactions.funnel+=/windstrike,if=(talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>0)||buff.converging_storms.stack=buff.converging_storms.max_stack\nactions.funnel+=/tempest,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack||(buff.maelstrom_weapon.stack>=5&(tempest_mael_count>30||buff.awakening_storms.stack=2))\nactions.funnel+=/lightning_bolt,if=(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)&buff.primordial_wave.up&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(!buff.splintered_elements.up||boss&fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.funnel+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5&talent.elemental_spirits.enabled&feral_spirit.active>=4\nactions.funnel+=/lightning_bolt,if=talent.supercharge.enabled&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(variable.expected_lb_funnel>variable.expected_cl_funnel)\nactions.funnel+=/chain_lightning,if=(talent.supercharge.enabled&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack)||buff.arc_discharge.up&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lava_lash,if=(talent.molten_assault.enabled&dot.flame_shock.ticking&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6)||(talent.ashen_catalyst.enabled&buff.ashen_catalyst.stack=buff.ashen_catalyst.max_stack)\nactions.funnel+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\nactions.funnel+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/feral_spirit\nactions.funnel+=/doom_winds\nactions.funnel+=/stormstrike,if=buff.converging_storms.stack=buff.converging_storms.max_stack\nactions.funnel+=/lava_burst,if=(buff.molten_weapon.stack>buff.crackling_surge.stack)&buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/lightning_bolt,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack&(variable.expected_lb_funnel>variable.expected_cl_funnel)\nactions.funnel+=/chain_lightning,if=buff.maelstrom_weapon.stack=buff.maelstrom_weapon.max_stack\nactions.funnel+=/crash_lightning,if=buff.doom_winds.up||!buff.crash_lightning.up||(talent.alpha_wolf.enabled&feral_spirit.active&alpha_wolf_min_remains=0)||(talent.converging_storms.enabled&buff.converging_storms.stack<buff.converging_storms.max_stack)\nactions.funnel+=/sundering,if=buff.doom_winds.up||talent.earthsurge.enabled\nactions.funnel+=/fire_nova,if=active_dot.flame_shock=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=active_enemies)\nactions.funnel+=/ice_strike,if=talent.hailstorm.enabled&!buff.ice_strike.up\nactions.funnel+=/frost_shock,if=talent.hailstorm.enabled&buff.hailstorm.up\nactions.funnel+=/sundering\nactions.funnel+=/flame_shock,if=talent.molten_assault.enabled&!ticking\nactions.funnel+=/flame_shock,cycle_targets=1,if=refreshable&(talent.fire_nova.enabled||talent.primordial_wave.enabled)&(active_dot.flame_shock<active_enemies)&active_dot.flame_shock<6\nactions.funnel+=/fire_nova,if=active_dot.flame_shock>=3\nactions.funnel+=/stormstrike,if=buff.crash_lightning.up&talent.deeply_rooted_elements.enabled\nactions.funnel+=/crash_lightning,if=talent.crashing_storms.enabled&buff.cl_crash_lightning.up&active_enemies>=4\nactions.funnel+=/windstrike\nactions.funnel+=/stormstrike\nactions.funnel+=/ice_strike\nactions.funnel+=/lava_lash\nactions.funnel+=/crash_lightning\nactions.funnel+=/fire_nova,if=active_dot.flame_shock>=2\nactions.funnel+=/elemental_blast,if=(!talent.elemental_spirits.enabled||(talent.elemental_spirits.enabled&(charges=max_charges||buff.feral_spirit.up)))&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lava_burst,if=(buff.molten_weapon.stack>buff.crackling_surge.stack)&buff.maelstrom_weapon.stack>=5\nactions.funnel+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&(variable.expected_lb_funnel>variable.expected_cl_funnel)\nactions.funnel+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5\nactions.funnel+=/flame_shock,if=!ticking\nactions.funnel+=/frost_shock,if=!talent.hailstorm.enabled\n\n# Single target action priority list\nactions.single=call_action_list,name=single_open,strict_if=time<18,if=time<18&(cooldown.doom_winds.remains=0||cooldown.sundering.remains=0||!buff.hot_hand.up)\nactions.single+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10||buff.primordial_storm.remains<=4&buff.maelstrom_weapon.stack>=5)\nactions.single+=/flame_shock,if=!ticking&(talent.ashen_catalyst.enabled||talent.primordial_wave.enabled||talent.lashing_flames.enabled)\nactions.single+=/feral_spirit,if=fight_remains<16||cooldown.doom_winds.remains>15||cooldown.doom_winds.remains<7||buff.winning_streak.stack=1&buff.maelstrom_weapon.stack>7\nactions.single+=/windstrike,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>0&ti_lightning_bolt\nactions.single+=/doom_winds,if=(!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up)&(cooldown.feral_spirit.remains>30||cooldown.feral_spirit.remains<2)\nactions.single+=/primordial_wave,if=dot.flame_shock.ticking&(raid_event.adds.in>action.primordial_wave.cooldown||raid_event.adds.in<6)\nactions.single+=/ascendance,if=(dot.flame_shock.ticking||!talent.primordial_wave.enabled||!talent.ashen_catalyst.enabled)\nactions.single+=/windstrike,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>0&ti_lightning_bolt\nactions.single+=/elemental_blast,if=((!talent.overflowing_maelstrom.enabled&buff.maelstrom_weapon.stack>=5)||(buff.maelstrom_weapon.stack>=9))&charges_fractional>=1.8\nactions.single+=/tempest,if=(buff.tempest.stack=buff.tempest.max_stack&(tempest_mael_count>30||buff.awakening_storms.stack=3)&buff.maelstrom_weapon.stack>=9)\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=9&!buff.primordial_storm.up&buff.arc_discharge.stack>1\nactions.single+=/elemental_blast,if=((!talent.overflowing_maelstrom.enabled&buff.maelstrom_weapon.stack>=5)||(buff.maelstrom_weapon.stack>=9))\nactions.single+=/tempest,if=buff.maelstrom_weapon.stack>=9\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=9\nactions.single+=/lava_lash,if=(buff.hot_hand.up&(buff.ashen_catalyst.stack=buff.ashen_catalyst.max_stack))||(dot.flame_shock.remains<=2&!talent.voltaic_blaze.enabled)||(talent.lashing_flames.enabled&(debuff.lashing_flames.down))\nactions.single+=/crash_lightning,if=(buff.doom_winds.up&buff.electrostatic_wager.stack>1)||buff.electrostatic_wager.stack>8\nactions.single+=/stormstrike,if=buff.doom_winds.up||buff.stormblast.stack>0\nactions.single+=/crash_lightning,if=talent.unrelenting_storms.enabled&talent.alpha_wolf.enabled&alpha_wolf_min_remains=0\nactions.single+=/lava_lash,if=buff.hot_hand.up\nactions.single+=/crash_lightning,if=set_bonus.tww2_4pc\nactions.single+=/voltaic_blaze\nactions.single+=/stormstrike\nactions.single+=/lava_lash,if=talent.elemental_assault.enabled&talent.molten_assault.enabled&dot.flame_shock.ticking\nactions.single+=/ice_strike\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&!buff.primordial_storm.up\nactions.single+=/frost_shock,if=buff.hailstorm.up\nactions.single+=/flame_shock,if=!ticking\nactions.single+=/sundering,if=raid_event.adds.in>=action.sundering.cooldown\nactions.single+=/crash_lightning\nactions.single+=/frost_shock\nactions.single+=/fire_nova,if=active_dot.flame_shock\nactions.single+=/earth_elemental\nactions.single+=/flame_shock,if=settings.filler_shock\n\n# Single target opener priority list\nactions.single_open=flame_shock,if=!ticking\nactions.single_open+=/voltaic_blaze,if=active_dot.flame_shock<3&!buff.ascendance.up\nactions.single_open+=/primordial_wave,if=(buff.maelstrom_weapon.stack>=4)&dot.flame_shock.ticking&(active_dot.flame_shock>=active_enemies||active_dot.flame_shock=6)\nactions.single_open+=/feral_spirit,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up||fight_remains<16\nactions.single_open+=/doom_winds,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up||boss&fight_remains<9\nactions.single_open+=/ascendance,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up||boss&fight_remains<16\nactions.single_open+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10)&(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)\nactions.single_open+=/windstrike\nactions.single_open+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5\nactions.single_open+=/tempest,if=buff.maelstrom_weapon.stack>=5\nactions.single_open+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5\nactions.single_open+=/stormstrike\nactions.single_open+=/crash_lightning,if=set_bonus.tww2_4pc\nactions.single_open+=/voltaic_blaze\nactions.single_open+=/lava_lash,if=talent.elemental_assault.enabled&talent.molten_assault.enabled&dot.flame_shock.ticking\nactions.single_open+=/ice_strike\n\n# Single target action priority list for the Totemic hero talent tree\nactions.single_totemic=call_action_list,name=single_totemic_open,strict_if=time<20,if=time<20&(cooldown.doom_winds.remains=0||cooldown.sundering.remains=0||!buff.hot_hand.up)\nactions.single_totemic+=/surging_totem\nactions.single_totemic+=/ascendance,if=ti_lightning_bolt&pet.surging_totem.remains>4&(buff.totemic_rebound.stack>=3||buff.maelstrom_weapon.stack>0)\nactions.single_totemic+=/flame_shock,if=!ticking&(talent.ashen_catalyst.enabled||talent.primordial_wave.enabled)\nactions.single_totemic+=/lava_lash,if=buff.hot_hand.up\nactions.single_totemic+=/feral_spirit,if=fight_remains<16||((cooldown.doom_winds.remains>23||cooldown.doom_winds.remains<7||buff.winning_streak.stack=1&buff.maelstrom_weapon.stack>7)&(cooldown.primordial_wave.remains<20||buff.primordial_storm.up||!talent.primordial_storm.enabled))\nactions.single_totemic+=/primordial_wave,if=dot.flame_shock.ticking&(raid_event.adds.in>action.primordial_wave.cooldown)||raid_event.adds.in<6\nactions.single_totemic+=/doom_winds,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up\nactions.single_totemic+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10)&((cooldown.doom_winds.remains>=buff.primordial_storm.remains)||buff.doom_winds.up||!talent.doom_winds.enabled||(buff.primordial_storm.remains<2*gcd))\nactions.single_totemic+=/sundering,if=buff.ascendance.up&pet.surging_totem.active&talent.earthsurge.enabled&buff.legacy_of_the_frost_witch.up&buff.totemic_rebound.stack>=5&buff.earthen_weapon.stack>=2\nactions.single_totemic+=/windstrike,if=talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>0&ti_lightning_bolt\nactions.single_totemic+=/sundering,if=buff.legacy_of_the_frost_witch.up&((cooldown.ascendance.remains>=10&talent.ascendance.enabled)||!talent.ascendance.enabled)&pet.surging_totem.active&buff.totemic_rebound.stack>=3&!buff.ascendance.up\nactions.single_totemic+=/crash_lightning,if=talent.unrelenting_storms.enabled&talent.alpha_wolf.enabled&alpha_wolf_min_remains=0\nactions.single_totemic+=/lava_burst,if=!talent.thorims_invocation.enabled&buff.maelstrom_weapon.stack>=10&buff.whirling_air.down\nactions.single_totemic+=/elemental_blast,if=(buff.maelstrom_weapon.stack>=10)&(buff.primordial_storm.down||buff.primordial_storm.remains>4)\nactions.single_totemic+=/stormstrike,if=buff.doom_winds.up&buff.legacy_of_the_frost_witch.up\nactions.single_totemic+=/lightning_bolt,if=(buff.maelstrom_weapon.stack>=10)&(buff.primordial_storm.down||buff.primordial_storm.remains>4)\nactions.single_totemic+=/crash_lightning,if=buff.electrostatic_wager.stack>4\nactions.single_totemic+=/stormstrike,if=buff.doom_winds.up||buff.stormblast.stack>1\nactions.single_totemic+=/lava_lash,if=buff.whirling_fire.up||buff.ashen_catalyst.stack>=8\nactions.single_totemic+=/windstrike\nactions.single_totemic+=/stormstrike\nactions.single_totemic+=/lava_lash\nactions.single_totemic+=/crash_lightning,if=set_bonus.tww2_4pc\nactions.single_totemic+=/voltaic_blaze\nactions.single_totemic+=/crash_lightning,if=talent.unrelenting_storms.enabled\nactions.single_totemic+=/ice_strike,if=!buff.ice_strike.up\nactions.single_totemic+=/crash_lightning\nactions.single_totemic+=/frost_shock\nactions.single_totemic+=/fire_nova,if=active_dot.flame_shock\nactions.single_totemic+=/earth_elemental\nactions.single_totemic+=/flame_shock,if=!talent.voltaic_blaze.enabled\n\n# Single target opener priority list for the Totemic hero talent tree\nactions.single_totemic_open=flame_shock,if=!ticking\nactions.single_totemic_open+=/lava_lash,if=!pet.surging_totem.active&talent.lashing_flames.enabled&debuff.lashing_flames.down\nactions.single_totemic_open+=/surging_totem\nactions.single_totemic_open+=/primordial_wave\nactions.single_totemic_open+=/feral_spirit,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up||fight_remains<16\nactions.single_totemic_open+=/doom_winds,if=!talent.legacy_of_the_frost_witch.enabled||buff.legacy_of_the_frost_witch.up||boss&fight_remains<9\nactions.single_totemic_open+=/primordial_storm,if=(buff.maelstrom_weapon.stack>=10)&(buff.legacy_of_the_frost_witch.up||!talent.legacy_of_the_frost_witch.enabled)\nactions.single_totemic_open+=/lava_lash,if=buff.hot_hand.up\nactions.single_totemic_open+=/stormstrike,if=buff.doom_winds.up&buff.legacy_of_the_frost_witch.up\nactions.single_totemic_open+=/sundering,if=buff.legacy_of_the_frost_witch.up\nactions.single_totemic_open+=/elemental_blast,if=buff.maelstrom_weapon.stack=10\nactions.single_totemic_open+=/lightning_bolt,if=buff.maelstrom_weapon.stack=10\nactions.single_totemic_open+=/stormstrike\nactions.single_totemic_open+=/lava_lash",
["author"] = "SimC",
},
["Demonology"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/dragonflight/engine/class_modules/apl/warlock.cpp",
["builtIn"] = true,
["date"] = 20250302,
["spec"] = 266,
["desc"] = "2025-03-02: Sync with SimC",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! pet.demonic_tyrant.active & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & ( pet.demonic_tyrant.active || ! talent.summon_demonic_tyrant.enabled || variable.trinket_priority = 2 & cooldown.summon_demonic_tyrant.remains > 20 & ! pet.demonic_tyrant.active & trinket.t2.cooldown.remains < cooldown.summon_demonic_tyrant.remains + 5 ) & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 & ! variable.trinket_2_manual ) || variable.trinket_1_buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! pet.demonic_tyrant.active & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & ( pet.demonic_tyrant.active || ! talent.summon_demonic_tyrant.enabled || variable.trinket_priority = 1 & cooldown.summon_demonic_tyrant.remains > 20 & ! pet.demonic_tyrant.active & trinket.t1.cooldown.remains < cooldown.summon_demonic_tyrant.remains + 5 ) & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 & ! variable.trinket_1_manual ) || variable.trinket_2_buff_duration >= fight_remains",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains ) & ( trinket.t1.cast_time > 0 & ! pet.demonic_tyrant.active || ! trinket.t1.cast_time > 0 ) || ( time < 20 & variable.trinket_2_buffs ) || cooldown.summon_demonic_tyrant.remains_expected > 20 )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains ) & ( trinket.t2.cast_time > 0 & ! pet.demonic_tyrant.active || ! trinket.t2.cast_time > 0 ) || ( time < 20 & variable.trinket_1_buffs ) || cooldown.summon_demonic_tyrant.remains_expected > 20 )",
},
{
["enabled"] = true,
["name"] = "spymasters_web",
["use_off_gcd"] = 1,
["criteria"] = "pet.demonic_tyrant.active & fight_remains <= 80 & buff.spymasters_report.stack >= 30 & ( ! variable.trinket_1_buffs & trinket.t2.is.spymasters_web || ! variable.trinket_2_buffs & trinket.t1.is.spymasters_web ) || fight_remains <= 20 & ( trinket.t1.cooldown.remains & trinket.t2.is.spymasters_web || trinket.t2.cooldown.remains & trinket.t1.is.spymasters_web || ! variable.trinket_1_buffs || ! variable.trinket_2_buffs )",
["action"] = "spymasters_web",
},
{
["enabled"] = true,
["name"] = "imperfect_ascendancy_serum",
["use_off_gcd"] = 1,
["criteria"] = "pet.demonic_tyrant.active & gcd.remains > 0 || fight_remains <= 30",
["action"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["name"] = "mirror_of_fractured_tomorrows",
["action"] = "mirror_of_fractured_tomorrows",
["criteria"] = "trinket.t1.is.mirror_of_fractured_tomorrows & variable.trinket_priority = 2 || trinket.t2.is.mirror_of_fractured_tomorrows & variable.trinket_priority = 1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_1_buffs & ( variable.damage_trinket_priority = 1 || trinket.t2.cooldown.remains )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "! variable.trinket_2_buffs & ( variable.damage_trinket_priority = 2 || trinket.t1.cooldown.remains )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "! equipped.neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "( pet.demonic_tyrant.active || fight_remains <= 15 ) & ! variable.trinket_1_buffs & ! variable.trinket_2_buffs",
["name"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "( pet.demonic_tyrant.active || fight_remains <= 15 || trinket.t2.cooldown.remains > cooldown.summon_demonic_tyrant.remains ) & variable.trinket_2_buffs",
["name"] = "neural_synapse_enhancer",
},
{
["enabled"] = true,
["action"] = "neural_synapse_enhancer",
["slot"] = "main_hand",
["use_off_gcd"] = 1,
["criteria"] = "( pet.demonic_tyrant.active || fight_remains <= 15 || trinket.t1.cooldown.remains > cooldown.summon_demonic_tyrant.remains ) & variable.trinket_1_buffs",
["name"] = "neural_synapse_enhancer",
},
},
["fight_end"] = {
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "grimoire_felguard",
},
{
["action"] = "ruination",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 2 * gcd.max & ! prev_gcd.1.implosion",
["action"] = "implosion",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < gcd.max * 2 * buff.demonic_core.stack + 9 & buff.demonic_core.up & ( soul_shard < 4 || fight_remains < buff.demonic_core.stack * gcd.max )",
["action"] = "demonbolt",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "call_dreadstalkers",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 20",
["action"] = "summon_demonic_tyrant",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < 10",
["action"] = "demonic_strength",
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack < 3 & fight_remains < 20",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "fight_remains < gcd.max * 2 * buff.demonic_core.stack + 9 & buff.demonic_core.up & ( soul_shard < 4 || fight_remains < buff.demonic_core.stack * gcd.max )",
["action"] = "demonbolt",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 2 & fight_remains < gcd.max * 2 * buff.demonic_core.stack + 9",
["action"] = "hand_of_guldan",
},
{
["action"] = "infernal_bolt",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "axe_toss",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["criteria"] = "buff.tyrant.remains > 10",
["action"] = "potion",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "pet.demonic_tyrant.active || boss & fight_remains < 22",
["var_name"] = "check_racials",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["use_off_gcd"] = 1,
["criteria"] = "variable.check_racials",
["list_name"] = "racials",
},
{
["use_off_gcd"] = 1,
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "boss & fight_remains < 30",
["list_name"] = "fight_end",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "time < variable.first_tyrant_time",
["list_name"] = "opener",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "cooldown.summon_demonic_tyrant.remains < gcd.max * 14",
["list_name"] = "tyrant",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains > 25 || variable.next_tyrant_cd > 25",
["action"] = "call_dreadstalkers",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains > 30",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.up & ( ! talent.doom.enabled || buff.demonic_core.stack > 1 || debuff.doom.remains > 10 || debuff.doom.down ) & ( ( ( ! talent.fel_invocation.enabled || cooldown.soul_strike.remains > gcd.max * 2 ) & soul_shard < 4 ) ) & ! prev_gcd.1.demonbolt & ! variable.pool_cores_for_tyrant",
["action"] = "demonbolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack >= 3 - ( talent.doom.enabled & debuff.doom.down ) * 2 & soul_shard <= 3 & ! variable.pool_cores_for_tyrant",
["action"] = "demonbolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack < 3 & cooldown.summon_demonic_tyrant.remains > 25 & ! buff.demonic_power.up",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "demonic_strength",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1",
["action"] = "bilescourge_bombers",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( cooldown.demonic_strength.remains || ! talent.demonic_strength.enabled )",
["action"] = "guillotine",
},
{
["action"] = "ruination",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.infernal_bolt.remains > cast_time & buff.infernal_bolt.remains < 2 * gcd.max || soul_shard < 3 & cooldown.summon_demonic_tyrant.remains > 20",
["action"] = "infernal_bolt",
},
{
["enabled"] = true,
["criteria"] = "two_cast_imps > 0 & variable.impl & ! prev_gcd.1.implosion & ( active_enemies > 3 || active_enemies <= 3 & last_cast_imps > 0 )",
["action"] = "implosion",
},
{
["enabled"] = true,
["criteria"] = "variable.diabolic_ritual_remains > gcd.max & variable.diabolic_ritual_remains < gcd.max + gcd.max & buff.demonic_core.up & soul_shard <= 3",
["action"] = "demonbolt",
},
{
["enabled"] = true,
["criteria"] = "variable.diabolic_ritual_remains > gcd.max & variable.diabolic_ritual_remains < soul_shard_deficit * cast_time + gcd.max & soul_shard < 5",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "( ( soul_shard > 2 & ( cooldown.call_dreadstalkers.remains > gcd.max * 4 || buff.demonic_calling.remains - gcd.max > cooldown.call_dreadstalkers.remains ) & cooldown.summon_demonic_tyrant.remains > 17 ) || soul_shard = 5 || soul_shard = 4 & talent.fel_invocation.enabled ) & ( active_enemies = 1 )",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["criteria"] = "soul_shard > 2 & ! ( active_enemies = 1 )",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["criteria"] = "active_enemies < 4 & buff.demonic_core.stack > 1 & ( ( soul_shard < 4 & ! talent.soul_strike.enabled || cooldown.soul_strike.remains > gcd.max * 2 & talent.fel_invocation.enabled ) || soul_shard < 3 ) & ! variable.pool_cores_for_tyrant",
["action"] = "demonbolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.up & buff.tyrant.up & soul_shard < 3",
["action"] = "demonbolt",
},
{
["enabled"] = true,
["criteria"] = "buff.demonic_core.stack > 1 & soul_shard < 4",
["action"] = "demonbolt",
},
{
["action"] = "infernal_bolt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! pet.tyrant.active & cooldown.tyrant_remains > 15 & active_enemies > 1",
["action"] = "lights_judgment",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( cooldown.demonic_strength.remains || ! talent.demonic_strength.enabled ) & talent.fel_sunder.enabled",
["action"] = "felstorm",
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
["action"] = "fel_domination",
},
{
["enabled"] = true,
["criteria"] = "! pet.alive & ! buff.grimoire_of_sacrifice.up",
["action"] = "summon_pet",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "12",
["var_name"] = "first_tyrant_time",
["description"] = "Sets the expected Tyrant Setup on pull to take a total 12 seconds long",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "first_tyrant_time",
["value"] = "action.grimoire_felguard.execute_time",
["description"] = "Accounts for the execution time of Grimoire Felguard in the setup of Tyrant on Pull",
["criteria"] = "talent.grimoire_felguard.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "first_tyrant_time",
["value"] = "action.summon_vilefiend.execute_time",
["description"] = "Accounts for the execution time of Vilefiend in the the setup of Tyrant on Pull",
["criteria"] = "talent.summon_vilefiend.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "first_tyrant_time",
["value"] = "gcd.max",
["description"] = "Accounts for the execution time of both Grimoire Felguard and Vilefiend in the tyrant Setup on Pull",
["criteria"] = "talent.grimoire_felguard.enabled || talent.summon_vilefiend.enabled",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time",
["var_name"] = "first_tyrant_time",
["description"] = "Accounts for Tyrant own Cast Time and an additional Shadowbolt cast time",
},
{
["enabled"] = true,
["op"] = "min",
["action"] = "variable",
["value"] = "10",
["var_name"] = "first_tyrant_time",
["description"] = "Sets an absolute minimun of 10s for the First Tyrant Setup",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "1",
["var_name"] = "in_opener",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
["description"] = "Defines if the the Trinket 1 is a buff Trinket in the trinket logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
["description"] = "Defines if the the Trinket 2 is a buff Trinket in the trinket logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.ruby_whelp_shell",
["var_name"] = "trinket_1_exclude",
["description"] = "For On Use Trinkets on slot 1 with on use effects you dont want to use in combat",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.ruby_whelp_shell",
["var_name"] = "trinket_2_exclude",
["description"] = "For On Use Trinkets on slot 2 with on use effects you dont want to use in combat",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.spymasters_web || trinket.t1.is.imperfect_ascendancy_serum",
["var_name"] = "trinket_1_manual",
["description"] = "Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.spymasters_web || trinket.t2.is.imperfect_ascendancy_serum",
["var_name"] = "trinket_2_manual",
["description"] = "Sets a specific Trinkets in Slot 2 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration + ( trinket.t1.is.mirror_of_fractured_tomorrows * 20 )",
["var_name"] = "trinket_1_buff_duration",
["description"] = "Defines the Duration of the buff or an expected time for value of the trinket",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration + ( trinket.t2.is.mirror_of_fractured_tomorrows * 20 )",
["var_name"] = "trinket_2_buff_duration",
["description"] = "Defines the Duration of the buff or an expected time for value of the trinket",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Trinket Automatic Logic for Trinket 1",
["value"] = "1",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.summon_demonic_tyrant.duration = 0 || cooldown.summon_demonic_tyrant.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Trinket Automatic Logic for Trinket 2",
["value"] = "1",
["var_name"] = "trinket_2_sync",
["action"] = "variable",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.summon_demonic_tyrant.duration = 0 || cooldown.summon_demonic_tyrant.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Automatic Logic in case of 2 Buff Trinkets",
["value"] = "2",
["var_name"] = "damage_trinket_priority",
["action"] = "variable",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_2_buffs & trinket.t2.ilvl > trinket.t1.ilvl",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["value"] = "2",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( ( trinket.t1.cooldown.duration / variable.trinket_1_buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) ) * ( 1 + ( ( trinket.t1.ilvl - trinket.t2.ilvl ) / 100 ) ) )",
},
{
["action"] = "power_siphon",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "! buff.power_siphon.up || soul_shards.deficit > 1",
["action"] = "demonbolt",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
},
["racials"] = {
{
["use_off_gcd"] = 1,
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
},
["opener"] = {
{
["enabled"] = true,
["criteria"] = "soul_shard >= 5 - talent.fel_invocation.enabled",
["action"] = "grimoire_felguard",
},
{
["enabled"] = true,
["criteria"] = "soul_shard = 5",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 5 & cooldown.call_dreadstalkers.up",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "soul_shard = 5",
["action"] = "call_dreadstalkers",
},
{
["action"] = "ruination",
["enabled"] = true,
},
},
["tyrant"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["criteria"] = "! variable.check_racials & ( variable.imp_despawn & variable.imp_despawn < time + gcd.max * 2 + action.summon_demonic_tyrant.cast_time & ( prev_gcd.1.hand_of_guldan || prev_gcd.1.ruination ) & ( variable.imp_despawn & variable.imp_despawn < time + gcd.max + action.summon_demonic_tyrant.cast_time || soul_shard < 2 ) )",
["list_name"] = "racials",
},
{
["enabled"] = true,
["criteria"] = "variable.imp_despawn & variable.imp_despawn < time + gcd.max * 2 + action.summon_demonic_tyrant.cast_time & ( prev_gcd.1.hand_of_guldan || prev_gcd.1.ruination ) & ( variable.imp_despawn & variable.imp_despawn < time + gcd.max + action.summon_demonic_tyrant.cast_time || soul_shard < 2 )",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains < 15 & ( time < variable.first_tyrant_time || cooldown.summon_demonic_tyrant.remains > ( action.summon_demonic_tyrant.cast_time + 2 * gcd.max ) )",
["action"] = "power_siphon",
},
{
["enabled"] = true,
["criteria"] = "buff.dreadstalkers.remains > gcd.max + action.summon_demonic_tyrant.cast_time & ( soul_shard = 5 || variable.imp_despawn )",
["action"] = "ruination",
},
{
["enabled"] = true,
["criteria"] = "( buff.infernal_bolt.remains > cast_time & buff.infernal_bolt.remains < 2 * gcd.max || ! buff.demonic_core.up ) & variable.imp_despawn > time + gcd.max * 2 + action.summon_demonic_tyrant.cast_time & soul_shard < 3",
["action"] = "infernal_bolt",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.call_dreadstalkers & soul_shard < 4 & buff.demonic_core.stack < 4",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.2.call_dreadstalkers & prev_gcd.1.shadow_bolt & buff.bloodlust.up & soul_shard < 5",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.summon_vilefiend & ( buff.demonic_calling.down || prev_gcd.2.grimoire_felguard )",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "prev_gcd.1.grimoire_felguard & buff.demonic_core.stack < 3 & buff.demonic_calling.remains > gcd.max * 3",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "variable.imp_despawn > time + gcd.max * 2 + action.summon_demonic_tyrant.cast_time & ! buff.demonic_core.up & buff.demonic_art_pit_lord.up & variable.imp_despawn < time + gcd.max * 5 + action.summon_demonic_tyrant.cast_time",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["criteria"] = "variable.imp_despawn > time + gcd.max + action.summon_demonic_tyrant.cast_time & variable.imp_despawn < time + gcd.max * 2 + action.summon_demonic_tyrant.cast_time & buff.dreadstalkers.remains > gcd.max + action.summon_demonic_tyrant.cast_time & soul_shard > 1",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["criteria"] = "! buff.demonic_core.up & variable.imp_despawn > time + gcd.max * 2 + action.summon_demonic_tyrant.cast_time & variable.imp_despawn < time + gcd.max * 4 + action.summon_demonic_tyrant.cast_time & soul_shard < 3 & buff.dreadstalkers.remains > gcd.max * 2 + action.summon_demonic_tyrant.cast_time",
["action"] = "shadow_bolt",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains < 17 - 2 * gcd.max & cooldown.summon_vilefiend.remains < 15 - 2 * gcd.max & cooldown.call_dreadstalkers.remains < 12 - 2 * gcd.max",
["action"] = "grimoire_felguard",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains < 15 - 2 * gcd.max & ( buff.grimoire_felguard.up || cooldown.grimoire_felguard.remains > 15 || ! talent.grimoire_felguard.enabled ) & ( buff.dreadstalkers.up || cooldown.call_dreadstalkers.remains < 15 - 2 * gcd.max || ! talent.call_dreadstalkers.enabled )",
["action"] = "summon_vilefiend",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_demonic_tyrant.remains < 12 - 2 * gcd.max & ( buff.vilefiend.up || cooldown.summon_vilefiend.remains < 12 - 2 * gcd.max || ! talent.summon_vilefiend.enabled )",
["action"] = "call_dreadstalkers",
},
{
["enabled"] = true,
["criteria"] = "( ( ( variable.imp_despawn & variable.imp_despawn < time + gcd.max * 2.5 + cast_time ) || ( buff.wild_imps.stack > 9 & soul_shards < 2 ) ) & buff.dreadstalkers.up & ( buff.vilefiend.up || ! talent.summon_vilefiend.enabled ) ) || ( buff.dreadstalkers.up & buff.dreadstalkers.remains < gcd.max * 2 + cast_time & ( ( buff.vilefiend.up & buff.vilefiend.remains > 2 * gcd.max ) || ! talent.summon_vilefiend.enabled ) & ( ( buff.grimoire_felguard.up & buff.grimoire_felguard.remains > 2 * gcd.max ) || ! talent.grimoire_felguard.enabled || cooldown.grimoire_felguard.remains > 20 ) )",
["action"] = "summon_demonic_tyrant",
},
{
["enabled"] = true,
["criteria"] = "( variable.imp_despawn || buff.dreadstalkers.remains ) & soul_shard >= 3 || soul_shard = 5",
["action"] = "hand_of_guldan",
},
{
["enabled"] = true,
["criteria"] = "variable.imp_despawn & soul_shard < 3",
["action"] = "infernal_bolt",
},
{
["enabled"] = true,
["criteria"] = "variable.imp_despawn & buff.demonic_core.up & soul_shard < 4 || prev_gcd.1.call_dreadstalkers & soul_shard < 4 & buff.demonic_core.stack = 4 || buff.demonic_core.stack = 4 & soul_shard < 4 || buff.demonic_core.stack >= 2 & cooldown.power_siphon.remains < 5",
["action"] = "demonbolt",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "variable.imp_despawn || soul_shard = 5 & cooldown.summon_vilefiend.remains > gcd.max * 3",
["action"] = "ruination",
},
{
["action"] = "shadow_bolt",
["enabled"] = true,
},
{
["action"] = "infernal_bolt",
["enabled"] = true,
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.summon_demonic_tyrant.remains_expected",
["var_name"] = "next_tyrant_cd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "in_opener",
["criteria"] = "pet.demonic_tyrant.active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "impl",
["value"] = "buff.tyrant.down",
["description"] = "Defines the viability of Implosion when Tyrant is down",
["criteria"] = "active_enemies > 1 + ( talent.sacrificed_souls.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "impl",
["value"] = "buff.tyrant.remains < 6",
["description"] = "Defines the Viability of Implosion while Tyrant is Up",
["criteria"] = "active_enemies > 2 + ( talent.sacrificed_souls.enabled ) & active_enemies < 5 + ( talent.sacrificed_souls.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["var_name"] = "impl",
["value"] = "buff.tyrant.remains < 8",
["description"] = "Defines the Viability of Implosion while Tyrant is Up",
["criteria"] = "active_enemies > 4 + ( talent.sacrificed_souls.enabled )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.summon_demonic_tyrant.remains < 20 & variable.next_tyrant_cd < 20 & ( buff.demonic_core.stack <= 2 || ! buff.demonic_core.up ) & cooldown.summon_vilefiend.remains < gcd.max * 8 & cooldown.call_dreadstalkers.remains < gcd.max * 8",
["var_name"] = "pool_cores_for_tyrant",
["description"] = "Restricts Demonic Core usage for the sake of having 2 or more Demonic Cores on Tyrant Setup",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.diabolic_ritual_mother_of_chaos.remains",
["var_name"] = "diabolic_ritual_remains",
["criteria"] = "buff.diabolic_ritual_mother_of_chaos.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.diabolic_ritual_overlord.remains",
["var_name"] = "diabolic_ritual_remains",
["criteria"] = "buff.diabolic_ritual_overlord.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.diabolic_ritual_pit_lord.remains",
["var_name"] = "diabolic_ritual_remains",
["criteria"] = "buff.diabolic_ritual_pit_lord.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "2 * spell_haste * 6 + 0.58 + time",
["var_name"] = "imp_despawn",
["criteria"] = "prev_gcd.1.hand_of_guldan & buff.dreadstalkers.up & cooldown.summon_demonic_tyrant.remains < 13 & variable.imp_despawn = 0",
},
{
["enabled"] = true,
["criteria"] = "active_enemies > 1 & ( cooldown.demonic_strength.remains || ! talent.demonic_strength.enabled ) & talent.fel_sunder.enabled",
["action"] = "felstorm",
},
},
},
["version"] = 20250302,
["warnings"] = "The import for 'items' required some automated changes.\nLine 1: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 1: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 1: Converted 'talent.summon_demonic_tyrant' to 'talent.summon_demonic_tyrant.enabled' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 1: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 1: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 2: Converted 'talent.summon_demonic_tyrant' to 'talent.summon_demonic_tyrant.enabled' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 2: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 2: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 3: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 3: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 4: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 4: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 5: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 5: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 7: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 7: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 8: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 9: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 12: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 13: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\n\nThe import for 'default' required some automated changes.\nLine 12: Converted 'talent.doom' to 'talent.doom.enabled' (1x).\nLine 12: Converted 'talent.fel_invocation' to 'talent.fel_invocation.enabled' (1x).\nLine 12: Converted 'pet.felguard.cooldown.soul_strike.remains' to 'cooldown.soul_strike.remains' (1x).\nLine 13: Converted 'talent.doom' to 'talent.doom.enabled' (1x).\nLine 17: Converted 'talent.demonic_strength' to 'talent.demonic_strength.enabled' (1x).\nLine 23: Converted 'talent.fel_invocation' to 'talent.fel_invocation.enabled' (1x).\nLine 25: Converted 'talent.soul_strike' to 'talent.soul_strike.enabled' (1x).\nLine 25: Converted 'pet.felguard.cooldown.soul_strike.remains' to 'cooldown.soul_strike.remains' (1x).\nLine 25: Converted 'talent.fel_invocation' to 'talent.fel_invocation.enabled' (1x).\nLine 31: Converted 'talent.demonic_strength' to 'talent.demonic_strength.enabled' (1x).\nLine 31: Converted 'talent.fel_sunder' to 'talent.fel_sunder.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 10: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 11: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 12: Converted 'trinket.1.is.ruby_whelp_shell' to 'trinket.t1.is.ruby_whelp_shell' (1x).\nLine 13: Converted 'trinket.2.is.ruby_whelp_shell' to 'trinket.t2.is.ruby_whelp_shell' (1x).\nLine 14: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 14: Converted 'trinket.1.is.imperfect_ascendancy_serum' to 'trinket.t1.is.imperfect_ascendancy_serum' (1x).\nLine 15: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 15: Converted 'trinket.2.is.imperfect_ascendancy_serum' to 'trinket.t2.is.imperfect_ascendancy_serum' (1x).\nLine 16: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 16: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 16: Converted 'trinket.1.is.mirror_of_fractured_tomorrows' to 'trinket.t1.is.mirror_of_fractured_tomorrows' (1x).\nLine 17: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 17: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 17: Converted 'trinket.2.is.mirror_of_fractured_tomorrows' to 'trinket.t2.is.mirror_of_fractured_tomorrows' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 18: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 18: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%trinket.t1.cooldown.duration=0)'.\nLine 19: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 19: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 19: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 19: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 19: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%trinket.t2.cooldown.duration=0)'.\nLine 20: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 20: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 21: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 21: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 21: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 21: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 21: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 21: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 21: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 21: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 21: Converted 'trinket.1.ilvl' to 'trinket.t1.ilvl' (1x).\nLine 21: Converted 'trinket.2.ilvl' to 'trinket.t2.ilvl' (1x).\nLine 21: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>(((trinket.t1.cooldown.duration%variable.trinket_1_buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))*(1+((trinket.t1.ilvl-trinket.t2.ilvl)%100)))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>(((trinket.t1.cooldown.duration/variable.trinket_1_buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))*(1+((trinket.t1.ilvl-trinket.t2.ilvl)/100)))'.\n\nThe import for 'variables' required some automated changes.\nLine 11: Converted 'talent.demonic_strength' to 'talent.demonic_strength.enabled' (1x).\nLine 11: Converted 'talent.fel_sunder' to 'talent.fel_sunder.enabled' (1x).\n\nThe import for 'tyrant' required some automated changes.\nLine 14: Converted 'talent.grimoire_felguard' to 'talent.grimoire_felguard.enabled' (1x).\nLine 14: Converted 'talent.call_dreadstalkers' to 'talent.call_dreadstalkers.enabled' (1x).\nLine 15: Converted 'talent.summon_vilefiend' to 'talent.summon_vilefiend.enabled' (1x).\n\nThe import for 'opener' required some automated changes.\nLine 1: Converted 'talent.fel_invocation' to 'talent.fel_invocation.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "SimC",
["profile"] = "actions.precombat+=/fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet,if=!pet.alive&!buff.grimoire_of_sacrifice.up\n# Sets the expected Tyrant Setup on pull to take a total 12 seconds long\nactions.precombat+=/variable,name=first_tyrant_time,op=set,value=12\n# Accounts for the execution time of Grimoire Felguard in the setup of Tyrant on Pull\nactions.precombat+=/variable,name=first_tyrant_time,op=add,value=action.grimoire_felguard.execute_time,if=talent.grimoire_felguard.enabled\n# Accounts for the execution time of Vilefiend in the the setup of Tyrant on Pull\nactions.precombat+=/variable,name=first_tyrant_time,op=add,value=action.summon_vilefiend.execute_time,if=talent.summon_vilefiend.enabled\n# Accounts for the execution time of both Grimoire Felguard and Vilefiend in the tyrant Setup on Pull\nactions.precombat+=/variable,name=first_tyrant_time,op=add,value=gcd.max,if=talent.grimoire_felguard.enabled||talent.summon_vilefiend.enabled\n# Accounts for Tyrant own Cast Time and an additional Shadowbolt cast time\nactions.precombat+=/variable,name=first_tyrant_time,op=sub,value=action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time\n# Sets an absolute minimun of 10s for the First Tyrant Setup\nactions.precombat+=/variable,name=first_tyrant_time,op=min,value=10\nactions.precombat+=/variable,name=in_opener,op=set,value=1\n# Defines if the the Trinket 1 is a buff Trinket in the trinket logic\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\n# Defines if the the Trinket 2 is a buff Trinket in the trinket logic\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\n# For On Use Trinkets on slot 1 with on use effects you dont want to use in combat\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.ruby_whelp_shell\n# For On Use Trinkets on slot 2 with on use effects you dont want to use in combat\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.ruby_whelp_shell\n# Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.spymasters_web||trinket.1.is.imperfect_ascendancy_serum\n# Sets a specific Trinkets in Slot 2 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.spymasters_web||trinket.2.is.imperfect_ascendancy_serum\n# Defines the Duration of the buff or an expected time for value of the trinket\nactions.precombat+=/variable,name=trinket_1_buff_duration,value=trinket.1.proc.any_dps.duration+(trinket.1.is.mirror_of_fractured_tomorrows*20)\n# Defines the Duration of the buff or an expected time for value of the trinket\nactions.precombat+=/variable,name=trinket_2_buff_duration,value=trinket.2.proc.any_dps.duration+(trinket.2.is.mirror_of_fractured_tomorrows*20)\n# Trinket Automatic Logic for Trinket 1\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.1.cooldown.duration=0)\n# Trinket Automatic Logic for Trinket 2\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.summon_demonic_tyrant.duration=0||cooldown.summon_demonic_tyrant.duration%%trinket.2.cooldown.duration=0)\n# Automatic Logic in case of 2 Buff Trinkets\nactions.precombat+=/variable,name=damage_trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&!variable.trinket_2_buffs&trinket.2.ilvl>trinket.1.ilvl\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_buff_duration)*(1.5+trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>(((trinket.1.cooldown.duration%variable.trinket_1_buff_duration)*(1.5+trinket.1.has_buff.intellect)*(variable.trinket_1_sync))*(1+((trinket.1.ilvl-trinket.2.ilvl)%100)))\nactions.precombat+=/power_siphon\nactions.precombat+=/lights_judgment\nactions.precombat+=/demonbolt,if=!buff.power_siphon.up||soul_shards.deficit>1\nactions.precombat+=/shadow_bolt\n\nactions+=/axe_toss\nactions+=/call_action_list,name=variables\nactions+=/potion,if=buff.tyrant.remains>10\nactions+=/variable,name=check_racials,op=set,value=pet.demonic_tyrant.active||boss&fight_remains<22\nactions+=/call_action_list,name=racials,if=variable.check_racials,use_off_gcd=1\nactions+=/call_action_list,name=items,use_off_gcd=1\n## actions+=/invoke_external_buff,name=power_infusion,if=fight_remains<15||pet.demonic_tyrant.active&fight_remains<100||fight_remains<25||(pet.demonic_tyrant.active||!talent.summon_demonic_tyrant&buff.dreadstalkers.up)\nactions+=/call_action_list,name=fight_end,if=boss&fight_remains<30\nactions+=/call_action_list,name=opener,strict=1,if=time<variable.first_tyrant_time\nactions+=/call_action_list,name=tyrant,if=cooldown.summon_demonic_tyrant.remains<gcd.max*14\nactions+=/call_dreadstalkers,if=cooldown.summon_demonic_tyrant.remains>25||variable.next_tyrant_cd>25\nactions+=/summon_vilefiend,if=cooldown.summon_demonic_tyrant.remains>30\nactions+=/demonbolt,cycle_targets=1,if=buff.demonic_core.up&(!talent.doom||buff.demonic_core.stack>1||debuff.doom.remains>10||debuff.doom.down)&(((!talent.fel_invocation||pet.felguard.cooldown.soul_strike.remains>gcd.max*2)&soul_shard<4))&!prev_gcd.1.demonbolt&!variable.pool_cores_for_tyrant\nactions+=/demonbolt,cycle_targets=1,if=buff.demonic_core.stack>=3-(talent.doom&debuff.doom.down)*2&soul_shard<=3&!variable.pool_cores_for_tyrant\nactions+=/power_siphon,if=buff.demonic_core.stack<3&cooldown.summon_demonic_tyrant.remains>25&!buff.demonic_power.up\nactions+=/demonic_strength,if=active_enemies>1\nactions+=/bilescourge_bombers,if=active_enemies>1\nactions+=/guillotine,if=active_enemies>1&(cooldown.demonic_strength.remains||!talent.demonic_strength)\nactions+=/ruination\nactions+=/infernal_bolt,if=buff.infernal_bolt.remains>cast_time&buff.infernal_bolt.remains<2*gcd.max||soul_shard<3&cooldown.summon_demonic_tyrant.remains>20\nactions+=/implosion,if=two_cast_imps>0&variable.impl&!prev_gcd.1.implosion&(active_enemies>3||active_enemies<=3&last_cast_imps>0)\nactions+=/demonbolt,if=variable.diabolic_ritual_remains>gcd.max&variable.diabolic_ritual_remains<gcd.max+gcd.max&buff.demonic_core.up&soul_shard<=3\nactions+=/shadow_bolt,if=variable.diabolic_ritual_remains>gcd.max&variable.diabolic_ritual_remains<soul_shard.deficit*cast_time+gcd.max&soul_shard<5\nactions+=/hand_of_guldan,if=((soul_shard>2&(cooldown.call_dreadstalkers.remains>gcd.max*4||buff.demonic_calling.remains-gcd.max>cooldown.call_dreadstalkers.remains)&cooldown.summon_demonic_tyrant.remains>17)||soul_shard=5||soul_shard=4&talent.fel_invocation)&(active_enemies=1)\nactions+=/hand_of_guldan,if=soul_shard>2&!(active_enemies=1)\nactions+=/demonbolt,cycle_targets=1,if=active_enemies<4&buff.demonic_core.stack>1&((soul_shard<4&!talent.soul_strike||pet.felguard.cooldown.soul_strike.remains>gcd.max*2&talent.fel_invocation)||soul_shard<3)&!variable.pool_cores_for_tyrant\nactions+=/demonbolt,if=buff.demonic_core.up&buff.tyrant.up&soul_shard<3\nactions+=/demonbolt,if=buff.demonic_core.stack>1&soul_shard<4\nactions+=/infernal_bolt\nactions+=/lights_judgment,if=!pet.tyrant.active&cooldown.tyrant_remains>15&active_enemies>1\nactions+=/shadow_bolt\nactions+=/felstorm,if=active_enemies>1&(cooldown.demonic_strength.remains||!talent.demonic_strength)&talent.fel_sunder\n\nactions.fight_end+=/grimoire_felguard,if=fight_remains<20\nactions.fight_end+=/ruination\nactions.fight_end+=/implosion,if=fight_remains<2*gcd.max&!prev_gcd.1.implosion\nactions.fight_end+=/demonbolt,if=fight_remains<gcd.max*2*buff.demonic_core.stack+9&buff.demonic_core.up&(soul_shard<4||fight_remains<buff.demonic_core.stack*gcd.max)\nactions.fight_end+=/call_dreadstalkers,if=fight_remains<20\nactions.fight_end+=/summon_vilefiend,if=fight_remains<20\nactions.fight_end+=/summon_demonic_tyrant,if=fight_remains<20\nactions.fight_end+=/demonic_strength,if=fight_remains<10\nactions.fight_end+=/power_siphon,if=buff.demonic_core.stack<3&fight_remains<20\nactions.fight_end+=/demonbolt,if=fight_remains<gcd.max*2*buff.demonic_core.stack+9&buff.demonic_core.up&(soul_shard<4||fight_remains<buff.demonic_core.stack*gcd.max)\nactions.fight_end+=/hand_of_guldan,if=soul_shard>2&fight_remains<gcd.max*2*buff.demonic_core.stack+9\nactions.fight_end+=/infernal_bolt\n\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!pet.demonic_tyrant.active&trinket.1.cast_time>0||!trinket.1.cast_time>0)&(pet.demonic_tyrant.active||!talent.summon_demonic_tyrant||variable.trinket_priority=2&cooldown.summon_demonic_tyrant.remains>20&!pet.demonic_tyrant.active&trinket.2.cooldown.remains<cooldown.summon_demonic_tyrant.remains+5)&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1&!variable.trinket_2_manual)||variable.trinket_1_buff_duration>=fight_remains\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!pet.demonic_tyrant.active&trinket.2.cast_time>0||!trinket.2.cast_time>0)&(pet.demonic_tyrant.active||!talent.summon_demonic_tyrant||variable.trinket_priority=1&cooldown.summon_demonic_tyrant.remains>20&!pet.demonic_tyrant.active&trinket.1.cooldown.remains<cooldown.summon_demonic_tyrant.remains+5)&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2&!variable.trinket_1_manual)||variable.trinket_2_buff_duration>=fight_remains\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&((variable.damage_trinket_priority=1||trinket.2.cooldown.remains)&(trinket.1.cast_time>0&!pet.demonic_tyrant.active||!trinket.1.cast_time>0)||(time<20&variable.trinket_2_buffs)||cooldown.summon_demonic_tyrant.remains_expected>20)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&((variable.damage_trinket_priority=2||trinket.1.cooldown.remains)&(trinket.2.cast_time>0&!pet.demonic_tyrant.active||!trinket.2.cast_time>0)||(time<20&variable.trinket_1_buffs)||cooldown.summon_demonic_tyrant.remains_expected>20)\nactions.items+=/use_item,use_off_gcd=1,name=spymasters_web,if=pet.demonic_tyrant.active&fight_remains<=80&buff.spymasters_report.stack>=30&(!variable.trinket_1_buffs&trinket.2.is.spymasters_web||!variable.trinket_2_buffs&trinket.1.is.spymasters_web)||fight_remains<=20&(trinket.1.cooldown.remains&trinket.2.is.spymasters_web||trinket.2.cooldown.remains&trinket.1.is.spymasters_web||!variable.trinket_1_buffs||!variable.trinket_2_buffs)\nactions.items+=/use_item,use_off_gcd=1,name=imperfect_ascendancy_serum,if=pet.demonic_tyrant.active&gcd.remains>0||fight_remains<=30\nactions.items+=/use_item,name=mirror_of_fractured_tomorrows,if=trinket.1.is.mirror_of_fractured_tomorrows&variable.trinket_priority=2||trinket.2.is.mirror_of_fractured_tomorrows&variable.trinket_priority=1\nactions.items+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(variable.damage_trinket_priority=1||trinket.2.cooldown.remains)\nactions.items+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(variable.damage_trinket_priority=2||trinket.1.cooldown.remains)\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,if=!equipped.neural_synapse_enhancer\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,name=neural_synapse_enhancer,if=(pet.demonic_tyrant.active||fight_remains<=15)&!variable.trinket_1_buffs&!variable.trinket_2_buffs\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,name=neural_synapse_enhancer,if=(pet.demonic_tyrant.active||fight_remains<=15||trinket.2.cooldown.remains>cooldown.summon_demonic_tyrant.remains)&variable.trinket_2_buffs\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand,name=neural_synapse_enhancer,if=(pet.demonic_tyrant.active||fight_remains<=15||trinket.1.cooldown.remains>cooldown.summon_demonic_tyrant.remains)&variable.trinket_1_buffs\n\nactions.opener+=/grimoire_felguard,if=soul_shard>=5-talent.fel_invocation\nactions.opener+=/summon_vilefiend,if=soul_shard=5\nactions.opener+=/shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up\nactions.opener+=/call_dreadstalkers,if=soul_shard=5\nactions.opener+=/ruination\n\nactions.racials+=/berserking,use_off_gcd=1\nactions.racials+=/blood_fury\nactions.racials+=/fireblood\nactions.racials+=/ancestral_call\n\nactions.tyrant+=/call_action_list,name=racials,if=!variable.check_racials&(variable.imp_despawn&variable.imp_despawn<time+gcd.max*2+action.summon_demonic_tyrant.cast_time&(prev_gcd.1.hand_of_guldan||prev_gcd.1.ruination)&(variable.imp_despawn&variable.imp_despawn<time+gcd.max+action.summon_demonic_tyrant.cast_time||soul_shard<2))\nactions.tyrant+=/potion,if=variable.imp_despawn&variable.imp_despawn<time+gcd.max*2+action.summon_demonic_tyrant.cast_time&(prev_gcd.1.hand_of_guldan||prev_gcd.1.ruination)&(variable.imp_despawn&variable.imp_despawn<time+gcd.max+action.summon_demonic_tyrant.cast_time||soul_shard<2)\nactions.tyrant+=/power_siphon,if=cooldown.summon_demonic_tyrant.remains<15&(time<variable.first_tyrant_time||cooldown.summon_demonic_tyrant.remains>(action.summon_demonic_tyrant.cast_time+2*gcd.max))\nactions.tyrant+=/ruination,if=buff.dreadstalkers.remains>gcd.max+action.summon_demonic_tyrant.cast_time&(soul_shard=5||variable.imp_despawn)\nactions.tyrant+=/infernal_bolt,if=(buff.infernal_bolt.remains>cast_time&buff.infernal_bolt.remains<2*gcd.max||!buff.demonic_core.up)&variable.imp_despawn>time+gcd.max*2+action.summon_demonic_tyrant.cast_time&soul_shard<3\nactions.tyrant+=/shadow_bolt,if=prev_gcd.1.call_dreadstalkers&soul_shard<4&buff.demonic_core.stack<4\nactions.tyrant+=/shadow_bolt,if=prev_gcd.2.call_dreadstalkers&prev_gcd.1.shadow_bolt&buff.bloodlust.up&soul_shard<5\nactions.tyrant+=/shadow_bolt,if=prev_gcd.1.summon_vilefiend&(buff.demonic_calling.down||prev_gcd.2.grimoire_felguard)\nactions.tyrant+=/shadow_bolt,if=prev_gcd.1.grimoire_felguard&buff.demonic_core.stack<3&buff.demonic_calling.remains>gcd.max*3\nactions.tyrant+=/hand_of_guldan,if=variable.imp_despawn>time+gcd.max*2+action.summon_demonic_tyrant.cast_time&!buff.demonic_core.up&buff.demonic_art_pit_lord.up&variable.imp_despawn<time+gcd.max*5+action.summon_demonic_tyrant.cast_time\nactions.tyrant+=/hand_of_guldan,if=variable.imp_despawn>time+gcd.max+action.summon_demonic_tyrant.cast_time&variable.imp_despawn<time+gcd.max*2+action.summon_demonic_tyrant.cast_time&buff.dreadstalkers.remains>gcd.max+action.summon_demonic_tyrant.cast_time&soul_shard>1\nactions.tyrant+=/shadow_bolt,if=!buff.demonic_core.up&variable.imp_despawn>time+gcd.max*2+action.summon_demonic_tyrant.cast_time&variable.imp_despawn<time+gcd.max*4+action.summon_demonic_tyrant.cast_time&soul_shard<3&buff.dreadstalkers.remains>gcd.max*2+action.summon_demonic_tyrant.cast_time\nactions.tyrant+=/grimoire_felguard,if=cooldown.summon_demonic_tyrant.remains<17-2*gcd.max&cooldown.summon_vilefiend.remains<15-2*gcd.max&cooldown.call_dreadstalkers.remains<12-2*gcd.max\nactions.tyrant+=/summon_vilefiend,if=cooldown.summon_demonic_tyrant.remains<15-2*gcd.max&(buff.grimoire_felguard.up||cooldown.grimoire_felguard.remains>15||!talent.grimoire_felguard)&(buff.dreadstalkers.up||cooldown.call_dreadstalkers.remains<15-2*gcd.max||!talent.call_dreadstalkers)\nactions.tyrant+=/call_dreadstalkers,if=cooldown.summon_demonic_tyrant.remains<12-2*gcd.max&(buff.vilefiend.up||cooldown.summon_vilefiend.remains<12-2*gcd.max||!talent.summon_vilefiend)\nactions.tyrant+=/summon_demonic_tyrant,if=(((variable.imp_despawn&variable.imp_despawn<time+gcd.max*2.5+cast_time)||(buff.wild_imps.stack>9&soul_shards<2))&buff.dreadstalkers.up&(buff.vilefiend.up||!talent.summon_vilefiend.enabled))||(buff.dreadstalkers.up&buff.dreadstalkers.remains<gcd.max*2+cast_time&((buff.vilefiend.up&buff.vilefiend.remains>2*gcd.max)||!talent.summon_vilefiend.enabled)&((buff.grimoire_felguard.up&buff.grimoire_felguard.remains>2*gcd.max)||!talent.grimoire_felguard.enabled||cooldown.grimoire_felguard.remains>20))\nactions.tyrant+=/hand_of_guldan,if=(variable.imp_despawn||buff.dreadstalkers.remains)&soul_shard>=3||soul_shard=5\nactions.tyrant+=/infernal_bolt,if=variable.imp_despawn&soul_shard<3\nactions.tyrant+=/demonbolt,cycle_targets=1,if=variable.imp_despawn&buff.demonic_core.up&soul_shard<4||prev_gcd.1.call_dreadstalkers&soul_shard<4&buff.demonic_core.stack=4||buff.demonic_core.stack=4&soul_shard<4||buff.demonic_core.stack>=2&cooldown.power_siphon.remains<5\nactions.tyrant+=/ruination,if=variable.imp_despawn||soul_shard=5&cooldown.summon_vilefiend.remains>gcd.max*3\nactions.tyrant+=/shadow_bolt\nactions.tyrant+=/infernal_bolt\n\nactions.variables+=/variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected\nactions.variables+=/variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\n## Handled internally [Hekili]\n## Sets an expected duration of valid Wild Imps on a tyrant Setup for the sake of casting Tyrant before expiration of Imps\n## actions.variables+=/variable,name=imp_despawn,op=set,value=2*spell_haste*6+0.58+time,if=prev_gcd.1.hand_of_guldan&buff.dreadstalkers.up&cooldown.summon_demonic_tyrant.remains<13&variable.imp_despawn=0\n## Checks the Wild Imps in a Tyrant Setup alongside Dreadstalkers for the sake of casting Tyrant before Expiration Dreadstalkers or Imps\n## actions.variables+=/variable,name=imp_despawn,op=max,value=buff.dreadstalkers.remains+time,if=variable.imp_despawn\n## Checks The Wild Imps in a Tyrant Setup alongside Grimoire Felguard for the sake of casting Tyrant before Expiration of Grimoire Felguard or Imps\n## actions.variables+=/variable,name=imp_despawn,op=max,value=buff.grimoire_felguard.remains+time,if=variable.imp_despawn&buff.grimoire_felguard.up\n## actions.variables+=/variable,name=imp_despawn,op=set,value=0,if=buff.tyrant.up\n# Defines the viability of Implosion when Tyrant is down\nactions.variables+=/variable,name=impl,op=set,value=buff.tyrant.down,if=active_enemies>1+(talent.sacrificed_souls.enabled)\n# Defines the Viability of Implosion while Tyrant is Up\nactions.variables+=/variable,name=impl,op=set,value=buff.tyrant.remains<6,if=active_enemies>2+(talent.sacrificed_souls.enabled)&active_enemies<5+(talent.sacrificed_souls.enabled)\n# Defines the Viability of Implosion while Tyrant is Up\nactions.variables+=/variable,name=impl,op=set,value=buff.tyrant.remains<8,if=active_enemies>4+(talent.sacrificed_souls.enabled)\n# Restricts Demonic Core usage for the sake of having 2 or more Demonic Cores on Tyrant Setup\nactions.variables+=/variable,name=pool_cores_for_tyrant,op=set,value=cooldown.summon_demonic_tyrant.remains<20&variable.next_tyrant_cd<20&(buff.demonic_core.stack<=2||!buff.demonic_core.up)&cooldown.summon_vilefiend.remains<gcd.max*8&cooldown.call_dreadstalkers.remains<gcd.max*8\nactions.variables+=/variable,name=diabolic_ritual_remains,value=buff.diabolic_ritual_mother_of_chaos.remains,if=buff.diabolic_ritual_mother_of_chaos.up\nactions.variables+=/variable,name=diabolic_ritual_remains,value=buff.diabolic_ritual_overlord.remains,if=buff.diabolic_ritual_overlord.up\nactions.variables+=/variable,name=diabolic_ritual_remains,value=buff.diabolic_ritual_pit_lord.remains,if=buff.diabolic_ritual_pit_lord.up\nactions.variables+=/variable,name=imp_despawn,op=set,value=2*spell_haste*6+0.58+time,if=prev_gcd.1.hand_of_guldan&buff.dreadstalkers.up&cooldown.summon_demonic_tyrant.remains<13&variable.imp_despawn=0\nactions.variables+=/felstorm,if=active_enemies>1&(cooldown.demonic_strength.remains||!talent.demonic_strength)&talent.fel_sunder",
},
["Destruction"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250303,
["author"] = "SimC",
["desc"] = "2025-03-03: Sync with SimC",
["lists"] = {
["items"] = {
{
["enabled"] = true,
["name"] = "spymasters_web",
["action"] = "spymasters_web",
["criteria"] = "pet.infernal.remains >= 10 & pet.infernal.remains <= 20 & buff.spymasters_report.stack >= 38 & ( fight_remains > 240 || fight_remains <= 140 ) || boss & fight_remains <= 30",
},
{
["enabled"] = true,
["criteria"] = "( variable.infernal_active || ! talent.summon_infernal.enabled || variable.trinket_1_will_lose_cast ) & ( variable.trinket_priority = 1 || variable.trinket_2_exclude || ! trinket.t2.has_cooldown || ( trinket.t2.cooldown.remains || variable.trinket_priority = 2 & cooldown.summon_infernal.remains > 20 & ! variable.infernal_active & trinket.t2.cooldown.remains < cooldown.summon_infernal.remains ) ) & variable.trinket_1_buffs & ! variable.trinket_1_manual || ( variable.trinket_1_buff_duration + 1 >= fight_remains )",
["action"] = "trinket1",
["slot"] = "trinket1",
},
{
["enabled"] = true,
["criteria"] = "( variable.infernal_active || ! talent.summon_infernal.enabled || variable.trinket_2_will_lose_cast ) & ( variable.trinket_priority = 2 || variable.trinket_1_exclude || ! trinket.t1.has_cooldown || ( trinket.t1.cooldown.remains || variable.trinket_priority = 1 & cooldown.summon_infernal.remains > 20 & ! variable.infernal_active & trinket.t1.cooldown.remains < cooldown.summon_infernal.remains ) ) & variable.trinket_2_buffs & ! variable.trinket_2_manual || ( variable.trinket_2_buff_duration + 1 >= fight_remains )",
["action"] = "trinket2",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || talent.summon_infernal.enabled & cooldown.summon_infernal.remains_expected > 20 & ! prev_gcd.1.summon_infernal || ! talent.summon_infernal.enabled )",
},
{
["enabled"] = true,
["action"] = "trinket2",
["slot"] = "trinket2",
["use_off_gcd"] = 1,
["criteria"] = "! variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || talent.summon_infernal.enabled & cooldown.summon_infernal.remains_expected > 20 & ! prev_gcd.1.summon_infernal || ! talent.summon_infernal.enabled )",
},
{
["use_off_gcd"] = 1,
["enabled"] = true,
["action"] = "main_hand",
["slot"] = "main_hand",
},
},
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.summon_infernal.remains >= 55 & soul_shard < 4.7 & ( active_enemies <= 3 + active_dot.wither || time > 30 )",
["action"] = "malevolence",
},
{
["enabled"] = true,
["criteria"] = "demonic_art",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["sec"] = "( ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) )",
["action"] = "wait",
["criteria"] = "( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) < gcd.max * 0.25 ) & soul_shard > 2",
},
{
["enabled"] = true,
["criteria"] = "( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) <= action.incinerate.cast_time & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) > gcd.max * 0.25 )",
["action"] = "incinerate",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "havoc_active & havoc_remains > gcd.max & active_enemies < ( 5 + ! talent.wither.enabled ) & ( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled )",
["list_name"] = "havoc",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.7 & ( charges > 2 || boss & fight_remains < cooldown.dimensional_rift.duration )",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "! talent.inferno.enabled & soul_shard >= ( 4.5 - 0.1 * ( active_dot.immolate + active_dot.wither ) ) || soul_shard >= ( 3.5 - 0.1 * ( active_dot.immolate + active_dot.wither ) ) || buff.ritual_of_ruin.up",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "dot.wither.refreshable & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.wither.remains ) & ( ! talent.raging_demonfire.enabled || cooldown.channel_demonfire.remains > remains || time < 5 ) & ( active_dot.wither <= 4 || time > 15 ) & target.time_to_die > 18",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains + dot.wither.remains > cast_time & talent.raging_demonfire.enabled",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.malevolence.up & ( ( talent.cataclysm.enabled & active_enemies <= 10 ) || ( talent.inferno.enabled & active_enemies <= 6 ) ) ) || ( talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 6 ) || ( ! talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 4 ) || active_enemies <= 3 ) & ( ( cooldown.shadowburn.full_recharge_time <= gcd.max * 3 || debuff.eradication.remains <= gcd.max & talent.eradication.enabled & ! action.chaos_bolt.in_flight & ! talent.diabolic_ritual.enabled ) & ( talent.conflagration_of_chaos.enabled || talent.blistering_atrophy.enabled ) || fight_remains <= 8 )",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "( ( buff.malevolence.up & ( ( talent.cataclysm.enabled & active_enemies <= 10 ) || ( talent.inferno.enabled & active_enemies <= 6 ) ) ) || ( talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 6 ) || ( ! talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 4 ) || active_enemies <= 3 ) & ( ( cooldown.shadowburn.full_recharge_time <= gcd.max * 3 || debuff.eradication.remains <= gcd.max & talent.eradication.enabled & ! action.chaos_bolt.in_flight & ! talent.diabolic_ritual.enabled ) & ( talent.conflagration_of_chaos.enabled || talent.blistering_atrophy.enabled ) & time_to_die < 5 || boss & fight_remains <= 8 )",
["action"] = "shadowburn",
["cycle_targets"] = 1,
},
{
["action"] = "ruination",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "pet.infernal.active & talent.rain_of_chaos.enabled",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "( buff.decimation.up ) & ! talent.raging_demonfire.enabled & havoc_active",
["action"] = "soul_fire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "buff.decimation.up & active_dot.immolate <= 4",
["action"] = "soul_fire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 2.5",
["action"] = "infernal_bolt",
},
{
["enabled"] = true,
["criteria"] = "( soul_shard > 3.5 - ( 0.1 * active_enemies ) & ! talent.rain_of_fire.enabled ) || ( ! talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 3 )",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15 || talent.wither.enabled",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled || ( talent.inferno.enabled & active_enemies > 4 ) ) & target.time_to_die > 8 & ( cooldown.malevolence.remains > 15 || ! talent.malevolence.enabled ) || time < 5",
["action"] = "havoc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.wither.refreshable & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.wither.remains ) & ( ! talent.raging_demonfire.enabled || cooldown.channel_demonfire.remains > remains || time < 5 ) & active_dot.wither <= cycle_enemies & target.time_to_die > 18",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.refreshable & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & ( ! talent.raging_demonfire.enabled || cooldown.channel_demonfire.remains > remains || time < 5 ) & ( active_dot.immolate <= 6 & ! ( talent.diabolic_ritual.enabled & talent.inferno.enabled ) || active_dot.immolate <= 4 ) & target.time_to_die > 18",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["action"] = "summon_infernal",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.pyrogenics.down & active_enemies <= 4 & ! talent.diabolic_ritual.enabled",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains + dot.wither.remains > cast_time",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.refreshable & ( ( ( ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) ) || cycle_enemies > active_dot.immolate ) & target.time_to_die > 10 & ! havoc_active & ! ( talent.diabolic_ritual.enabled & talent.inferno.enabled ) )",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.refreshable & ( ( variable.havoc_immo_time < 5.4 || ( dot.immolate.remains < 2 & dot.immolate.remains < havoc_remains ) || ! dot.immolate.ticking || ( variable.havoc_immo_time < 2 ) * havoc_active ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & target.time_to_die > 11 & ! ( talent.diabolic_ritual.enabled & talent.inferno.enabled ) )",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["action"] = "dimensional_rift",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.decimation.up",
["action"] = "soul_fire",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up",
["action"] = "incinerate",
},
{
["enabled"] = true,
["criteria"] = "buff.backdraft.stack < 2 || ! talent.backdraft.enabled",
["action"] = "conflagrate",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["havoc"] = {
{
["enabled"] = true,
["criteria"] = "talent.backdraft.enabled & buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "cast_time < havoc_remains & soul_shard < 2.5",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15 || ( talent.wither.enabled & dot.wither.remains < action.wither.cast_time * 0.3 )",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "( ( ( dot.immolate.refreshable & variable.havoc_immo_time < 5.4 ) & target.time_to_die > 5 ) || ( ( dot.immolate.remains < 2 & dot.immolate.remains < havoc_remains ) || ! dot.immolate.ticking || variable.havoc_immo_time < 2 ) & target.time_to_die > 11 ) & soul_shard < 4.5",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( ( ( dot.wither.refreshable & variable.havoc_immo_time < 5.4 ) & target.time_to_die > 5 ) || ( ( dot.wither.remains < 2 & dot.wither.remains < havoc_remains ) || ! dot.wither.ticking || variable.havoc_immo_time < 2 ) & target.time_to_die > 11 ) & soul_shard < 4.5",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 4 & ( cooldown.shadowburn.full_recharge_time <= gcd.max * 3 || debuff.eradication.remains <= gcd.max & talent.eradication.enabled & ! action.chaos_bolt.in_flight & ! talent.diabolic_ritual.enabled ) & ( talent.conflagration_of_chaos.enabled || talent.blistering_atrophy.enabled )",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "active_enemies <= 4 & havoc_remains <= gcd.max * 3",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "cast_time < havoc_remains & ( ( ! talent.improved_chaos_bolt.enabled & active_enemies <= 2 ) || ( talent.improved_chaos_bolt.enabled & ( ( talent.wither.enabled & talent.inferno.enabled & active_enemies <= 2 ) || ( talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 4 ) || ( ! talent.wither.enabled & talent.inferno.enabled & active_enemies <= 3 ) || ( ! talent.wither.enabled & talent.cataclysm.enabled & active_enemies <= 5 ) ) ) )",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 3",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains + dot.wither.remains > cast_time & soul_shard < 4.5",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "! talent.backdraft.enabled",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "soul_shard < 4.7 & ( charges > 2 || boss & fight_remains < cooldown.dimensional_rift.duration )",
["action"] = "dimensional_rift",
},
{
["enabled"] = true,
["criteria"] = "cast_time < havoc_remains",
["action"] = "incinerate",
},
},
["cleave"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "havoc_active & havoc_remains > gcd.max",
["list_name"] = "havoc",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.havoc.remains <= 5 || talent.mayhem.enabled",
["var_name"] = "pool_soul_shards",
},
{
["enabled"] = true,
["criteria"] = "( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled )",
["action"] = "malevolence",
},
{
["enabled"] = true,
["criteria"] = "( ! cooldown.summon_infernal.up || ! talent.summon_infernal.enabled ) & target.time_to_die > 8",
["action"] = "havoc",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "demonic_art",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.decimation.react & ( soul_shard <= 4 || buff.decimation.remains <= gcd.max * 2 ) & debuff.conflagrate.remains >= execute_time & cooldown.havoc.remains",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "talent.internal_combustion.enabled & ( ( ( dot.wither.remains - 5 * action.chaos_bolt.in_flight ) < dot.wither.duration * 0.4 ) || dot.wither.remains < 3 || ( dot.wither.remains - action.chaos_bolt.execute_time ) < 5 & action.chaos_bolt.usable ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + action.soul_fire.cast_time > ( dot.wither.remains - 5 ) ) & target.time_to_die > 8 & ! action.soul_fire.in_flight_to_target",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "! talent.internal_combustion.enabled & ( ( ( dot.wither.remains - 5 * ( action.chaos_bolt.in_flight ) ) < dot.wither.duration * 0.3 ) || dot.wither.remains < 3 ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + action.soul_fire.cast_time > ( dot.wither.remains ) ) & target.time_to_die > 8 & ! action.soul_fire.in_flight_to_target",
["action"] = "wither",
["cycle_targets"] = 1,
},
{
["enabled"] = true,
["criteria"] = "( talent.roaring_blaze.enabled & full_recharge_time <= gcd.max * 2 ) || recharge_time <= 8 & ( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) < gcd.max ) & ! variable.pool_soul_shards",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.shadowburn.full_recharge_time <= gcd.max * 3 || debuff.eradication.remains <= gcd.max & talent.eradication.enabled & ! action.chaos_bolt.in_flight & ! talent.diabolic_ritual.enabled ) & ( talent.conflagration_of_chaos.enabled || talent.blistering_atrophy.enabled ) || boss & fight_remains <= 8",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "buff.ritual_of_ruin.up",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_infernal.remains >= 90 & talent.rain_of_chaos.enabled",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_infernal.remains >= 90 & talent.rain_of_chaos.enabled",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_infernal.remains >= 90 & talent.rain_of_chaos.enabled",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "( debuff.eradication.remains >= execute_time || ! talent.eradication.enabled || ! talent.shadowburn.enabled )",
["action"] = "ruination",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "talent.raging_demonfire.enabled & ( dot.immolate.remains + dot.wither.remains - 5 * ( action.chaos_bolt.in_flight & talent.internal_combustion.enabled ) ) > cast_time",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard <= 3.5 & ( debuff.conflagrate.remains > cast_time + travel_time || ! talent.roaring_blaze.enabled & buff.backdraft.up ) & ! variable.pool_soul_shards",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "( dot.immolate.refreshable & ( dot.immolate.remains < cooldown.havoc.remains || ! dot.immolate.ticking ) ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + ( ! talent.mayhem.enabled * action.soul_fire.cast_time ) > dot.immolate.remains ) & target.time_to_die > 15",
["action"] = "immolate",
["cycle_targets"] = 1,
},
{
["action"] = "summon_infernal",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.diabolic_ritual.enabled & ( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains - 2 - ! variable.disable_cb_2t * action.chaos_bolt.cast_time - variable.disable_cb_2t * gcd.max ) <= 0 )",
["action"] = "incinerate",
},
{
["enabled"] = true,
["criteria"] = "variable.pooling_condition & ! talent.wither.enabled & buff.rain_of_chaos.up",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "variable.allow_rof_2t_spender >= 1 & ! talent.wither.enabled & talent.pyrogenics.enabled & debuff.pyrogenics.remains <= gcd.max & ( ! talent.rain_of_chaos.enabled || cooldown.summon_infernal.remains >= gcd.max * 3 ) & variable.pooling_condition",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "variable.do_rof_2t & variable.pooling_condition & ( cooldown.summon_infernal.remains >= gcd.max * 3 || ! talent.rain_of_chaos.enabled )",
["action"] = "rain_of_fire",
},
{
["enabled"] = true,
["criteria"] = "soul_shard <= 4 & talent.mayhem.enabled",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "! variable.disable_cb_2t & variable.pooling_condition_cb & ( cooldown.summon_infernal.remains >= gcd.max * 3 || soul_shard > 4 || ! talent.rain_of_chaos.enabled )",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains + dot.wither.remains > cast_time",
["action"] = "channel_demonfire",
},
{
["action"] = "dimensional_rift",
["enabled"] = true,
},
{
["action"] = "infernal_bolt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time_to_max_charges < 2 * gcd.max || boss & fight_remains < gcd.max * charges",
["action"] = "conflagrate",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["value"] = "dot.immolate.remains <? dot.wither.remains",
["var_name"] = "havoc_immo_time",
["criteria"] = "havoc_active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( soul_shard >= 3 || ( talent.secrets_of_the_coven.enabled & buff.infernal_bolt.up || buff.decimation.up ) & soul_shard >= 3 )",
["var_name"] = "pooling_condition",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.pooling_condition || pet.infernal.active & soul_shard >= 3",
["var_name"] = "pooling_condition_cb",
["default"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "pet.infernal.active || ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) < 20",
["var_name"] = "infernal_active",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( floor ( ( fight_remains / trinket.t1.cooldown.duration ) + 1 ) != floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( floor ( ( fight_remains / trinket.t1.cooldown.duration ) + 1 ) ) != ( floor ( ( ( fight_remains - cooldown.summon_infernal.remains ) / trinket.t1.cooldown.duration ) + 1 ) ) || ( ( floor ( ( fight_remains / trinket.t1.cooldown.duration ) + 1 ) = floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( ( ( fight_remains - cooldown.summon_infernal.remains % trinket.t1.cooldown.duration ) - cooldown.summon_infernal.remains - variable.trinket_1_buff_duration ) > 0 ) ) ) & cooldown.summon_infernal.remains > 20",
["var_name"] = "trinket_1_will_lose_cast",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( ( floor ( ( fight_remains / trinket.t2.cooldown.duration ) + 1 ) != floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( floor ( ( fight_remains / trinket.t2.cooldown.duration ) + 1 ) ) != ( floor ( ( ( fight_remains - cooldown.summon_infernal.remains ) / trinket.t2.cooldown.duration ) + 1 ) ) || ( ( floor ( ( fight_remains / trinket.t2.cooldown.duration ) + 1 ) = floor ( ( fight_remains + ( cooldown.summon_infernal.duration - cooldown.summon_infernal.remains ) ) / cooldown.summon_infernal.duration ) ) & ( ( ( fight_remains - cooldown.summon_infernal.remains % trinket.t2.cooldown.duration ) - cooldown.summon_infernal.remains - variable.trinket_2_buff_duration ) > 0 ) ) ) & cooldown.summon_infernal.remains > 20",
["var_name"] = "trinket_2_will_lose_cast",
},
},
["default"] = {
{
["action"] = "spell_lock",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "ogcd",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "items",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "( active_enemies >= 3 ) & ! variable.cleave_apl",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "This entry is manually translated and will differ from SIMC, but maintains the same functionality.",
["strict"] = 1,
["criteria"] = "active_enemies > 1",
["list_name"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "cooldown.summon_infernal.remains >= 55",
["action"] = "malevolence",
},
{
["enabled"] = true,
["sec"] = "( ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) )",
["action"] = "wait",
["criteria"] = "( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) < gcd.max * 0.25 ) & soul_shard > 2",
},
{
["enabled"] = true,
["criteria"] = "demonic_art",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "buff.decimation.react & ( soul_shard <= 4 || buff.decimation.remains <= gcd.max * 2 ) & debuff.conflagrate.remains >= execute_time",
["action"] = "soul_fire",
},
{
["enabled"] = true,
["criteria"] = "talent.internal_combustion.enabled & ( ( ( dot.wither.remains - 5 * action.chaos_bolt.in_flight ) < dot.wither.duration * 0.4 ) || dot.wither.remains < 3 || ( dot.wither.remains - action.chaos_bolt.execute_time ) < 5 & action.chaos_bolt.usable ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + action.soul_fire.cast_time > ( dot.wither.remains - 5 ) ) & target.time_to_die > 8 & ! action.soul_fire.in_flight_to_target",
["action"] = "wither",
},
{
["enabled"] = true,
["criteria"] = "talent.roaring_blaze.enabled & debuff.conflagrate.remains < 1.5 || full_recharge_time <= gcd.max * 2 || recharge_time <= 8 & ( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains ) < gcd.max ) & soul_shard >= 1.5",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "( full_recharge_time <= gcd.max * 3 || debuff.eradication.remains <= gcd.max & talent.eradication.enabled & ! action.chaos_bolt.in_flight & ! talent.diabolic_ritual.enabled ) & ( talent.conflagration_of_chaos.enabled || talent.blistering_atrophy.enabled ) & ! demonic_art || boss & fight_remains <= 8",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "buff.ritual_of_ruin.up",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.summon_infernal.remains >= 90 & talent.rain_of_chaos.enabled ) || buff.malevolence.up",
["action"] = "shadowburn",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.summon_infernal.remains >= 90 & talent.rain_of_chaos.enabled ) || buff.malevolence.up",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "( debuff.eradication.remains >= execute_time || ! talent.eradication.enabled || ! talent.shadowburn.enabled )",
["action"] = "ruination",
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15 & ( dot.immolate.refreshable & ! talent.wither.enabled || talent.wither.enabled & dot.wither.refreshable )",
["action"] = "cataclysm",
},
{
["enabled"] = true,
["criteria"] = "talent.raging_demonfire.enabled & ( dot.immolate.remains + dot.wither.remains - 5 * ( action.chaos_bolt.in_flight & talent.internal_combustion.enabled ) ) > cast_time",
["action"] = "channel_demonfire",
},
{
["enabled"] = true,
["criteria"] = "! talent.internal_combustion.enabled & ( ( ( dot.wither.remains - 5 * ( action.chaos_bolt.in_flight ) ) < dot.wither.duration * 0.3 ) || dot.wither.remains < 3 ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.wither.remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + action.soul_fire.cast_time > ( dot.wither.remains ) ) & target.time_to_die > 8 & ! action.soul_fire.in_flight_to_target",
["action"] = "wither",
},
{
["enabled"] = true,
["criteria"] = "( ( ( dot.immolate.remains - 5 * ( action.chaos_bolt.in_flight & talent.internal_combustion.enabled ) ) < dot.immolate.duration * 0.3 ) || dot.immolate.remains < 3 || ( dot.immolate.remains - action.chaos_bolt.execute_time ) < 5 & talent.internal_combustion.enabled & action.chaos_bolt.usable ) & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > dot.immolate.remains ) & ( ! talent.soul_fire.enabled || cooldown.soul_fire.remains + action.soul_fire.cast_time > ( dot.immolate.remains - 5 * talent.internal_combustion.enabled ) ) & target.time_to_die > 8 & ! action.soul_fire.in_flight_to_target",
["action"] = "immolate",
},
{
["action"] = "summon_infernal",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.diabolic_ritual.enabled & ( diabolic_ritual & ( buff.diabolic_ritual_mother_of_chaos.remains + buff.diabolic_ritual_overlord.remains + buff.diabolic_ritual_pit_lord.remains - 2 - ! variable.disable_cb_2t * action.chaos_bolt.cast_time - variable.disable_cb_2t * gcd.max ) <= 0 )",
["action"] = "incinerate",
},
{
["enabled"] = true,
["criteria"] = "variable.pooling_condition_cb & ( cooldown.summon_infernal.remains >= gcd.max * 3 || soul_shard > 4 || ! talent.rain_of_chaos.enabled )",
["action"] = "chaos_bolt",
},
{
["enabled"] = true,
["criteria"] = "dot.immolate.remains + dot.wither.remains > cast_time",
["action"] = "channel_demonfire",
["description"] = "[Hekili] Don't use without Immolate/Wither active.",
},
{
["action"] = "dimensional_rift",
["enabled"] = true,
},
{
["action"] = "infernal_bolt",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time_to_max_charges < 2 * gcd.max || boss & fight_remains < gcd.max * charges",
["action"] = "conflagrate",
},
{
["enabled"] = true,
["criteria"] = "buff.backdraft.up",
["action"] = "soul_fire",
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["precombat"] = {
{
["enabled"] = true,
["criteria"] = "time > 0 & ! pet.alive",
["action"] = "fel_domination",
},
{
["action"] = "summon_pet",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "toggle.funnel",
["var_name"] = "cleave_apl",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff",
["var_name"] = "trinket_1_buffs",
["description"] = "Automatic Logic for Buff Trinkets in Trinket Slot 1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff",
["var_name"] = "trinket_2_buffs",
["description"] = "Automatic Logic for Buff Trinkets in Trinket Slot 2",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_1_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_1_buffs & ( trinket.t1.cooldown.duration % cooldown.summon_infernal.duration = 0 || cooldown.summon_infernal.duration % trinket.t1.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["value"] = "1",
["value_else"] = "0.5",
["criteria"] = "variable.trinket_2_buffs & ( trinket.t2.cooldown.duration % cooldown.summon_infernal.duration = 0 || cooldown.summon_infernal.duration % trinket.t2.cooldown.duration = 0 )",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.spymasters_web",
["var_name"] = "trinket_1_manual",
["description"] = "Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.spymasters_web",
["var_name"] = "trinket_2_manual",
["description"] = "Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.whispering_incarnate_icon",
["var_name"] = "trinket_1_exclude",
["description"] = "Sets a specific Trinkets in Slot 2 to follow an APL line and not the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.whispering_incarnate_icon",
["var_name"] = "trinket_2_exclude",
["description"] = "For On Use Trinkets on slot 2 with on use effects you dont want to use in combat",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.buff_duration",
["var_name"] = "trinket_1_buff_duration",
["description"] = "Sets the duration of the trinket in the automatic logic",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.buff_duration",
["var_name"] = "trinket_2_buff_duration",
["description"] = "Sets the duration of the trinket in the automatic logic",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Automatic Logic in case both Trinkets are on use buffs",
["value"] = "2",
["var_name"] = "trinket_priority",
["action"] = "variable",
["value_else"] = "1",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / variable.trinket_2_buff_duration ) * ( 1 + 0.5 * trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / variable.trinket_1_buff_duration ) * ( 1 + 0.5 * trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
},
{
["enabled"] = true,
["op"] = "reset",
["action"] = "variable",
["var_name"] = "allow_rof_2t_spender",
["default"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.allow_rof_2t_spender > 1.99 & ! ( talent.cataclysm.enabled & talent.improved_chaos_bolt.enabled )",
["var_name"] = "do_rof_2t",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.do_rof_2t || variable.allow_rof_2t_spender > 0.01 & variable.allow_rof_2t_spender < 0.99",
["var_name"] = "disable_cb_2t",
},
{
["enabled"] = true,
["criteria"] = "talent.grimoire_of_sacrifice.enabled",
["action"] = "grimoire_of_sacrifice",
},
{
["enabled"] = true,
["criteria"] = "active_enemies >= 2",
["action"] = "cataclysm",
},
{
["action"] = "soul_fire",
["enabled"] = true,
},
{
["action"] = "incinerate",
["enabled"] = true,
},
},
["ogcd"] = {
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < ( cooldown.summon_infernal.remains_expected + cooldown.berserking.duration ) & ( fight_remains > cooldown.berserking.duration ) ) || boss & fight_remains < cooldown.summon_infernal.remains_expected",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < cooldown.summon_infernal.remains_expected + 10 + cooldown.blood_fury.duration & fight_remains > cooldown.blood_fury.duration ) || boss & fight_remains < cooldown.summon_infernal.remains",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < cooldown.summon_infernal.remains_expected + 10 + cooldown.fireblood.duration & fight_remains > cooldown.fireblood.duration ) || boss & fight_remains < cooldown.summon_infernal.remains_expected",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "variable.infernal_active || ! talent.summon_infernal.enabled || ( boss & fight_remains < ( cooldown.summon_infernal.remains_expected + cooldown.berserking.duration ) & ( fight_remains > cooldown.berserking.duration ) ) || boss & fight_remains < cooldown.summon_infernal.remains_expected",
["action"] = "ancestral_call",
},
},
},
["version"] = 20250303,
["warnings"] = "The import for 'items' required some automated changes.\nLine 2: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 5: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\n\nThe import for 'variables' required some automated changes.\nLine 2: Converted 'talent.secrets_of_the_coven' to 'talent.secrets_of_the_coven.enabled' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in '((floor((fight_remains%trinket.t1.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.t1.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.t1.cooldown.duration)+1))||((floor((fight_remains%trinket.t1.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.t1.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_1_buff_duration)>0)))&cooldown.summon_infernal.remains>20' to '((floor((fight_remains/trinket.t1.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(floor((fight_remains/trinket.t1.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)/trinket.t1.cooldown.duration)+1))||((floor((fight_remains/trinket.t1.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%trinket.t1.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_1_buff_duration)>0)))&cooldown.summon_infernal.remains>20'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in '((floor((fight_remains%trinket.t2.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.t2.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.t2.cooldown.duration)+1))||((floor((fight_remains%trinket.t2.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.t2.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_2_buff_duration)>0)))&cooldown.summon_infernal.remains>20' to '((floor((fight_remains/trinket.t2.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(floor((fight_remains/trinket.t2.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)/trinket.t2.cooldown.duration)+1))||((floor((fight_remains/trinket.t2.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))/cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%trinket.t2.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_2_buff_duration)>0)))&cooldown.summon_infernal.remains>20'.\n\nThe import for 'default' required some automated changes.\nLine 11: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 11: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 12: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 13: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 13: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 13: Converted 'talent.conflagration_of_chaos' to 'talent.conflagration_of_chaos.enabled' (1x).\nLine 13: Converted 'talent.blistering_atrophy' to 'talent.blistering_atrophy.enabled' (1x).\nLine 15: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 16: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 17: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 17: Converted 'talent.shadowburn' to 'talent.shadowburn.enabled' (1x).\nLine 18: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 18: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 19: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 19: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 20: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 20: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 20: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 21: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 21: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 21: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 21: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 21: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 23: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 24: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 4: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 6: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 6: Converted operations in 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.t1.cooldown.duration=0)' to 'variable.trinket_1_buffs&(trinket.t1.cooldown.duration%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%trinket.t1.cooldown.duration=0)'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 7: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 7: Converted operations in 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.t2.cooldown.duration=0)' to 'variable.trinket_2_buffs&(trinket.t2.cooldown.duration%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%trinket.t2.cooldown.duration=0)'.\nLine 8: Converted 'trinket.1.is.spymasters_web' to 'trinket.t1.is.spymasters_web' (1x).\nLine 9: Converted 'trinket.2.is.spymasters_web' to 'trinket.t2.is.spymasters_web' (1x).\nLine 10: Converted 'trinket.1.is.whispering_incarnate_icon' to 'trinket.t1.is.whispering_incarnate_icon' (1x).\nLine 11: Converted 'trinket.2.is.whispering_incarnate_icon' to 'trinket.t2.is.whispering_incarnate_icon' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 12: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 13: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 14: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.2.has_buff.intellect' to 'trinket.t2.has_use_buff' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 14: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_buff.intellect' (1x).\nLine 14: Converted 'trinket.1.has_buff.intellect' to 'trinket.t1.has_use_buff' (1x).\nLine 14: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/variable.trinket_2_buff_duration)*(1+0.5*trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/variable.trinket_1_buff_duration)*(1+0.5*trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 16: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 16: Converted 'talent.improved_chaos_bolt' to 'talent.improved_chaos_bolt.enabled' (1x).\n\nThe import for 'aoe' required some automated changes.\nLine 5: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 5: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 7: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 8: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 9: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 10: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 10: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 10: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 10: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 10: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 10: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 10: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 10: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 10: Converted 'talent.conflagration_of_chaos' to 'talent.conflagration_of_chaos.enabled' (1x).\nLine 10: Converted 'talent.blistering_atrophy' to 'talent.blistering_atrophy.enabled' (1x).\nLine 11: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 11: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 11: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 11: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 11: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 11: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 11: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 11: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 11: Converted 'talent.conflagration_of_chaos' to 'talent.conflagration_of_chaos.enabled' (1x).\nLine 11: Converted 'talent.blistering_atrophy' to 'talent.blistering_atrophy.enabled' (1x).\nLine 13: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 14: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 17: Converted 'talent.rain_of_fire' to 'talent.rain_of_fire.enabled' (1x).\nLine 17: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 17: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 18: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 19: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 19: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 19: Converted 'talent.malevolence' to 'talent.malevolence.enabled' (1x).\nLine 20: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 21: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 21: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 21: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 24: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 26: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 26: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 27: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 27: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 31: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'cleave' required some automated changes.\nLine 2: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 7: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 7: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 8: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 8: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 10: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 10: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 10: Converted 'talent.conflagration_of_chaos' to 'talent.conflagration_of_chaos.enabled' (1x).\nLine 10: Converted 'talent.blistering_atrophy' to 'talent.blistering_atrophy.enabled' (1x).\nLine 12: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 13: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 14: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 15: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 15: Converted 'talent.shadowburn' to 'talent.shadowburn.enabled' (1x).\nLine 17: Converted 'talent.raging_demonfire' to 'talent.raging_demonfire.enabled' (1x).\nLine 17: Converted 'talent.internal_combustion' to 'talent.internal_combustion.enabled' (1x).\nLine 18: Converted 'talent.roaring_blaze' to 'talent.roaring_blaze.enabled' (1x).\nLine 19: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 19: Converted 'talent.soul_fire' to 'talent.soul_fire.enabled' (1x).\nLine 19: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 21: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 22: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 23: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 23: Converted 'talent.pyrogenics' to 'talent.pyrogenics.enabled' (1x).\nLine 23: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 24: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\nLine 25: Converted 'talent.mayhem' to 'talent.mayhem.enabled' (1x).\nLine 26: Converted 'talent.rain_of_chaos' to 'talent.rain_of_chaos.enabled' (1x).\n\nThe import for 'havoc' required some automated changes.\nLine 1: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\nLine 3: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 6: Converted 'talent.eradication' to 'talent.eradication.enabled' (1x).\nLine 6: Converted 'talent.diabolic_ritual' to 'talent.diabolic_ritual.enabled' (1x).\nLine 6: Converted 'talent.conflagration_of_chaos' to 'talent.conflagration_of_chaos.enabled' (1x).\nLine 6: Converted 'talent.blistering_atrophy' to 'talent.blistering_atrophy.enabled' (1x).\nLine 8: Converted 'talent.improved_chaos_bolt' to 'talent.improved_chaos_bolt.enabled' (1x).\nLine 8: Converted 'talent.improved_chaos_bolt' to 'talent.improved_chaos_bolt.enabled' (1x).\nLine 8: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 8: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 8: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 8: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 8: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 8: Converted 'talent.inferno' to 'talent.inferno.enabled' (1x).\nLine 8: Converted 'talent.wither' to 'talent.wither.enabled' (1x).\nLine 8: Converted 'talent.cataclysm' to 'talent.cataclysm.enabled' (1x).\nLine 11: Converted 'talent.backdraft' to 'talent.backdraft.enabled' (1x).\n\nThe import for 'ogcd' required some automated changes.\nLine 1: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 2: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 3: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 4: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\nLine 5: Converted 'talent.summon_infernal' to 'talent.summon_infernal.enabled' (1x).\n\nImported 8 action lists.\n",
["profile"] = "actions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/variable,name=cleave_apl,value=toggle.funnel\n# Automatic Logic for Buff Trinkets in Trinket Slot 1\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff\n# Automatic Logic for Buff Trinkets in Trinket Slot 2\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_1_buffs&(trinket.1.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.1.cooldown.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=variable.trinket_2_buffs&(trinket.2.cooldown.duration%%cooldown.summon_infernal.duration=0||cooldown.summon_infernal.duration%%trinket.2.cooldown.duration=0)\n# Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.spymasters_web\n# Sets a specific Trinkets in Slot 1 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.spymasters_web\n# Sets a specific Trinkets in Slot 2 to follow an APL line and not the automatic logic\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.whispering_incarnate_icon\n# For On Use Trinkets on slot 2 with on use effects you dont want to use in combat\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.whispering_incarnate_icon\n# Sets the duration of the trinket in the automatic logic\nactions.precombat+=/variable,name=trinket_1_buff_duration,value=trinket.1.proc.any_dps.duration\n# Sets the duration of the trinket in the automatic logic\nactions.precombat+=/variable,name=trinket_2_buff_duration,value=trinket.2.proc.any_dps.duration\n# Automatic Logic in case both Trinkets are on use buffs\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%variable.trinket_2_buff_duration)*(1+0.5*trinket.2.has_buff.intellect)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%variable.trinket_1_buff_duration)*(1+0.5*trinket.1.has_buff.intellect)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=allow_rof_2t_spender,default=2,op=reset\nactions.precombat+=/variable,name=do_rof_2t,value=variable.allow_rof_2t_spender>1.99&!(talent.cataclysm&talent.improved_chaos_bolt),op=set\nactions.precombat+=/variable,name=disable_cb_2t,value=variable.do_rof_2t||variable.allow_rof_2t_spender>0.01&variable.allow_rof_2t_spender<0.99\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/cataclysm,if=active_enemies>=2\nactions.precombat+=/soul_fire\nactions.precombat+=/incinerate\n\nactions+=/spell_lock\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=ogcd\nactions+=/call_action_list,name=items\nactions+=/call_action_list,name=aoe,strict=1,if=(active_enemies>=3)&!variable.cleave_apl\n# This entry is manually translated and will differ from SIMC, but maintains the same functionality.\nactions+=/call_action_list,name=cleave,strict=1,if=active_enemies>1\nactions+=/malevolence,if=cooldown.summon_infernal.remains>=55\nactions+=/wait,sec=((buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)),if=(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)<gcd.max*0.25)&soul_shard>2\nactions+=/chaos_bolt,if=demonic_art\nactions+=/soul_fire,if=buff.decimation.react&(soul_shard<=4||buff.decimation.remains<=gcd.max*2)&debuff.conflagrate.remains>=execute_time\nactions+=/wither,if=talent.internal_combustion&(((dot.wither.remains-5*action.chaos_bolt.in_flight)<dot.wither.duration*0.4)||dot.wither.remains<3||(dot.wither.remains-action.chaos_bolt.execute_time)<5&action.chaos_bolt.usable)&(!talent.soul_fire||cooldown.soul_fire.remains+action.soul_fire.cast_time>(dot.wither.remains-5))&target.time_to_die>8&!action.soul_fire.in_flight_to_target\nactions+=/conflagrate,if=talent.roaring_blaze&debuff.conflagrate.remains<1.5||full_recharge_time<=gcd.max*2||recharge_time<=8&(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)<gcd.max)&soul_shard>=1.5\nactions+=/shadowburn,if=(full_recharge_time<=gcd.max*3||debuff.eradication.remains<=gcd.max&talent.eradication&!action.chaos_bolt.in_flight&!talent.diabolic_ritual)&(talent.conflagration_of_chaos||talent.blistering_atrophy)&!demonic_art||boss&fight_remains<=8\nactions+=/chaos_bolt,if=buff.ritual_of_ruin.up\nactions+=/shadowburn,if=(cooldown.summon_infernal.remains>=90&talent.rain_of_chaos)||buff.malevolence.up\nactions+=/chaos_bolt,if=(cooldown.summon_infernal.remains>=90&talent.rain_of_chaos)||buff.malevolence.up\nactions+=/ruination,if=(debuff.eradication.remains>=execute_time||!talent.eradication||!talent.shadowburn)\nactions+=/cataclysm,if=raid_event.adds.in>15&(dot.immolate.refreshable&!talent.wither||talent.wither&dot.wither.refreshable)\nactions+=/channel_demonfire,if=talent.raging_demonfire&(dot.immolate.remains+dot.wither.remains-5*(action.chaos_bolt.in_flight&talent.internal_combustion))>cast_time\nactions+=/wither,if=!talent.internal_combustion&(((dot.wither.remains-5*(action.chaos_bolt.in_flight))<dot.wither.duration*0.3)||dot.wither.remains<3)&(!talent.cataclysm||cooldown.cataclysm.remains>dot.wither.remains)&(!talent.soul_fire||cooldown.soul_fire.remains+action.soul_fire.cast_time>(dot.wither.remains))&target.time_to_die>8&!action.soul_fire.in_flight_to_target\nactions+=/immolate,if=(((dot.immolate.remains-5*(action.chaos_bolt.in_flight&talent.internal_combustion))<dot.immolate.duration*0.3)||dot.immolate.remains<3||(dot.immolate.remains-action.chaos_bolt.execute_time)<5&talent.internal_combustion&action.chaos_bolt.usable)&(!talent.cataclysm||cooldown.cataclysm.remains>dot.immolate.remains)&(!talent.soul_fire||cooldown.soul_fire.remains+action.soul_fire.cast_time>(dot.immolate.remains-5*talent.internal_combustion))&target.time_to_die>8&!action.soul_fire.in_flight_to_target\nactions+=/summon_infernal\nactions+=/incinerate,if=talent.diabolic_ritual&(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains-2-!variable.disable_cb_2t*action.chaos_bolt.cast_time-variable.disable_cb_2t*gcd.max)<=0)\nactions+=/chaos_bolt,if=variable.pooling_condition_cb&(cooldown.summon_infernal.remains>=gcd.max*3||soul_shard>4||!talent.rain_of_chaos)\n# [Hekili] Don't use without Immolate/Wither active.\nactions+=/channel_demonfire,if=dot.immolate.remains+dot.wither.remains>cast_time\nactions+=/dimensional_rift\nactions+=/infernal_bolt\nactions+=/conflagrate,if=time_to_max_charges<2*gcd.max||boss&fight_remains<gcd.max*charges\nactions+=/soul_fire,if=buff.backdraft.up\nactions+=/incinerate\n\nactions.aoe+=/malevolence,if=cooldown.summon_infernal.remains>=55&soul_shard<4.7&(active_enemies<=3+active_dot.wither||time>30)\nactions.aoe+=/rain_of_fire,if=demonic_art\nactions.aoe+=/wait,sec=((buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)),if=(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)<gcd.max*0.25)&soul_shard>2\nactions.aoe+=/incinerate,if=(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)<=action.incinerate.cast_time&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)>gcd.max*0.25)\nactions.aoe+=/call_action_list,name=havoc,strict=1,if=havoc_active&havoc_remains>gcd.max&active_enemies<(5+!talent.wither)&(!cooldown.summon_infernal.up||!talent.summon_infernal)\nactions.aoe+=/dimensional_rift,if=soul_shard<4.7&(charges>2||boss&fight_remains<cooldown.dimensional_rift.duration)\nactions.aoe+=/rain_of_fire,if=!talent.inferno&soul_shard>=(4.5-0.1*(active_dot.immolate+active_dot.wither))||soul_shard>=(3.5-0.1*(active_dot.immolate+active_dot.wither))||buff.ritual_of_ruin.up\nactions.aoe+=/wither,cycle_targets=1,if=dot.wither.refreshable&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.wither.remains)&(!talent.raging_demonfire||cooldown.channel_demonfire.remains>remains||time<5)&(active_dot.wither<=4||time>15)&target.time_to_die>18\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains+dot.wither.remains>cast_time&talent.raging_demonfire\nactions.aoe+=/shadowburn,if=((buff.malevolence.up&((talent.cataclysm&active_enemies<=10)||(talent.inferno&active_enemies<=6)))||(talent.wither&talent.cataclysm&active_enemies<=6)||(!talent.wither&talent.cataclysm&active_enemies<=4)||active_enemies<=3)&((cooldown.shadowburn.full_recharge_time<=gcd.max*3||debuff.eradication.remains<=gcd.max&talent.eradication&!action.chaos_bolt.in_flight&!talent.diabolic_ritual)&(talent.conflagration_of_chaos||talent.blistering_atrophy)||fight_remains<=8)\nactions.aoe+=/shadowburn,cycle_targets=1,if=((buff.malevolence.up&((talent.cataclysm&active_enemies<=10)||(talent.inferno&active_enemies<=6)))||(talent.wither&talent.cataclysm&active_enemies<=6)||(!talent.wither&talent.cataclysm&active_enemies<=4)||active_enemies<=3)&((cooldown.shadowburn.full_recharge_time<=gcd.max*3||debuff.eradication.remains<=gcd.max&talent.eradication&!action.chaos_bolt.in_flight&!talent.diabolic_ritual)&(talent.conflagration_of_chaos||talent.blistering_atrophy)&time_to_die<5||boss&fight_remains<=8)\nactions.aoe+=/ruination\nactions.aoe+=/rain_of_fire,if=pet.infernal.active&talent.rain_of_chaos\nactions.aoe+=/soul_fire,cycle_targets=1,if=(buff.decimation.up)&!talent.raging_demonfire&havoc_active\nactions.aoe+=/soul_fire,cycle_targets=1,if=buff.decimation.up&active_dot.immolate<=4\nactions.aoe+=/infernal_bolt,if=soul_shard<2.5\nactions.aoe+=/chaos_bolt,if=(soul_shard>3.5-(0.1*active_enemies)&!talent.rain_of_fire)||(!talent.wither&talent.cataclysm&active_enemies<=3)\nactions.aoe+=/cataclysm,if=raid_event.adds.in>15||talent.wither\nactions.aoe+=/havoc,cycle_targets=1,if=(!cooldown.summon_infernal.up||!talent.summon_infernal||(talent.inferno&active_enemies>4))&target.time_to_die>8&(cooldown.malevolence.remains>15||!talent.malevolence)||time<5\nactions.aoe+=/wither,cycle_targets=1,if=dot.wither.refreshable&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.wither.remains)&(!talent.raging_demonfire||cooldown.channel_demonfire.remains>remains||time<5)&active_dot.wither<=cycle_enemies&target.time_to_die>18\nactions.aoe+=/immolate,cycle_targets=1,if=dot.immolate.refreshable&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains)&(!talent.raging_demonfire||cooldown.channel_demonfire.remains>remains||time<5)&(active_dot.immolate<=6&!(talent.diabolic_ritual&talent.inferno)||active_dot.immolate<=4)&target.time_to_die>18\nactions.aoe+=/call_action_list,name=ogcd\nactions.aoe+=/summon_infernal\nactions.aoe+=/rain_of_fire,if=debuff.pyrogenics.down&active_enemies<=4&!talent.diabolic_ritual\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains+dot.wither.remains>cast_time\nactions.aoe+=/immolate,cycle_targets=1,if=dot.immolate.refreshable&((((!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains))||cycle_enemies>active_dot.immolate)&target.time_to_die>10&!havoc_active&!(talent.diabolic_ritual&talent.inferno))\nactions.aoe+=/immolate,cycle_targets=1,if=dot.immolate.refreshable&((variable.havoc_immo_time<5.4||(dot.immolate.remains<2&dot.immolate.remains<havoc_remains)||!dot.immolate.ticking||(variable.havoc_immo_time<2)*havoc_active)&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>dot.immolate.remains)&target.time_to_die>11&!(talent.diabolic_ritual&talent.inferno))\nactions.aoe+=/dimensional_rift\nactions.aoe+=/soul_fire,cycle_targets=1,if=buff.decimation.up\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up\nactions.aoe+=/conflagrate,if=buff.backdraft.stack<2||!talent.backdraft\nactions.aoe+=/incinerate\n\nactions.cleave+=/call_action_list,name=havoc,strict=1,if=havoc_active&havoc_remains>gcd.max\nactions.cleave+=/variable,name=pool_soul_shards,value=cooldown.havoc.remains<=5||talent.mayhem\nactions.cleave+=/malevolence,if=(!cooldown.summon_infernal.up||!talent.summon_infernal)\nactions.cleave+=/havoc,cycle_targets=1,if=(!cooldown.summon_infernal.up||!talent.summon_infernal)&target.time_to_die>8\nactions.cleave+=/chaos_bolt,if=demonic_art\nactions.cleave+=/soul_fire,if=buff.decimation.react&(soul_shard<=4||buff.decimation.remains<=gcd.max*2)&debuff.conflagrate.remains>=execute_time&cooldown.havoc.remains\nactions.cleave+=/wither,cycle_targets=1,if=talent.internal_combustion&(((dot.wither.remains-5*action.chaos_bolt.in_flight)<dot.wither.duration*0.4)||dot.wither.remains<3||(dot.wither.remains-action.chaos_bolt.execute_time)<5&action.chaos_bolt.usable)&(!talent.soul_fire||cooldown.soul_fire.remains+action.soul_fire.cast_time>(dot.wither.remains-5))&target.time_to_die>8&!action.soul_fire.in_flight_to_target\nactions.cleave+=/wither,cycle_targets=1,if=!talent.internal_combustion&(((dot.wither.remains-5*(action.chaos_bolt.in_flight))<dot.wither.duration*0.3)||dot.wither.remains<3)&(!talent.soul_fire||cooldown.soul_fire.remains+action.soul_fire.cast_time>(dot.wither.remains))&target.time_to_die>8&!action.soul_fire.in_flight_to_target\nactions.cleave+=/conflagrate,if=(talent.roaring_blaze.enabled&full_recharge_time<=gcd.max*2)||recharge_time<=8&(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains)<gcd.max)&!variable.pool_soul_shards\nactions.cleave+=/shadowburn,if=(cooldown.shadowburn.full_recharge_time<=gcd.max*3||debuff.eradication.remains<=gcd.max&talent.eradication&!action.chaos_bolt.in_flight&!talent.diabolic_ritual)&(talent.conflagration_of_chaos||talent.blistering_atrophy)||boss&fight_remains<=8\nactions.cleave+=/chaos_bolt,if=buff.ritual_of_ruin.up\nactions.cleave+=/rain_of_fire,if=cooldown.summon_infernal.remains>=90&talent.rain_of_chaos\nactions.cleave+=/shadowburn,if=cooldown.summon_infernal.remains>=90&talent.rain_of_chaos\nactions.cleave+=/chaos_bolt,if=cooldown.summon_infernal.remains>=90&talent.rain_of_chaos\nactions.cleave+=/ruination,if=(debuff.eradication.remains>=execute_time||!talent.eradication||!talent.shadowburn)\nactions.cleave+=/cataclysm,if=raid_event.adds.in>15\nactions.cleave+=/channel_demonfire,if=talent.raging_demonfire&(dot.immolate.remains+dot.wither.remains-5*(action.chaos_bolt.in_flight&talent.internal_combustion))>cast_time\nactions.cleave+=/soul_fire,if=soul_shard<=3.5&(debuff.conflagrate.remains>cast_time+travel_time||!talent.roaring_blaze&buff.backdraft.up)&!variable.pool_soul_shards\nactions.cleave+=/immolate,cycle_targets=1,if=(dot.immolate.refreshable&(dot.immolate.remains<cooldown.havoc.remains||!dot.immolate.ticking))&(!talent.cataclysm||cooldown.cataclysm.remains>remains)&(!talent.soul_fire||cooldown.soul_fire.remains+(!talent.mayhem*action.soul_fire.cast_time)>dot.immolate.remains)&target.time_to_die>15\nactions.cleave+=/summon_infernal\nactions.cleave+=/incinerate,if=talent.diabolic_ritual&(diabolic_ritual&(buff.diabolic_ritual_mother_of_chaos.remains+buff.diabolic_ritual_overlord.remains+buff.diabolic_ritual_pit_lord.remains-2-!variable.disable_cb_2t*action.chaos_bolt.cast_time-variable.disable_cb_2t*gcd.max)<=0)\nactions.cleave+=/rain_of_fire,if=variable.pooling_condition&!talent.wither&buff.rain_of_chaos.up\nactions.cleave+=/rain_of_fire,if=variable.allow_rof_2t_spender>=1&!talent.wither&talent.pyrogenics&debuff.pyrogenics.remains<=gcd.max&(!talent.rain_of_chaos||cooldown.summon_infernal.remains>=gcd.max*3)&variable.pooling_condition\nactions.cleave+=/rain_of_fire,if=variable.do_rof_2t&variable.pooling_condition&(cooldown.summon_infernal.remains>=gcd.max*3||!talent.rain_of_chaos)\nactions.cleave+=/soul_fire,if=soul_shard<=4&talent.mayhem\nactions.cleave+=/chaos_bolt,if=!variable.disable_cb_2t&variable.pooling_condition_cb&(cooldown.summon_infernal.remains>=gcd.max*3||soul_shard>4||!talent.rain_of_chaos)\nactions.cleave+=/channel_demonfire,if=dot.immolate.remains+dot.wither.remains>cast_time\nactions.cleave+=/dimensional_rift\nactions.cleave+=/infernal_bolt\nactions.cleave+=/conflagrate,if=time_to_max_charges<2*gcd.max||boss&fight_remains<gcd.max*charges\nactions.cleave+=/incinerate\n\nactions.havoc+=/conflagrate,if=talent.backdraft&buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains&soul_shard<2.5\nactions.havoc+=/cataclysm,if=raid_event.adds.in>15||(talent.wither&dot.wither.remains<action.wither.cast_time*0.3)\nactions.havoc+=/immolate,cycle_targets=1,if=(((dot.immolate.refreshable&variable.havoc_immo_time<5.4)&target.time_to_die>5)||((dot.immolate.remains<2&dot.immolate.remains<havoc_remains)||!dot.immolate.ticking||variable.havoc_immo_time<2)&target.time_to_die>11)&soul_shard<4.5\nactions.havoc+=/wither,cycle_targets=1,if=(((dot.wither.refreshable&variable.havoc_immo_time<5.4)&target.time_to_die>5)||((dot.wither.remains<2&dot.wither.remains<havoc_remains)||!dot.wither.ticking||variable.havoc_immo_time<2)&target.time_to_die>11)&soul_shard<4.5\nactions.havoc+=/shadowburn,if=active_enemies<=4&(cooldown.shadowburn.full_recharge_time<=gcd.max*3||debuff.eradication.remains<=gcd.max&talent.eradication&!action.chaos_bolt.in_flight&!talent.diabolic_ritual)&(talent.conflagration_of_chaos||talent.blistering_atrophy)\nactions.havoc+=/shadowburn,if=active_enemies<=4&havoc_remains<=gcd.max*3\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&((!talent.improved_chaos_bolt&active_enemies<=2)||(talent.improved_chaos_bolt&((talent.wither&talent.inferno&active_enemies<=2)||(talent.wither&talent.cataclysm&active_enemies<=4)||(!talent.wither&talent.inferno&active_enemies<=3)||(!talent.wither&talent.cataclysm&active_enemies<=5))))\nactions.havoc+=/rain_of_fire,if=active_enemies>=3\nactions.havoc+=/channel_demonfire,if=dot.immolate.remains+dot.wither.remains>cast_time&soul_shard<4.5\nactions.havoc+=/conflagrate,if=!talent.backdraft\nactions.havoc+=/dimensional_rift,if=soul_shard<4.7&(charges>2||boss&fight_remains<cooldown.dimensional_rift.duration)\nactions.havoc+=/incinerate,if=cast_time<havoc_remains\n\nactions.items+=/use_item,name=spymasters_web,if=pet.infernal.remains>=10&pet.infernal.remains<=20&buff.spymasters_report.stack>=38&(fight_remains>240||fight_remains<=140)||boss&fight_remains<=30\nactions.items+=/use_item,slot=trinket1,if=(variable.infernal_active||!talent.summon_infernal||variable.trinket_1_will_lose_cast)&(variable.trinket_priority=1||variable.trinket_2_exclude||!trinket.2.has_cooldown||(trinket.2.cooldown.remains||variable.trinket_priority=2&cooldown.summon_infernal.remains>20&!variable.infernal_active&trinket.2.cooldown.remains<cooldown.summon_infernal.remains))&variable.trinket_1_buffs&!variable.trinket_1_manual||(variable.trinket_1_buff_duration+1>=fight_remains)\nactions.items+=/use_item,slot=trinket2,if=(variable.infernal_active||!talent.summon_infernal||variable.trinket_2_will_lose_cast)&(variable.trinket_priority=2||variable.trinket_1_exclude||!trinket.1.has_cooldown||(trinket.1.cooldown.remains||variable.trinket_priority=1&cooldown.summon_infernal.remains>20&!variable.infernal_active&trinket.1.cooldown.remains<cooldown.summon_infernal.remains))&variable.trinket_2_buffs&!variable.trinket_2_manual||(variable.trinket_2_buff_duration+1>=fight_remains)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket1,if=!variable.trinket_1_buffs&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||talent.summon_infernal&cooldown.summon_infernal.remains_expected>20&!prev_gcd.1.summon_infernal||!talent.summon_infernal)\nactions.items+=/use_item,use_off_gcd=1,slot=trinket2,if=!variable.trinket_2_buffs&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||talent.summon_infernal&cooldown.summon_infernal.remains_expected>20&!prev_gcd.1.summon_infernal||!talent.summon_infernal)\nactions.items+=/use_item,use_off_gcd=1,slot=main_hand\n\nactions.ogcd+=/potion,if=variable.infernal_active||!talent.summon_infernal\n## actions.ogcd+=/invoke_external_buff,name=power_infusion,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<cooldown.summon_infernal.remains_expected+10+cooldown.invoke_power_infusion_0.duration&fight_remains>cooldown.invoke_power_infusion_0.duration)||boss&fight_remains<cooldown.summon_infernal.remains_expected+15\nactions.ogcd+=/berserking,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<(cooldown.summon_infernal.remains_expected+cooldown.berserking.duration)&(fight_remains>cooldown.berserking.duration))||boss&fight_remains<cooldown.summon_infernal.remains_expected\nactions.ogcd+=/blood_fury,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<cooldown.summon_infernal.remains_expected+10+cooldown.blood_fury.duration&fight_remains>cooldown.blood_fury.duration)||boss&fight_remains<cooldown.summon_infernal.remains\nactions.ogcd+=/fireblood,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<cooldown.summon_infernal.remains_expected+10+cooldown.fireblood.duration&fight_remains>cooldown.fireblood.duration)||boss&fight_remains<cooldown.summon_infernal.remains_expected\nactions.ogcd+=/ancestral_call,if=variable.infernal_active||!talent.summon_infernal||(boss&fight_remains<(cooldown.summon_infernal.remains_expected+cooldown.berserking.duration)&(fight_remains>cooldown.berserking.duration))||boss&fight_remains<cooldown.summon_infernal.remains_expected\n\nactions.variables+=/variable,name=havoc_immo_time,op=setif,condition=havoc_active,value=dot.immolate.remains<?dot.wither.remains\nactions.variables+=/variable,name=pooling_condition,value=(soul_shard>=3||(talent.secrets_of_the_coven&buff.infernal_bolt.up||buff.decimation.up)&soul_shard>=3),default=1,op=set\nactions.variables+=/variable,name=pooling_condition_cb,value=variable.pooling_condition||pet.infernal.active&soul_shard>=3,default=1,op=set\n## actions.variables+=/cycling_variable,name=havoc_immo_time,op=add,value=dot.immolate.remains*debuff.havoc.up<?dot.wither.remains*debuff.havoc.up\nactions.variables+=/variable,name=infernal_active,op=set,value=pet.infernal.active||(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains)<20\nactions.variables+=/variable,name=trinket_1_will_lose_cast,value=((floor((fight_remains%trinket.1.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.1.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.1.cooldown.duration)+1))||((floor((fight_remains%trinket.1.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.1.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_1_buff_duration)>0)))&cooldown.summon_infernal.remains>20\nactions.variables+=/variable,name=trinket_2_will_lose_cast,value=((floor((fight_remains%trinket.2.cooldown.duration)+1)!=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(floor((fight_remains%trinket.2.cooldown.duration)+1))!=(floor(((fight_remains-cooldown.summon_infernal.remains)%trinket.2.cooldown.duration)+1))||((floor((fight_remains%trinket.2.cooldown.duration)+1)=floor((fight_remains+(cooldown.summon_infernal.duration-cooldown.summon_infernal.remains))%cooldown.summon_infernal.duration))&(((fight_remains-cooldown.summon_infernal.remains%%trinket.2.cooldown.duration)-cooldown.summon_infernal.remains-variable.trinket_2_buff_duration)>0)))&cooldown.summon_infernal.remains>20",
["spec"] = 267,
},
["Protection Warrior"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20240926,
["spec"] = 73,
["desc"] = "2024-09-26: Spell Block added\n\n2024-09-24: Mitigations and Impeding Victory Fixed\n\n2024-08-15, 09-09: SimC priority updates\n\n2024-07-24: The War Within",
["profile"] = "actions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/battle_shout\n\nactions+=/pummel\nactions+=/charge,if=time=0||movement.distance>8\nactions+=/use_items\nactions+=/avatar,if=buff.thunder_blast.down||buff.thunder_blast.stack<=2\nactions+=/spell_block,use_off_gcd=1,if=tanking&incoming_magic_damage_5s>spell_block_damage_taken&health.pct<=spell_block_health_pct&!(buff.spell_reflection_defense.up)\nactions+=/shield_wall,use_off_gcd=1,if=tanking&incoming_damage_5s>shield_wall_damage_taken&health.pct<=shield_wall_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/blood_fury\nactions+=/berserking\nactions+=/arcane_torrent\nactions+=/lights_judgment\nactions+=/fireblood\nactions+=/ancestral_call\nactions+=/bag_of_tricks\nactions+=/potion,if=buff.avatar.up||buff.avatar.up&target.health.pct<=20\nactions+=/ignore_pain,if=target.health.pct>=20&(rage.deficit<=15&cooldown.shield_slam.ready||rage.deficit<=40&cooldown.shield_charge.ready&talent.champions_bulwark.enabled||rage.deficit<=20&cooldown.shield_charge.ready||rage.deficit<=30&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled||rage.deficit<=20&cooldown.avatar.ready||rage.deficit<=45&cooldown.demoralizing_shout.ready&talent.booming_voice.enabled&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=30&cooldown.avatar.ready&buff.last_stand.up&talent.unnerving_focus.enabled||rage.deficit<=20||rage.deficit<=40&cooldown.shield_slam.ready&buff.violent_outburst.up&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=55&cooldown.shield_slam.ready&buff.violent_outburst.up&buff.last_stand.up&talent.unnerving_focus.enabled&talent.heavy_repercussions.enabled&talent.impenetrable_wall.enabled||rage.deficit<=17&cooldown.shield_slam.ready&talent.heavy_repercussions.enabled||rage.deficit<=18&cooldown.shield_slam.ready&talent.impenetrable_wall.enabled)||(rage>=70||buff.seeing_red.stack=7&rage>=35)&cooldown.shield_slam.remains<=1&buff.shield_block.remains>=4&set_bonus.tier31_2pc,use_off_gcd=1\nactions+=/last_stand,use_off_gcd=1,if=tanking&incoming_damage_5s>last_stand_damage_taken&health.pct<=last_stand_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/rallying_cry,if=tanking&incoming_damage_5s>rallying_cry_damage_taken&health.pct<=rallying_cry_health_pct&!(buff.shield_wall.up||buff.last_stand.up||buff.rallying_cry.up||buff.potion.up)\nactions+=/victory_rush,if=health.pct<victory_rush_health_pct&talent.impending_victory.disabled\nactions+=/impending_victory,if=health.pct<victory_rush_health_pct&talent.impending_victory.enabled\nactions+=/ravager\nactions+=/demoralizing_shout,if=talent.booming_voice.enabled\nactions+=/champions_spear\nactions+=/thunder_blast,if=spell_targets.thunder_blast>=2&buff.thunder_blast.stack=2\nactions+=/demolish,if=buff.colossal_might.stack>=3\nactions+=/thunderous_roar\nactions+=/shield_charge\nactions+=/shield_block,if=buff.shield_block.remains<=10\nactions+=/run_action_list,name=aoe,strict=1,if=spell_targets.thunder_clap>=3\nactions+=/call_action_list,name=generic\n\nactions.aoe+=/thunder_blast,if=dot.rend.remains<=1\nactions.aoe+=/thunder_clap,if=dot.rend.remains<=1\nactions.aoe+=/thunder_blast,if=buff.violent_outburst.up&spell_targets.thunderclap>=2&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/thunder_clap,if=buff.violent_outburst.up&spell_targets.thunderclap>=4&buff.avatar.up&talent.unstoppable_force.enabled&talent.crashing_thunder.enabled||buff.violent_outburst.up&spell_targets.thunderclap>6&buff.avatar.up&talent.unstoppable_force.enabled\nactions.aoe+=/revenge,if=rage>=70&talent.seismic_reverberation.enabled&spell_targets.revenge>=3\nactions.aoe+=/shield_slam,if=rage<=60||buff.violent_outburst.up&spell_targets.thunderclap<=4&talent.crashing_thunder.enabled\nactions.aoe+=/thunder_blast\nactions.aoe+=/thunder_clap\nactions.aoe+=/revenge,if=rage>=30||rage>=40&talent.barbaric_training.enabled\n\nactions.generic+=/thunder_blast,if=(buff.thunder_blast.stack=2&buff.burst_of_power.stack<=1&buff.avatar.up&talent.unstoppable_force.enabled)\nactions.generic+=/shield_slam,if=(buff.burst_of_power.stack=2&buff.thunder_blast.stack<=1||buff.violent_outburst.up)||rage<=70&talent.demolish.enabled\nactions.generic+=/execute,if=rage>=70||(rage>=40&cooldown.shield_slam.remains&talent.demolish.enabled||rage>=50&cooldown.shield_slam.remains)||buff.sudden_death.up&talent.sudden_death.enabled\nactions.generic+=/shield_slam\nactions.generic+=/thunder_blast,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_clap,if=dot.rend.remains<=2&buff.violent_outburst.down\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>1||cooldown.shield_slam.remains&!buff.violent_outburst.up)\nactions.generic+=/revenge,if=(rage>=80&target.health.pct>20||buff.revenge.up&target.health.pct<=20&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>20)||(rage>=80&target.health.pct>35||buff.revenge.up&target.health.pct<=35&rage<=18&cooldown.shield_slam.remains||buff.revenge.up&target.health.pct>35)&talent.massacre.enabled\nactions.generic+=/execute\nactions.generic+=/revenge\nactions.generic+=/thunder_blast,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/thunder_clap,if=(spell_targets.thunder_clap>=1||cooldown.shield_slam.remains&buff.violent_outburst.up)\nactions.generic+=/devastate",
["version"] = 20240926,
["warnings"] = "Imported 4 action lists.\n",
["lists"] = {
["aoe"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 1",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap >= 2 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.violent_outburst.up & spell_targets.thunderclap >= 4 & buff.avatar.up & talent.unstoppable_force.enabled & talent.crashing_thunder.enabled || buff.violent_outburst.up & spell_targets.thunderclap > 6 & buff.avatar.up & talent.unstoppable_force.enabled",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 & talent.seismic_reverberation.enabled & spell_targets.revenge >= 3",
["action"] = "revenge",
},
{
["enabled"] = true,
["criteria"] = "rage <= 60 || buff.violent_outburst.up & spell_targets.thunderclap <= 4 & talent.crashing_thunder.enabled",
["action"] = "shield_slam",
},
{
["action"] = "thunder_blast",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "rage >= 30 || rage >= 40 & talent.barbaric_training.enabled",
["action"] = "revenge",
},
},
["generic"] = {
{
["enabled"] = true,
["criteria"] = "( buff.thunder_blast.stack = 2 & buff.burst_of_power.stack <= 1 & buff.avatar.up & talent.unstoppable_force.enabled )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( buff.burst_of_power.stack = 2 & buff.thunder_blast.stack <= 1 || buff.violent_outburst.up ) || rage <= 70 & talent.demolish.enabled",
["action"] = "shield_slam",
},
{
["enabled"] = true,
["criteria"] = "rage >= 70 || ( rage >= 40 & cooldown.shield_slam.remains & talent.demolish.enabled || rage >= 50 & cooldown.shield_slam.remains ) || buff.sudden_death.up & talent.sudden_death.enabled",
["action"] = "execute",
},
{
["action"] = "shield_slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 2 & buff.violent_outburst.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap > 1 || cooldown.shield_slam.remains & ! buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "( rage >= 80 & target.health.pct > 20 || buff.revenge.up & target.health.pct <= 20 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 20 ) || ( rage >= 80 & target.health.pct > 35 || buff.revenge.up & target.health.pct <= 35 & rage <= 18 & cooldown.shield_slam.remains || buff.revenge.up & target.health.pct > 35 ) & talent.massacre.enabled",
["action"] = "revenge",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "revenge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.thunder_clap >= 1 || cooldown.shield_slam.remains & buff.violent_outburst.up )",
["action"] = "thunder_clap",
},
{
["action"] = "devastate",
["enabled"] = true,
},
},
["default"] = {
{
["action"] = "pummel",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "time = 0 || movement.distance > 8",
["action"] = "charge",
},
{
["action"] = "use_items",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.thunder_blast.down || buff.thunder_blast.stack <= 2",
["action"] = "avatar",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "tanking & incoming_magic_damage_5s > spell_block_damage_taken & health.pct <= spell_block_health_pct & ! ( buff.spell_reflection_defense.up )",
["action"] = "spell_block",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "tanking & incoming_damage_5s > shield_wall_damage_taken & health.pct <= shield_wall_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["action"] = "shield_wall",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "arcane_torrent",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.avatar.up || buff.avatar.up & target.health.pct <= 20",
["action"] = "potion",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["action"] = "ignore_pain",
["criteria"] = "target.health.pct >= 20 & ( rage.deficit <= 15 & cooldown.shield_slam.ready || rage.deficit <= 40 & cooldown.shield_charge.ready & talent.champions_bulwark.enabled || rage.deficit <= 20 & cooldown.shield_charge.ready || rage.deficit <= 30 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled || rage.deficit <= 20 & cooldown.avatar.ready || rage.deficit <= 45 & cooldown.demoralizing_shout.ready & talent.booming_voice.enabled & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 30 & cooldown.avatar.ready & buff.last_stand.up & talent.unnerving_focus.enabled || rage.deficit <= 20 || rage.deficit <= 40 & cooldown.shield_slam.ready & buff.violent_outburst.up & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 55 & cooldown.shield_slam.ready & buff.violent_outburst.up & buff.last_stand.up & talent.unnerving_focus.enabled & talent.heavy_repercussions.enabled & talent.impenetrable_wall.enabled || rage.deficit <= 17 & cooldown.shield_slam.ready & talent.heavy_repercussions.enabled || rage.deficit <= 18 & cooldown.shield_slam.ready & talent.impenetrable_wall.enabled ) || ( rage >= 70 || buff.seeing_red.stack = 7 & rage >= 35 ) & cooldown.shield_slam.remains <= 1 & buff.shield_block.remains >= 4 & set_bonus.tier31_2pc",
},
{
["enabled"] = true,
["use_off_gcd"] = 1,
["criteria"] = "tanking & incoming_damage_5s > last_stand_damage_taken & health.pct <= last_stand_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["action"] = "last_stand",
},
{
["enabled"] = true,
["criteria"] = "tanking & incoming_damage_5s > rallying_cry_damage_taken & health.pct <= rallying_cry_health_pct & ! ( buff.shield_wall.up || buff.last_stand.up || buff.rallying_cry.up || buff.potion.up )",
["action"] = "rallying_cry",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.disabled",
["action"] = "victory_rush",
},
{
["enabled"] = true,
["criteria"] = "health.pct < victory_rush_health_pct & talent.impending_victory.enabled",
["action"] = "impending_victory",
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.booming_voice.enabled",
["action"] = "demoralizing_shout",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.thunder_blast >= 2 & buff.thunder_blast.stack = 2",
["action"] = "thunder_blast",
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack >= 3",
["action"] = "demolish",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "shield_charge",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.shield_block.remains <= 10",
["action"] = "shield_block",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "spell_targets.thunder_clap >= 3",
["list_name"] = "aoe",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["action"] = "battle_shout",
["enabled"] = true,
},
},
},
["basedOn"] = "Protection Warrior",
["author"] = "SimulationCraft",
},
["Arms"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250308,
["author"] = "SimulationCraft",
["desc"] = "2025-03-08: TWW Season 2 update\n\n2025-02-26: Sync with SimC",
["lists"] = {
["slayer_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= 5 || debuff.colossus_smash.up",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up || buff.avatar.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max * 2 & talent.juggernaut.enabled || buff.sudden_death.stack = 2 || buff.sudden_death.remains <= gcd.max * 3 || debuff.marked_for_execution.stack = 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( cooldown.colossus_smash.remains >= gcd.max * 4 || cooldown.warbreaker.remains >= gcd.max * 4 ) || debuff.colossus_smash.remains >= gcd.max * 4",
["action"] = "bladestorm",
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "! talent.juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["colossus_st"] = {
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "raid_event.adds.in > 15",
["action"] = "avatar",
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "demolish",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max * 5",
["action"] = "rend",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
["colossus_aoe"] = {
{
["enabled"] = true,
["criteria"] = "! dot.deep_wounds.remains",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["action"] = "ravager",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.unhinged.enabled || talent.merciless_bonegrinder.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains < 5",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "buff.colossal_might.stack = 10 & ( debuff.colossus_smash.remains >= 2 || cooldown.colossus_smash.remains >= 7 )",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
},
["slayer_aoe"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "cleave",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sudden_death.up & buff.imminent_demise.stack < 3 || buff.juggernaut.remains < 3 & talent.juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & ( buff.opportunist.up || talent.dreadnaught.enabled & ! talent.juggernaut.enabled )",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up & debuff.executioners_precision.stack < 2 & talent.executioners_precision.enabled || debuff.marked_for_execution.up",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up || talent.dreadnaught.enabled",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "thunder_clap",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "whirlwind",
["enabled"] = true,
},
{
["action"] = "skullsplitter",
["enabled"] = true,
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["colossus_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max & talent.juggernaut.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "rage < 40",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["enabled"] = true,
["criteria"] = "debuff.executioners_precision.stack = 2 & ! dot.ravager.remains || ! talent.executioners_precision.enabled || talent.battlelord.enabled & debuff.executioners_precision.stack > 0",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage < 90",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "rage >= 40 & talent.executioners_precision.enabled",
["action"] = "execute",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "bladestorm",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
},
["slayer_execute"] = {
{
["enabled"] = true,
["criteria"] = "active_enemies = 2",
["action"] = "sweeping_strikes",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & ! talent.bloodletting.enabled",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= 5 || debuff.colossus_smash.up",
["action"] = "avatar",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up || buff.avatar.up",
["action"] = "champions_spear",
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.remains <= gcd.max",
["action"] = "ravager",
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max * 2 & talent.juggernaut.enabled",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "( debuff.executioners_precision.stack = 2 & ( debuff.colossus_smash.remains > 4 || cooldown.colossus_smash.remains > 15 ) ) || ! talent.executioners_precision.enabled",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "rage <= 40",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.martial_prowess.stack < 2 & buff.opportunist.up & talent.opportunist.enabled & ( talent.bladestorm.enabled || talent.ravager.enabled & rage < 85 )",
["action"] = "overpower",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains < 2 || debuff.executioners_precision.stack = 2 & ! dot.ravager.remains",
["action"] = "mortal_strike",
},
{
["enabled"] = true,
["criteria"] = "rage <= 40 & buff.martial_prowess.stack < 2 & talent.fierce_followthrough.enabled",
["action"] = "overpower",
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["default"] = {
{
["enabled"] = true,
["criteria"] = "time <= 0.5 || movement.distance > 8",
["action"] = "charge",
},
{
["enabled"] = true,
["criteria"] = "gcd.remains = 0 & debuff.colossus_smash.remains > 8 || boss & fight_remains < 25",
["action"] = "potion",
},
{
["enabled"] = true,
["criteria"] = "target.debuff.casting.react",
["action"] = "pummel",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "variables",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "trinkets",
},
{
["enabled"] = true,
["criteria"] = "cooldown.mortal_strike.remains > 1.5 & rage < 50",
["action"] = "arcane_torrent",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "lights_judgment",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.down & cooldown.mortal_strike.remains",
["action"] = "bag_of_tricks",
},
{
["enabled"] = true,
["criteria"] = "fight_remains > 180 & buff.avatar.up || boss & target.time_to_die < 180 & variable.execute_phase & buff.avatar.up || boss & fight_remains < 20",
["action"] = "berserking",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "blood_fury",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "fireblood",
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "ancestral_call",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies > 2",
["list_name"] = "colossus_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & variable.execute_phase",
["list_name"] = "colossus_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "colossus_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "talent.demolish.enabled",
["list_name"] = "colossus_st",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies > 2",
["list_name"] = "slayer_aoe",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["cycle_targets"] = 1,
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & variable.execute_phase",
["list_name"] = "slayer_execute",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled & active_enemies = 2 & ! variable.execute_phase",
["list_name"] = "slayer_sweep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["strict"] = 1,
["criteria"] = "! talent.demolish.enabled",
["list_name"] = "slayer_st",
},
},
["precombat"] = {
{
["action"] = "battle_shout",
["enabled"] = true,
},
{
["toggle"] = "on",
["action"] = "battle_stance",
["enabled"] = true,
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.treacherous_transmitter",
["var_name"] = "trinket_1_exclude",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.treacherous_transmitter",
["var_name"] = "trinket_2_exclude",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.",
["criteria"] = "trinket.t1.has_use_buff & ( trinket.t1.cooldown.duration % cooldown.avatar.duration = 0 )",
["var_name"] = "trinket_1_sync",
["action"] = "variable",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_2_sync",
["criteria"] = "trinket.t2.has_use_buff & ( trinket.t2.cooldown.duration % cooldown.avatar.duration = 0 )",
["value_else"] = "0.5",
["value"] = "1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.has_use_buff || ( trinket.t1.has_stat.any_dps & ! variable.trinket_1_exclude )",
["var_name"] = "trinket_1_buffs",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.has_use_buff || ( trinket.t2.has_stat.any_dps & ! variable.trinket_2_exclude )",
["var_name"] = "trinket_2_buffs",
},
{
["enabled"] = true,
["op"] = "setif",
["action"] = "variable",
["var_name"] = "trinket_priority",
["criteria"] = "! variable.trinket_1_buffs & variable.trinket_2_buffs || variable.trinket_2_buffs & ( ( trinket.t2.cooldown.duration / trinket.t2.buff_duration ) * ( 1.5 + trinket.t2.has_use_buff ) * ( variable.trinket_2_sync ) ) > ( ( trinket.t1.cooldown.duration / trinket.t1.buff_duration ) * ( 1.5 + trinket.t1.has_use_buff ) * ( variable.trinket_1_sync ) )",
["value_else"] = "1",
["value"] = "2",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t1.is.algethar_puzzle_box",
["var_name"] = "trinket_1_manual",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "trinket.t2.is.algethar_puzzle_box",
["var_name"] = "trinket_2_manual",
},
},
["variables"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies = 1",
["description"] = "Variables",
["var_name"] = "st_planning",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "active_enemies > 1",
["var_name"] = "adds_remain",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.massacre.enabled & target.health.pct < 35 ) || target.health.pct < 20",
["var_name"] = "execute_phase",
},
},
["slayer_sweep"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains & ! buff.sweeping_strikes.up",
["action"] = "thunder_clap",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max",
["action"] = "rend",
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.sweeping_strikes.up",
["action"] = "skullsplitter",
},
{
["enabled"] = true,
["criteria"] = "buff.juggernaut.remains <= gcd.max * 2 || debuff.marked_for_execution.stack = 3 || buff.sudden_death.stack = 2 || buff.sudden_death.remains <= gcd.max * 3",
["action"] = "execute",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.colossus_smash.remains >= gcd.max * 4 || cooldown.warbreaker.remains >= gcd.max * 4 ) || debuff.colossus_smash.remains >= gcd.max * 4",
["action"] = "bladestorm",
},
{
["enabled"] = true,
["criteria"] = "buff.opportunist.up",
["action"] = "overpower",
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled & ! buff.martial_prowess.up",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "! talent.juggernaut.enabled",
["action"] = "execute",
},
{
["action"] = "slam",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "buff.bladestorm.up",
["action"] = "storm_bolt",
},
},
["trinkets"] = {
{
["enabled"] = true,
["name"] = "treacherous_transmitter",
["description"] = "Trinkets",
["criteria"] = "( variable.adds_remain || variable.st_planning ) & cooldown.avatar.remains < 3",
["action"] = "treacherous_transmitter",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "variable.trinket_1_buffs & ! variable.trinket_1_manual & ( ! buff.avatar.up & trinket.t1.cast_time > 0 || ! trinket.t1.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_2_exclude || ! trinket.t2.has_cooldown || trinket.t2.cooldown.remains || variable.trinket_priority = 1 ) || trinket.t1.buff_duration >= fight_remains & boss",
["description"] = "Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "variable.trinket_2_buffs & ! variable.trinket_2_manual & ( ! buff.avatar.up & trinket.t2.cast_time > 0 || ! trinket.t2.cast_time > 0 ) & buff.avatar.up & ( variable.trinket_1_exclude || ! trinket.t1.has_cooldown || trinket.t1.cooldown.remains || variable.trinket_priority = 2 ) || trinket.t2.buff_duration >= fight_remains & boss",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "trinket1",
["slot"] = "trinket1",
["criteria"] = "! variable.trinket_1_buffs & ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) & ! variable.trinket_1_manual & ( ! variable.trinket_1_buffs & ( trinket.t2.cooldown.remains || ! variable.trinket_2_buffs ) || ( trinket.t1.cast_time > 0 & ! buff.avatar.up || ! trinket.t1.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["description"] = "If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "! variable.trinket_2_buffs & ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) & ! variable.trinket_2_manual & ( ! variable.trinket_2_buffs & ( trinket.t1.cooldown.remains || ! variable.trinket_1_buffs ) || ( trinket.t2.cast_time > 0 & ! buff.avatar.up || ! trinket.t2.cast_time > 0 ) || cooldown.avatar.remains_expected > 20 )",
["slot"] = "trinket2",
},
{
["enabled"] = true,
["action"] = "main_hand",
["criteria"] = "! equipped.fyralath_the_dreamrender & ! equipped.bestinslots & ( ! variable.trinket_1_buffs || trinket.t1.cooldown.remains ) & ( ! variable.trinket_2_buffs || trinket.t2.cooldown.remains )",
["slot"] = "main_hand",
},
{
["enabled"] = true,
["name"] = "bestinslots",
["action"] = "bestinslots",
["criteria"] = "cooldown.avatar.remains > 20 || ( buff.avatar.up & ( ! trinket.t1.has_cooldown & ! trinket.t2.has_cooldown ) )",
},
},
["colossus_sweep"] = {
{
["enabled"] = true,
["criteria"] = "! dot.rend.remains & ! buff.sweeping_strikes.up",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= gcd.max & buff.sweeping_strikes.up",
["action"] = "rend",
},
{
["action"] = "thunderous_roar",
["enabled"] = true,
},
{
["action"] = "sweeping_strikes",
["enabled"] = true,
},
{
["action"] = "champions_spear",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.colossus_smash.ready",
["action"] = "ravager",
},
{
["action"] = "avatar",
["enabled"] = true,
},
{
["action"] = "colossus_smash",
["enabled"] = true,
},
{
["action"] = "warbreaker",
["enabled"] = true,
},
{
["action"] = "mortal_strike",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "debuff.colossus_smash.up",
["action"] = "demolish",
},
{
["action"] = "overpower",
["enabled"] = true,
},
{
["action"] = "execute",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "whirlwind",
},
{
["enabled"] = true,
["criteria"] = "talent.fervor_of_battle.enabled",
["action"] = "cleave",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 8 & buff.sweeping_strikes.down",
["action"] = "thunder_clap",
},
{
["enabled"] = true,
["criteria"] = "dot.rend.remains <= 5",
["action"] = "rend",
},
{
["action"] = "slam",
["enabled"] = true,
},
},
},
["version"] = 20250308,
["warnings"] = "The import for 'slayer_st' required some automated changes.\nLine 8: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\nLine 15: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\n\nThe import for 'colossus_aoe' required some automated changes.\nLine 11: Converted 'talent.unhinged' to 'talent.unhinged.enabled' (1x).\nLine 11: Converted 'talent.merciless_bonegrinder' to 'talent.merciless_bonegrinder.enabled' (1x).\nLine 14: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\n\nThe import for 'slayer_aoe' required some automated changes.\nLine 9: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\nLine 11: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\nLine 11: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\nLine 13: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\nLine 15: Converted 'talent.dreadnaught' to 'talent.dreadnaught.enabled' (1x).\n\nThe import for 'colossus_execute' required some automated changes.\nLine 2: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\nLine 9: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\nLine 12: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\nLine 12: Converted 'talent.battlelord' to 'talent.battlelord.enabled' (1x).\nLine 14: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\n\nThe import for 'slayer_execute' required some automated changes.\nLine 2: Converted 'talent.bloodletting' to 'talent.bloodletting.enabled' (1x).\nLine 9: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\nLine 10: Converted 'talent.executioners_precision' to 'talent.executioners_precision.enabled' (1x).\nLine 12: Converted 'talent.opportunist' to 'talent.opportunist.enabled' (1x).\nLine 12: Converted 'talent.bladestorm' to 'talent.bladestorm.enabled' (1x).\nLine 12: Converted 'talent.ravager' to 'talent.ravager.enabled' (1x).\nLine 14: Converted 'talent.fierce_followthrough' to 'talent.fierce_followthrough.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 13: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 14: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 15: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 16: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 17: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 18: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 19: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\nLine 20: Converted 'talent.demolish' to 'talent.demolish.enabled' (1x).\n\nThe import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.is.treacherous_transmitter' to 'trinket.t1.is.treacherous_transmitter' (1x).\nLine 4: Converted 'trinket.2.is.treacherous_transmitter' to 'trinket.t2.is.treacherous_transmitter' (1x).\nLine 5: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 5: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 5: Converted operations in 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t1.has_use_buff&(trinket.t1.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 6: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 6: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 6: Converted operations in 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%%cooldown.avatar.duration=0)' to 'trinket.t2.has_use_buff&(trinket.t2.cooldown.duration%cooldown.avatar.duration=0)'.\nLine 7: Converted 'trinket.1.has_use_buff' to 'trinket.t1.has_use_buff' (1x).\nLine 7: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 8: Converted 'trinket.2.has_use_buff' to 'trinket.t2.has_use_buff' (1x).\nLine 8: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration' (1x).\nLine 9: Converted 'trinket.2.cooldown.duration' to 'trinket.t2.cooldown.duration'.\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_buff.strength' (1x).\nLine 9: Converted 'trinket.2.has_buff.strength' to 'trinket.t2.has_use_buff' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration' (1x).\nLine 9: Converted 'trinket.1.cooldown.duration' to 'trinket.t1.cooldown.duration'.\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 9: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_buff.strength' (1x).\nLine 9: Converted 'trinket.1.has_buff.strength' to 'trinket.t1.has_use_buff' (1x).\nLine 9: Converted operations in '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration%trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration%trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))' to '!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.t2.cooldown.duration/trinket.t2.buff_duration)*(1.5+trinket.t2.has_use_buff)*(variable.trinket_2_sync))>((trinket.t1.cooldown.duration/trinket.t1.buff_duration)*(1.5+trinket.t1.has_use_buff)*(variable.trinket_1_sync))'.\nLine 10: Converted 'trinket.1.is.algethar_puzzle_box' to 'trinket.t1.is.algethar_puzzle_box' (1x).\nLine 11: Converted 'trinket.2.is.algethar_puzzle_box' to 'trinket.t2.is.algethar_puzzle_box' (1x).\n\nThe import for 'slayer_sweep' required some automated changes.\nLine 17: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 18: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 19: Converted 'talent.juggernaut' to 'talent.juggernaut.enabled' (1x).\n\nThe import for 'trinkets' required some automated changes.\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 2: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 2: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.proc.any_dps.duration' (1x).\nLine 2: Converted 'trinket.1.proc.any_dps.duration' to 'trinket.t1.buff_duration' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 3: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 3: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.proc.any_dps.duration' (1x).\nLine 3: Converted 'trinket.2.proc.any_dps.duration' to 'trinket.t2.buff_duration' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 4: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 4: Converted 'trinket.1.cast_time' to 'trinket.t1.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 5: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 5: Converted 'trinket.2.cast_time' to 'trinket.t2.cast_time' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains' (1x).\nLine 6: Converted 'trinket.1.cooldown.remains' to 'trinket.t1.cooldown.remains'.\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains' (1x).\nLine 6: Converted 'trinket.2.cooldown.remains' to 'trinket.t2.cooldown.remains'.\nLine 7: Converted 'trinket.1.has_cooldown' to 'trinket.t1.has_cooldown' (1x).\nLine 7: Converted 'trinket.2.has_cooldown' to 'trinket.t2.has_cooldown' (1x).\n\nThe import for 'colossus_sweep' required some automated changes.\nLine 14: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\nLine 15: Converted 'talent.fervor_of_battle' to 'talent.fervor_of_battle.enabled' (1x).\n\nImported 12 action lists.\n",
["profile"] = "actions.precombat+=/battle_shout\nactions.precombat+=/battle_stance,toggle=on\nactions.precombat+=/variable,name=trinket_1_exclude,value=trinket.1.is.treacherous_transmitter\nactions.precombat+=/variable,name=trinket_2_exclude,value=trinket.2.is.treacherous_transmitter\n# Evaluates a trinkets cooldown, divided by avatar. If it's value has no remainder return 1, else return 0.5.\nactions.precombat+=/variable,name=trinket_1_sync,op=setif,value=1,value_else=0.5,condition=trinket.1.has_use_buff&(trinket.1.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_2_sync,op=setif,value=1,value_else=0.5,condition=trinket.2.has_use_buff&(trinket.2.cooldown.duration%%cooldown.avatar.duration=0)\nactions.precombat+=/variable,name=trinket_1_buffs,value=trinket.1.has_use_buff||(trinket.1.has_stat.any_dps&!variable.trinket_1_exclude)\nactions.precombat+=/variable,name=trinket_2_buffs,value=trinket.2.has_use_buff||(trinket.2.has_stat.any_dps&!variable.trinket_2_exclude)\nactions.precombat+=/variable,name=trinket_priority,op=setif,value=2,value_else=1,condition=!variable.trinket_1_buffs&variable.trinket_2_buffs||variable.trinket_2_buffs&((trinket.2.cooldown.duration%trinket.2.proc.any_dps.duration)*(1.5+trinket.2.has_buff.strength)*(variable.trinket_2_sync))>((trinket.1.cooldown.duration%trinket.1.proc.any_dps.duration)*(1.5+trinket.1.has_buff.strength)*(variable.trinket_1_sync))\nactions.precombat+=/variable,name=trinket_1_manual,value=trinket.1.is.algethar_puzzle_box\nactions.precombat+=/variable,name=trinket_2_manual,value=trinket.2.is.algethar_puzzle_box\n\nactions+=/charge,if=time<=0.5||movement.distance>8\nactions+=/potion,if=gcd.remains=0&debuff.colossus_smash.remains>8||boss&fight_remains<25\nactions+=/pummel,if=target.debuff.casting.react\nactions+=/call_action_list,name=variables\nactions+=/call_action_list,name=trinkets\nactions+=/arcane_torrent,if=cooldown.mortal_strike.remains>1.5&rage<50\nactions+=/lights_judgment,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/bag_of_tricks,if=debuff.colossus_smash.down&cooldown.mortal_strike.remains\nactions+=/berserking,if=fight_remains>180&buff.avatar.up||boss&target.time_to_die<180&variable.execute_phase&buff.avatar.up||boss&fight_remains<20\nactions+=/blood_fury,if=debuff.colossus_smash.up\nactions+=/fireblood,if=debuff.colossus_smash.up\nactions+=/ancestral_call,if=debuff.colossus_smash.up\n## actions+=/invoke_external_buff,name=power_infusion,if=debuff.colossus_smash.up&fight_remains>=135||variable.execute_phase&buff.avatar.up||fight_remains<=25\nactions+=/run_action_list,name=colossus_aoe,strict=1,if=talent.demolish&active_enemies>2\nactions+=/run_action_list,name=colossus_execute,cycle_targets=1,strict=1,if=talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=colossus_sweep,strict=1,if=talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=colossus_st,strict=1,if=talent.demolish\nactions+=/run_action_list,name=slayer_aoe,strict=1,if=!talent.demolish&active_enemies>2\nactions+=/run_action_list,name=slayer_execute,cycle_targets=1,strict=1,if=!talent.demolish&variable.execute_phase\nactions+=/run_action_list,name=slayer_sweep,strict=1,if=!talent.demolish&active_enemies=2&!variable.execute_phase\nactions+=/run_action_list,name=slayer_st,strict=1,if=!talent.demolish\n\nactions.colossus_aoe+=/cleave,if=!dot.deep_wounds.remains\nactions.colossus_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.colossus_aoe+=/thunderous_roar\nactions.colossus_aoe+=/avatar\nactions.colossus_aoe+=/sweeping_strikes\nactions.colossus_aoe+=/ravager\nactions.colossus_aoe+=/warbreaker\nactions.colossus_aoe+=/champions_spear\nactions.colossus_aoe+=/colossus_smash\nactions.colossus_aoe+=/cleave\nactions.colossus_aoe+=/bladestorm,if=talent.unhinged||talent.merciless_bonegrinder\nactions.colossus_aoe+=/thunder_clap,if=dot.rend.remains<5\nactions.colossus_aoe+=/demolish,if=buff.colossal_might.stack=10&(debuff.colossus_smash.remains>=2||cooldown.colossus_smash.remains>=7)\nactions.colossus_aoe+=/overpower,if=talent.dreadnaught\nactions.colossus_aoe+=/mortal_strike\nactions.colossus_aoe+=/overpower\nactions.colossus_aoe+=/thunder_clap\nactions.colossus_aoe+=/skullsplitter\nactions.colossus_aoe+=/execute\nactions.colossus_aoe+=/bladestorm\nactions.colossus_aoe+=/whirlwind\n\nactions.colossus_execute+=/sweeping_strikes,if=active_enemies=2\nactions.colossus_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.colossus_execute+=/thunderous_roar\nactions.colossus_execute+=/champions_spear\nactions.colossus_execute+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.colossus_execute+=/avatar\nactions.colossus_execute+=/colossus_smash\nactions.colossus_execute+=/warbreaker\nactions.colossus_execute+=/execute,if=buff.juggernaut.remains<=gcd&talent.juggernaut\nactions.colossus_execute+=/skullsplitter,if=rage<40\nactions.colossus_execute+=/demolish,if=debuff.colossus_smash.up\nactions.colossus_execute+=/mortal_strike,if=debuff.executioners_precision.stack=2&!dot.ravager.remains||!talent.executioners_precision||talent.battlelord&debuff.executioners_precision.stack>0\nactions.colossus_execute+=/overpower,if=rage<90\nactions.colossus_execute+=/execute,if=rage>=40&talent.executioners_precision\nactions.colossus_execute+=/overpower\nactions.colossus_execute+=/bladestorm\nactions.colossus_execute+=/execute\n\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd\nactions.colossus_st+=/thunderous_roar\nactions.colossus_st+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.colossus_st+=/champions_spear\nactions.colossus_st+=/avatar,if=raid_event.adds.in>15\nactions.colossus_st+=/colossus_smash\nactions.colossus_st+=/warbreaker\nactions.colossus_st+=/mortal_strike\nactions.colossus_st+=/demolish\nactions.colossus_st+=/skullsplitter\nactions.colossus_st+=/execute\nactions.colossus_st+=/overpower\nactions.colossus_st+=/rend,if=dot.rend.remains<=gcd*5\nactions.colossus_st+=/slam\n\nactions.colossus_sweep+=/thunder_clap,if=!dot.rend.remains&!buff.sweeping_strikes.up\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=gcd&buff.sweeping_strikes.up\nactions.colossus_sweep+=/thunderous_roar\nactions.colossus_sweep+=/sweeping_strikes\nactions.colossus_sweep+=/champions_spear\nactions.colossus_sweep+=/ravager,if=cooldown.colossus_smash.ready\nactions.colossus_sweep+=/avatar\nactions.colossus_sweep+=/colossus_smash\nactions.colossus_sweep+=/warbreaker\nactions.colossus_sweep+=/mortal_strike\nactions.colossus_sweep+=/demolish,if=debuff.colossus_smash.up\nactions.colossus_sweep+=/overpower\nactions.colossus_sweep+=/execute\nactions.colossus_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.colossus_sweep+=/cleave,if=talent.fervor_of_battle\nactions.colossus_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.colossus_sweep+=/rend,if=dot.rend.remains<=5\nactions.colossus_sweep+=/slam\n\nactions.slayer_aoe+=/thunder_clap,if=!dot.rend.remains\nactions.slayer_aoe+=/thunderous_roar\nactions.slayer_aoe+=/avatar\nactions.slayer_aoe+=/champions_spear\nactions.slayer_aoe+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.slayer_aoe+=/warbreaker\nactions.slayer_aoe+=/colossus_smash\nactions.slayer_aoe+=/cleave\nactions.slayer_aoe+=/execute,if=buff.sudden_death.up&buff.imminent_demise.stack<3||buff.juggernaut.remains<3&talent.juggernaut\nactions.slayer_aoe+=/bladestorm\nactions.slayer_aoe+=/overpower,if=buff.sweeping_strikes.up&(buff.opportunist.up||talent.dreadnaught&!talent.juggernaut)\nactions.slayer_aoe+=/mortal_strike,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/execute,if=buff.sweeping_strikes.up&debuff.executioners_precision.stack<2&talent.executioners_precision||debuff.marked_for_execution.up\nactions.slayer_aoe+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_aoe+=/overpower,if=buff.opportunist.up||talent.dreadnaught\nactions.slayer_aoe+=/mortal_strike\nactions.slayer_aoe+=/overpower\nactions.slayer_aoe+=/thunder_clap\nactions.slayer_aoe+=/execute\nactions.slayer_aoe+=/whirlwind\nactions.slayer_aoe+=/skullsplitter\nactions.slayer_aoe+=/slam\nactions.slayer_aoe+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_execute+=/sweeping_strikes,if=active_enemies=2\nactions.slayer_execute+=/rend,if=dot.rend.remains<=gcd&!talent.bloodletting\nactions.slayer_execute+=/thunderous_roar\nactions.slayer_execute+=/avatar,if=cooldown.colossus_smash.remains<=5||debuff.colossus_smash.up\nactions.slayer_execute+=/champions_spear,if=debuff.colossus_smash.up||buff.avatar.up\nactions.slayer_execute+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.slayer_execute+=/warbreaker\nactions.slayer_execute+=/colossus_smash\nactions.slayer_execute+=/execute,if=buff.juggernaut.remains<=gcd*2&talent.juggernaut\nactions.slayer_execute+=/bladestorm,if=(debuff.executioners_precision.stack=2&(debuff.colossus_smash.remains>4||cooldown.colossus_smash.remains>15))||!talent.executioners_precision\nactions.slayer_execute+=/skullsplitter,if=rage<=40\nactions.slayer_execute+=/overpower,if=buff.martial_prowess.stack<2&buff.opportunist.up&talent.opportunist&(talent.bladestorm||talent.ravager&rage<85)\nactions.slayer_execute+=/mortal_strike,if=dot.rend.remains<2||debuff.executioners_precision.stack=2&!dot.ravager.remains\nactions.slayer_execute+=/overpower,if=rage<=40&buff.martial_prowess.stack<2&talent.fierce_followthrough\nactions.slayer_execute+=/execute\nactions.slayer_execute+=/overpower\nactions.slayer_execute+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_st+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_st+=/thunderous_roar\nactions.slayer_st+=/avatar,if=cooldown.colossus_smash.remains<=5||debuff.colossus_smash.up\nactions.slayer_st+=/champions_spear,if=debuff.colossus_smash.up||buff.avatar.up\nactions.slayer_st+=/ravager,if=cooldown.colossus_smash.remains<=gcd\nactions.slayer_st+=/colossus_smash\nactions.slayer_st+=/warbreaker\nactions.slayer_st+=/execute,if=buff.juggernaut.remains<=gcd*2&talent.juggernaut||buff.sudden_death.stack=2||buff.sudden_death.remains<=gcd*3||debuff.marked_for_execution.stack=3\nactions.slayer_st+=/overpower,if=buff.opportunist.up\nactions.slayer_st+=/mortal_strike\nactions.slayer_st+=/bladestorm,if=(cooldown.colossus_smash.remains>=gcd*4||cooldown.warbreaker.remains>=gcd*4)||debuff.colossus_smash.remains>=gcd*4\nactions.slayer_st+=/skullsplitter\nactions.slayer_st+=/overpower\nactions.slayer_st+=/rend,if=dot.rend.remains<=8\nactions.slayer_st+=/execute,if=!talent.juggernaut\nactions.slayer_st+=/cleave\nactions.slayer_st+=/slam\nactions.slayer_st+=/storm_bolt,if=buff.bladestorm.up\n\nactions.slayer_sweep+=/thunder_clap,if=!dot.rend.remains&!buff.sweeping_strikes.up\nactions.slayer_sweep+=/thunderous_roar\nactions.slayer_sweep+=/sweeping_strikes\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=gcd\nactions.slayer_sweep+=/champions_spear\nactions.slayer_sweep+=/avatar\nactions.slayer_sweep+=/colossus_smash\nactions.slayer_sweep+=/warbreaker\nactions.slayer_sweep+=/skullsplitter,if=buff.sweeping_strikes.up\nactions.slayer_sweep+=/execute,if=buff.juggernaut.remains<=gcd*2||debuff.marked_for_execution.stack=3||buff.sudden_death.stack=2||buff.sudden_death.remains<=gcd*3\nactions.slayer_sweep+=/bladestorm,if=(cooldown.colossus_smash.remains>=gcd*4||cooldown.warbreaker.remains>=gcd*4)||debuff.colossus_smash.remains>=gcd*4\nactions.slayer_sweep+=/overpower,if=buff.opportunist.up\nactions.slayer_sweep+=/mortal_strike\nactions.slayer_sweep+=/overpower\nactions.slayer_sweep+=/thunder_clap,if=dot.rend.remains<=8&buff.sweeping_strikes.down\nactions.slayer_sweep+=/rend,if=dot.rend.remains<=5\nactions.slayer_sweep+=/cleave,if=talent.fervor_of_battle&!buff.martial_prowess.up\nactions.slayer_sweep+=/whirlwind,if=talent.fervor_of_battle\nactions.slayer_sweep+=/execute,if=!talent.juggernaut\nactions.slayer_sweep+=/slam\nactions.slayer_sweep+=/storm_bolt,if=buff.bladestorm.up\n\n# Trinkets\n## actions.trinkets+=/do_treacherous_transmitter_task\nactions.trinkets+=/use_item,name=treacherous_transmitter,if=(variable.adds_remain||variable.st_planning)&cooldown.avatar.remains<3\n# Trinkets The trinket with the highest estimated value, will be used first and paired with Avatar.\nactions.trinkets+=/use_item,slot=trinket1,if=variable.trinket_1_buffs&!variable.trinket_1_manual&(!buff.avatar.up&trinket.1.cast_time>0||!trinket.1.cast_time>0)&buff.avatar.up&(variable.trinket_2_exclude||!trinket.2.has_cooldown||trinket.2.cooldown.remains||variable.trinket_priority=1)||trinket.1.proc.any_dps.duration>=fight_remains&boss\nactions.trinkets+=/use_item,slot=trinket2,if=variable.trinket_2_buffs&!variable.trinket_2_manual&(!buff.avatar.up&trinket.2.cast_time>0||!trinket.2.cast_time>0)&buff.avatar.up&(variable.trinket_1_exclude||!trinket.1.has_cooldown||trinket.1.cooldown.remains||variable.trinket_priority=2)||trinket.2.proc.any_dps.duration>=fight_remains&boss\n# If only one on use trinket provides a buff, use the other on cooldown. Or if neither trinket provides a buff, use both on cooldown.\nactions.trinkets+=/use_item,slot=trinket1,if=!variable.trinket_1_buffs&(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)&!variable.trinket_1_manual&(!variable.trinket_1_buffs&(trinket.2.cooldown.remains||!variable.trinket_2_buffs)||(trinket.1.cast_time>0&!buff.avatar.up||!trinket.1.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,slot=trinket2,if=!variable.trinket_2_buffs&(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)&!variable.trinket_2_manual&(!variable.trinket_2_buffs&(trinket.1.cooldown.remains||!variable.trinket_1_buffs)||(trinket.2.cast_time>0&!buff.avatar.up||!trinket.2.cast_time>0)||cooldown.avatar.remains_expected>20)\nactions.trinkets+=/use_item,slot=main_hand,if=!equipped.fyralath_the_dreamrender&!equipped.bestinslots&(!variable.trinket_1_buffs||trinket.1.cooldown.remains)&(!variable.trinket_2_buffs||trinket.2.cooldown.remains)\nactions.trinkets+=/use_item,name=bestinslots,if=cooldown.avatar.remains>20||(buff.avatar.up&(!trinket.1.has_cooldown&!trinket.2.has_cooldown))\n\n# Variables\nactions.variables+=/variable,name=st_planning,value=active_enemies=1\nactions.variables+=/variable,name=adds_remain,value=active_enemies>1\nactions.variables+=/variable,name=execute_phase,value=(talent.massacre.enabled&target.health.pct<35)||target.health.pct<20",
["spec"] = 71,
},
["Outlaw"] = {
["source"] = "https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/rogue_outlaw.simc",
["builtIn"] = true,
["date"] = 20250425,
["author"] = "SimC",
["desc"] = "2025-04-25: SimC Update\n2025-04-12: SimC Update\n2025-04-06: SimC Update - No more Coup de Grace Bug\n2025-03-23: SimC Update\n2025-03-15: SimC update\n2025-01-02: Apply missed SimC updates (thanks IIeTpoc).\n2024-10-23: 11.0.5\n2024-09-08, 09-10, 09-15: SimC update\n2024-09-03: Poisons\n2024-08-25, 09-01: SimC rtb_reroll tweak\n2024-08-22: Respect LD Opener setting\n2024-08-15: Major revisions from SimC\n2024-08-09: Update finisher conditions from SimC\n2024-08-06: Respect Vanish CD when considering BtE with Crackshot\n2024-07-28: The War Within",
["lists"] = {
["finish"] = {
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Finishers",
["for_next"] = 1,
},
{
["action"] = "killing_spree",
["enabled"] = true,
},
{
["action"] = "coup_de_grace",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "Use Between the Eyes outside of Stealth to maintain the buff, or with Ruthless Precision active, or to proc Greenskins Wickers if not active. Trickster builds can also send BtE on cooldown.",
["criteria"] = "( buff.ruthless_precision.up || buff.between_the_eyes.remains < 4 || ! talent.mean_streak.enabled ) & ( ! buff.greenskins_wickers.up || ! talent.greenskins_wickers.enabled )",
},
{
["action"] = "cold_blood",
["enabled"] = true,
},
{
["action"] = "dispatch",
["enabled"] = true,
},
},
["vanish_usage_off_meta"] = {
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Flex Vanish usage for builds lacking one of the mandatory stealth talents. APL support for these builds is considered limited.",
["criteria"] = "talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & ! talent.crackshot.enabled & buff.adrenaline_rush.up & ( variable.ambush_condition || ! talent.hidden_opportunity.enabled ) & ( ! cooldown.between_the_eyes.ready & buff.ruthless_precision.up || buff.ruthless_precision.down || buff.adrenaline_rush.remains < 3 )",
},
{
["enabled"] = true,
["criteria"] = "! talent.underhanded_upper_hand.enabled & talent.crackshot.enabled & variable.finish_condition",
["action"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & talent.hidden_opportunity.enabled & ! buff.audacity.up & buff.opportunity.stack < buff.opportunity.max_stack & variable.ambush_condition",
["action"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & talent.fateful_ending.enabled & ( ! buff.fatebound_lucky_coin.up & ( buff.fatebound_coin_tails.stack >= 5 || buff.fatebound_coin_heads.stack >= 5 ) || buff.fatebound_lucky_coin.up & ! cooldown.between_the_eyes.ready )",
["action"] = "vanish",
},
{
["enabled"] = true,
["criteria"] = "! talent.underhanded_upper_hand.enabled & ! talent.crackshot.enabled & ! talent.hidden_opportunity.enabled & ! talent.fateful_ending.enabled & talent.take_em_by_surprise.enabled & ! buff.take_em_by_surprise.up",
["action"] = "vanish",
},
},
["default"] = {
{
["enabled"] = true,
["description"] = "Restealth if possible (no vulnerable enemies in combat).",
["action"] = "stealth",
},
{
["enabled"] = true,
["description"] = "Interrupt on cooldown to allow simming interactions with that.",
["action"] = "kick",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( talent.hidden_opportunity.enabled || combo_points.deficit >= 2 + talent.improved_ambush.enabled + buff.broadside.up ) & energy >= 50",
["var_name"] = "ambush_condition",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "combo_points >= cp_max_spend - 1 - ( stealthed.all & talent.crackshot.enabled || ( talent.hand_of_fate.enabled || talent.flawless_form.enabled ) & talent.hidden_opportunity.enabled & ( buff.audacity.up || buff.opportunity.up ) )",
["description"] = "Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot. With the hero trees, Hidden Opportunity builds also finish at -2 if Audacity or Opportunity is active.",
["var_name"] = "finish_condition",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cds",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "High priority stealth list, will fall through if no conditions are met.",
["strict"] = 1,
["criteria"] = "stealthed.all",
["list_name"] = "stealth",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["strict"] = 1,
["criteria"] = "variable.finish_condition",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "build",
},
{
["enabled"] = true,
["criteria"] = "energy.base_deficit >= 15 + energy.regen",
["action"] = "arcane_torrent",
},
{
["action"] = "arcane_pulse",
["enabled"] = true,
},
{
["action"] = "lights_judgment",
["enabled"] = true,
},
{
["action"] = "bag_of_tricks",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "apply_poison",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "imperfect_ascendancy_serum",
["action"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "stealth",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["precombat_seconds"] = "2",
["criteria"] = "talent.improved_adrenaline_rush.enabled & talent.keep_it_rolling.enabled & talent.loaded_dice.enabled & buff.adrenaline_rush.down",
["description"] = "Builds with Keep it Rolling+Loaded Dice prepull Adrenaline Rush before Roll the Bones to consume Loaded Dice immediately instead of on the next pandemic roll.",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["criteria"] = "buff.adrenaline_rush.down",
["precombat_seconds"] = "2",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["criteria"] = "talent.improved_adrenaline_rush.enabled & buff.adrenaline_rush.down",
["precombat_seconds"] = "1",
},
},
["stealth"] = {
{
["enabled"] = true,
["action"] = "cold_blood",
["description"] = "Stealth",
["criteria"] = "variable.finish_condition",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Ensure Crackshot BtE is not skipped because of low energy.",
["for_next"] = 1,
},
{
["enabled"] = true,
["action"] = "between_the_eyes",
["description"] = "High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld.",
["criteria"] = "variable.finish_condition & talent.crackshot.enabled & ( ! buff.shadowmeld.up || stealthed.rogue )",
},
{
["enabled"] = true,
["criteria"] = "variable.finish_condition",
["action"] = "dispatch",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and 1 CP, or with Greenskins active.",
["criteria"] = "talent.crackshot.enabled & talent.fan_the_hammer.rank >= 2 & buff.opportunity.stack >= 6 & ( buff.broadside.up & combo_points <= 1 || buff.greenskins_wickers.up )",
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
},
["cds"] = {
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["description"] = "Cooldowns  Maintain Adrenaline Rush if it is not active. Use at low CPs with Improved AR.",
["criteria"] = "! buff.adrenaline_rush.up & ( ! variable.finish_condition || ! talent.improved_adrenaline_rush.enabled )",
},
{
["enabled"] = true,
["action"] = "adrenaline_rush",
["description"] = "If using Improved AR, recast AR if it is already active at low CPs.",
["criteria"] = "buff.adrenaline_rush.up & talent.improved_adrenaline_rush.enabled & combo_points <= 2",
},
{
["enabled"] = true,
["action"] = "ghostly_strike",
["description"] = "High priority Ghostly Strike as it is off-gcd. 1 FTH builds prefer to not use it at max CPs.",
["criteria"] = "combo_points < cp_max_spend || talent.fan_the_hammer.rank > 1",
},
{
["enabled"] = true,
["action"] = "sprint",
["description"] = "Sprint to further benefit from Scroll of Momentum trinket.",
["criteria"] = "( trinket.t1.is.scroll_of_momentum || trinket.t2.is.scroll_of_momentum ) & buff.full_momentum.up",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "Maintain Blade Flurry on 2+ targets.",
["criteria"] = "spell_targets >= 2 & buff.blade_flurry.remains < gcd.max",
},
{
["enabled"] = true,
["action"] = "keep_it_rolling",
["description"] = "With a natural 5 buff roll, use Keep it Rolling when you obtain the remaining buff from Count the Odds.",
["criteria"] = "rtb_buffs_normal >= 5 & rtb_buffs = 6",
},
{
["enabled"] = true,
["action"] = "keep_it_rolling",
["description"] = "Without a natural 5 buff roll, use Keep it Rolling at any 4+ buffs.",
["criteria"] = "rtb_buffs >= 4 & rtb_buffs_normal <= 2",
},
{
["enabled"] = true,
["action"] = "keep_it_rolling",
["description"] = "Without a natural 5 buff roll, use Keep it Rolling at 3 buffs if you have the combination of Ruthless Precision + Broadside + True Bearing.",
["criteria"] = "rtb_buffs >= 3 & rtb_buffs_normal <= 2 & buff.broadside.up & buff.ruthless_precision.up & buff.true_bearing.up",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( buff.broadside.remains > 39 ) + ( buff.ruthless_precision.remains > 39 ) + ( buff.true_bearing.remains > 39 ) + ( buff.grand_melee.remains > 39 ) + ( buff.buried_treasure.remains > 39 ) + ( buff.skull_and_crossbones.remains > 39 )",
["description"] = "Variable that counts how many buffs are ahead of RtB's pandemic range, which is only possible by using KIR.",
["var_name"] = "buffs_above_pandemic",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["description"] = "Maintain Roll the Bones: cast without any buffs.",
["criteria"] = "rtb_buffs = 0",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["description"] = "With TWW2 set, recast Roll the Bones if we will roll away between 0-1 buffs. If KIR was recently used on a natural 5 buff, then wait until all buffs are below around 41s remaining.",
["criteria"] = "set_bonus.tww2_4pc & rtb_buffs_will_lose <= 1 & ( variable.buffs_above_pandemic < 5 || rtb_buffs_max_remains < 42 )",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["description"] = "With TWW2 set, recast Roll the Bones with at most 2 buffs active regardless of duration. Supercharger builds will also roll if we will lose between 0-4 buffs, but KIR Supercharger builds wait until they are all below 11s remaining.",
["criteria"] = "set_bonus.tww2_4pc & ( rtb_buffs <= 2 || ( rtb_buffs_max_remains < 11 || ! talent.keep_it_rolling.enabled ) & rtb_buffs_will_lose < 5 & talent.supercharger.enabled )",
},
{
["enabled"] = true,
["action"] = "roll_the_bones",
["description"] = "Without TWW2 set or Sleight of Hand, recast Roll the Bones to override 1 buff into 2 buffs with Loaded Dice, or reroll any 2 buffs with Loaded Dice+Supercharger. Hidden Opportunity builds can also reroll 2 buffs with Loaded Dice to try for BS/RP/TB.",
["criteria"] = "! set_bonus.tww2_4pc & ( rtb_buffs_will_lose <= buff.loaded_dice.up || talent.supercharger.enabled & buff.loaded_dice.up & rtb_buffs <= 2 || talent.hidden_opportunity.enabled & buff.loaded_dice.up & rtb_buffs <= 2 & ! buff.broadside.up & ! buff.ruthless_precision.up & ! buff.true_bearing.up )",
},
{
["enabled"] = true,
["name"] = "imperfect_ascendancy_serum",
["description"] = "Trinkets that should not be used during stealth and have higher priority than entering stealth.",
["criteria"] = "! stealthed.all || boss & fight_remains <= 22",
["action"] = "imperfect_ascendancy_serum",
},
{
["enabled"] = true,
["action"] = "mad_queens_mandate",
["criteria"] = "! stealthed.all || boss & fight_remains <= 5",
["name"] = "mad_queens_mandate",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "If necessary, standard builds prioritize using Vanish at any CP to prevent Adrenaline Rush downtime.",
["criteria"] = "talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & buff.adrenaline_rush.up & ! stealthed.all & buff.adrenaline_rush.remains < 2 & cooldown.adrenaline_rush.remains > 30",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "If not at risk of losing Adrenaline Rush, run finishers to use Killing Spree or Coup de Grace as a higher priority than Vanish.",
["criteria"] = "! stealthed.all & ( cooldown.killing_spree.ready & talent.killing_spree.enabled || buff.escalating_blade.stack >= 4 ) & variable.finish_condition",
["list_name"] = "finish",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "If not at risk of losing Adrenaline Rush, call flexible Vanish rules to be used at finisher CPs.",
["criteria"] = "! stealthed.all & talent.crackshot.enabled & talent.underhanded_upper_hand.enabled & talent.subterfuge.enabled & buff.adrenaline_rush.up & variable.finish_condition",
["list_name"] = "vanish_usage",
},
{
["enabled"] = true,
["criteria"] = "! stealthed.all & ( ! talent.underhanded_upper_hand.enabled || ! talent.crackshot.enabled || ! talent.subterfuge.enabled )",
["action"] = "call_action_list",
["list_name"] = "vanish_usage_off_meta",
},
{
["enabled"] = true,
["action"] = "shadowmeld",
["description"] = "Generic catch-all for Shadowmeld. Technically, usage in DungeonSlice or DungeonRoute sims could mirror Vanish usage on packs.",
["criteria"] = "variable.finish_condition & ! cooldown.vanish.ready & ! stealthed.all",
},
{
["enabled"] = true,
["action"] = "blade_rush",
["description"] = "Use Blade Rush at minimal energy outside of stealth.",
["criteria"] = "energy.base_time_to_max > 4 & ! stealthed.all",
},
{
["enabled"] = true,
["criteria"] = "buff.bloodlust.up || boss & fight_remains < 30 || buff.adrenaline_rush.up",
["action"] = "potion",
},
{
["action"] = "blood_fury",
["enabled"] = true,
},
{
["action"] = "berserking",
["enabled"] = true,
},
{
["action"] = "fireblood",
["enabled"] = true,
},
{
["action"] = "ancestral_call",
["enabled"] = true,
},
{
["enabled"] = true,
["name"] = "junkmaestros_mega_magnet",
["description"] = "Let the magnet trinket stack up just so it does not disrupt a 2nd on-use trinket.",
["criteria"] = "buff.between_the_eyes.up & buff.junkmaestros_mega_magnet.stack > 25 || boss & fight_remains < 5",
["action"] = "junkmaestros_mega_magnet",
},
{
["enabled"] = true,
["criteria"] = "buff.between_the_eyes.up || trinket.t1.has_stat.any_dps || boss & fight_remains <= 20",
["description"] = "Default conditions for usable items.",
["slots"] = "trinket1",
["action"] = "trinket1",
},
{
["enabled"] = true,
["action"] = "trinket2",
["criteria"] = "buff.between_the_eyes.up || trinket.t2.has_stat.any_dps || boss & fight_remains <= 20",
["slots"] = "trinket2",
},
},
["vanish_usage"] = {
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Flex Vanish usage for standard builds.  Without Killing Spree, attempt to hold Vanish for when BtE is on cooldown and Ruthless Precision is active. Also with Keep it Rolling, hold Vanish if we haven't done the first roll after KIR yet.",
["criteria"] = "! talent.killing_spree.enabled & ! cooldown.between_the_eyes.ready & buff.ruthless_precision.remains > 4 & ( cooldown.keep_it_rolling.remains > 150 & rtb_buffs_normal > 0 || ! talent.keep_it_rolling.enabled )",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Supercharger builds that do not use Killing Spree should also Vanish if Supercharger becomes active.",
["criteria"] = "! talent.killing_spree.enabled & supercharge_1",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Builds with Killing Spree can freely Vanish if KS is not up soon.",
["criteria"] = "cooldown.killing_spree.remains > 30",
},
{
["enabled"] = true,
["action"] = "vanish",
["description"] = "Vanish if about to cap on charges or sim duration is ending.",
["criteria"] = "cooldown.vanish.full_recharge_time < 15 || boss & fight_remains < 8",
},
},
["build"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.blade_flurry.ready & talent.deft_maneuvers.enabled & spell_targets >= 5 & ( combo_points <= 2 - buff.broadside.up || ! buff.adrenaline_rush.up )",
["description"] = "Builders  With Deft Maneuvers, build CPs with Blade Flurry at 5+ targets, only at 2 CPs or lower (1 CP with Broadside) unless AR isn't active.",
["var_name"] = "deft_condition",
},
{
["enabled"] = true,
["action"] = "ambush",
["description"] = "High priority Ambush for Hidden Opportunity builds.",
["criteria"] = "talent.hidden_opportunity.enabled & buff.audacity.up",
},
{
["enabled"] = true,
["action"] = "sinister_strike",
["description"] = "Trickster builds should prioritize Sinister Strike during Disorienting Strikes. HO builds prefer to do this only at 3 Escalating Blade stacks and not at max Opportunity stacks.",
["criteria"] = "buff.disorienting_strikes.up & ! stealthed.all & ( buff.escalating_blade.stack > 2 & buff.opportunity.stack < buff.opportunity.max_stack || ! talent.hidden_opportunity.enabled ) & buff.escalating_blade.stack < 4",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available.",
["criteria"] = "talent.fan_the_hammer.enabled & talent.audacity.enabled & talent.hidden_opportunity.enabled & buff.opportunity.up & ! buff.audacity.up",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "With Fatebound or 1 rank in Fan the Hammer, and without Hidden Opportunity, build CP with Blade Flurry as a higher priority than Opportunity procs.",
["criteria"] = "variable.deft_condition & ( talent.fan_the_hammer.rank = 1 || ! talent.nimble_flurry.enabled & ! talent.surprising_strikes.enabled )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With 2 ranks in Fan the Hammer, consume Opportunity as if at max stacks or if it will expire.",
["criteria"] = "talent.fan_the_hammer.rank = 2 & buff.opportunity.up & ( buff.opportunity.stack >= buff.opportunity.max_stack || buff.opportunity.remains < 2 )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum.",
["criteria"] = "talent.fan_the_hammer.enabled & buff.opportunity.up & ( combo_points.deficit >= ( 1 + ( talent.quick_draw.enabled + buff.broadside.up ) * ( talent.fan_the_hammer.rank + 1 ) ) || combo_points <= talent.ruthlessness.enabled )",
},
{
["enabled"] = true,
["action"] = "pistol_shot",
["description"] = "If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw.",
["criteria"] = "! talent.fan_the_hammer.enabled & buff.opportunity.up & ( energy.base_deficit > energy.regen * 1.5 || combo_points.deficit <= 1 + buff.broadside.up || talent.quick_draw.enabled || talent.audacity.enabled & ! buff.audacity.up )",
},
{
["enabled"] = true,
["action"] = "blade_flurry",
["description"] = "With Hidden Opportunity or 2 ranks in Fan the Hammer, building CPs with Blade Flurry is lower priority than Opportunity procs and Ambush.",
["criteria"] = "variable.deft_condition",
},
{
["enabled"] = true,
["action"] = "coup_de_grace",
["description"] = "Use Coup de Grace at low CP if Sinister Strike would otherwise be used.",
["criteria"] = "! stealthed.all",
},
{
["enabled"] = true,
["action"] = "pool_resource",
["description"] = "Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds.",
["for_next"] = 1,
},
{
["enabled"] = true,
["criteria"] = "talent.hidden_opportunity.enabled",
["action"] = "ambush",
},
{
["action"] = "sinister_strike",
["enabled"] = true,
},
},
},
["version"] = 20250425,
["warnings"] = "The import for 'vanish_usage' required some automated changes.\nLine 2: Converted 'buff.supercharge_1.up' to 'supercharge_1' (1x).\nThe following auras were used in the action list but were not found in the addon database:\n - supercharge_1\n\nThe import for 'cds' required some automated changes.\nLine 4: Converted 'trinket.1.is.scroll_of_momentum' to 'trinket.t1.is.scroll_of_momentum' (1x).\nLine 4: Converted 'trinket.2.is.scroll_of_momentum' to 'trinket.t2.is.scroll_of_momentum' (1x).\nLine 28: Converted 'trinket.1.has_stat.any_dps' to 'trinket.t1.has_stat.any_dps' (1x).\nLine 29: Converted 'trinket.2.has_stat.any_dps' to 'trinket.t2.has_stat.any_dps' (1x).\n\nImported 8 action lists.\n",
["profile"] = "## https://github.com/simulationcraft/simc/blob/thewarwithin/ActionPriorityLists/rogue_outlaw.simc\n## Up to date with SimC: April 16 2025 - b23bf5e\n\nactions.precombat+=/apply_poison\nactions.precombat+=/use_item,name=imperfect_ascendancy_serum\nactions.precombat+=/stealth,precombat_seconds=2\n# Builds with Keep it Rolling+Loaded Dice prepull Adrenaline Rush before Roll the Bones to consume Loaded Dice immediately instead of on the next pandemic roll.\nactions.precombat+=/adrenaline_rush,precombat_seconds=2,if=talent.improved_adrenaline_rush&talent.keep_it_rolling&talent.loaded_dice&buff.adrenaline_rush.down\nactions.precombat+=/roll_the_bones,precombat_seconds=2,if=buff.adrenaline_rush.down\nactions.precombat+=/adrenaline_rush,precombat_seconds=1,if=talent.improved_adrenaline_rush&buff.adrenaline_rush.down\n\n# Restealth if possible (no vulnerable enemies in combat).\nactions+=/stealth\n# Interrupt on cooldown to allow simming interactions with that.\nactions+=/kick\nactions+=/variable,name=ambush_condition,value=(talent.hidden_opportunity||combo_points.deficit>=2+talent.improved_ambush+buff.broadside.up)&energy>=50\n# Use finishers if at -1 from max combo points, or -2 in Stealth with Crackshot. With the hero trees, Hidden Opportunity builds also finish at -2 if Audacity or Opportunity is active.\nactions+=/variable,name=finish_condition,value=combo_points>=cp_max_spend-1-(stealthed.all&talent.crackshot||(talent.hand_of_fate||talent.flawless_form)&talent.hidden_opportunity&(buff.audacity.up||buff.opportunity.up))\nactions+=/call_action_list,name=cds\n# High priority stealth list, will fall through if no conditions are met.\nactions+=/call_action_list,name=stealth,strict=1,if=stealthed.all\nactions+=/call_action_list,name=finish,strict=1,if=variable.finish_condition\nactions+=/call_action_list,name=build\nactions+=/arcane_torrent,if=energy.base_deficit>=15+energy.regen\nactions+=/arcane_pulse\nactions+=/lights_judgment\nactions+=/bag_of_tricks\n\n# Builders  With Deft Maneuvers, build CPs with Blade Flurry at 5+ targets, only at 2 CPs or lower (1 CP with Broadside) unless AR isn't active.\nactions.build+=/variable,name=deft_condition,value=cooldown.blade_flurry.ready&talent.deft_maneuvers&spell_targets>=5&(combo_points<=2-buff.broadside.up||!buff.adrenaline_rush.up)\n# High priority Ambush for Hidden Opportunity builds.\nactions.build+=/ambush,if=talent.hidden_opportunity&buff.audacity.up\n# Trickster builds should prioritize Sinister Strike during Disorienting Strikes. HO builds prefer to do this only at 3 Escalating Blade stacks and not at max Opportunity stacks.\nactions.build+=/sinister_strike,if=buff.disorienting_strikes.up&!stealthed.all&(buff.escalating_blade.stack>2&buff.opportunity.stack<buff.opportunity.max_stack||!talent.hidden_opportunity)&buff.escalating_blade.stack<4\n# With Audacity + Hidden Opportunity + Fan the Hammer, consume Opportunity to proc Audacity any time Ambush is not available.\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&talent.audacity&talent.hidden_opportunity&buff.opportunity.up&!buff.audacity.up\n# With Fatebound or 1 rank in Fan the Hammer, and without Hidden Opportunity, build CP with Blade Flurry as a higher priority than Opportunity procs.\nactions.build+=/blade_flurry,if=variable.deft_condition&(talent.fan_the_hammer.rank=1||!talent.nimble_flurry&!talent.surprising_strikes)\n# With 2 ranks in Fan the Hammer, consume Opportunity as if at max stacks or if it will expire.\nactions.build+=/pistol_shot,if=talent.fan_the_hammer.rank=2&buff.opportunity.up&(buff.opportunity.stack>=buff.opportunity.max_stack||buff.opportunity.remains<2)\n# With Fan the Hammer, consume Opportunity if it will not overcap CPs, or with 1 CP at minimum.\nactions.build+=/pistol_shot,if=talent.fan_the_hammer&buff.opportunity.up&(combo_points.deficit>=(1+(talent.quick_draw+buff.broadside.up)*(talent.fan_the_hammer.rank+1))||combo_points<=talent.ruthlessness)\n# If not using Fan the Hammer, then consume Opportunity based on energy, when it will exactly cap CPs, or when using Quick Draw.\nactions.build+=/pistol_shot,if=!talent.fan_the_hammer&buff.opportunity.up&(energy.base_deficit>energy.regen*1.5||combo_points.deficit<=1+buff.broadside.up||talent.quick_draw.enabled||talent.audacity.enabled&!buff.audacity.up)\n# With Hidden Opportunity or 2 ranks in Fan the Hammer, building CPs with Blade Flurry is lower priority than Opportunity procs and Ambush.\nactions.build+=/blade_flurry,if=variable.deft_condition\n# Use Coup de Grace at low CP if Sinister Strike would otherwise be used.\nactions.build+=/coup_de_grace,if=!stealthed.all\n# Fallback pooling just so Sinister Strike is never casted if Ambush is available for Hidden Opportunity builds.\nactions.build+=/pool_resource,for_next=1\nactions.build+=/ambush,if=talent.hidden_opportunity\nactions.build+=/sinister_strike\n\n# Cooldowns  Maintain Adrenaline Rush if it is not active. Use at low CPs with Improved AR.\nactions.cds+=/adrenaline_rush,if=!buff.adrenaline_rush.up&(!variable.finish_condition||!talent.improved_adrenaline_rush)\n# If using Improved AR, recast AR if it is already active at low CPs.\nactions.cds+=/adrenaline_rush,if=buff.adrenaline_rush.up&talent.improved_adrenaline_rush&combo_points<=2\n# High priority Ghostly Strike as it is off-gcd. 1 FTH builds prefer to not use it at max CPs.\nactions.cds+=/ghostly_strike,if=combo_points<cp_max_spend||talent.fan_the_hammer.rank>1\n# Sprint to further benefit from Scroll of Momentum trinket.\nactions.cds+=/sprint,if=(trinket.1.is.scroll_of_momentum||trinket.2.is.scroll_of_momentum)&buff.full_momentum.up\n# Maintain Blade Flurry on 2+ targets.\nactions.cds+=/blade_flurry,if=spell_targets>=2&buff.blade_flurry.remains<gcd\n# With a natural 5 buff roll, use Keep it Rolling when you obtain the remaining buff from Count the Odds.\nactions.cds+=/keep_it_rolling,if=rtb_buffs.normal>=5&rtb_buffs=6\n# Without a natural 5 buff roll, use Keep it Rolling at any 4+ buffs.\nactions.cds+=/keep_it_rolling,if=rtb_buffs>=4&rtb_buffs.normal<=2\n# Without a natural 5 buff roll, use Keep it Rolling at 3 buffs if you have the combination of Ruthless Precision + Broadside + True Bearing.\nactions.cds+=/keep_it_rolling,if=rtb_buffs>=3&rtb_buffs.normal<=2&buff.broadside.up&buff.ruthless_precision.up&buff.true_bearing.up\n# Variable that counts how many buffs are ahead of RtB's pandemic range, which is only possible by using KIR.\nactions.cds+=/variable,name=buffs_above_pandemic,value=(buff.broadside.remains>39)+(buff.ruthless_precision.remains>39)+(buff.true_bearing.remains>39)+(buff.grand_melee.remains>39)+(buff.buried_treasure.remains>39)+(buff.skull_and_crossbones.remains>39)\n# Maintain Roll the Bones: cast without any buffs.\nactions.cds+=/roll_the_bones,if=rtb_buffs=0\n# With TWW2 set, recast Roll the Bones if we will roll away between 0-1 buffs. If KIR was recently used on a natural 5 buff, then wait until all buffs are below around 41s remaining.\nactions.cds+=/roll_the_bones,if=set_bonus.tww2_4pc&rtb_buffs.will_lose<=1&(variable.buffs_above_pandemic<5||rtb_buffs.max_remains<42)\n# With TWW2 set, recast Roll the Bones with at most 2 buffs active regardless of duration. Supercharger builds will also roll if we will lose between 0-4 buffs, but KIR Supercharger builds wait until they are all below 11s remaining.\nactions.cds+=/roll_the_bones,if=set_bonus.tww2_4pc&(rtb_buffs<=2||(rtb_buffs.max_remains<11||!talent.keep_it_rolling)&rtb_buffs.will_lose<5&talent.supercharger)\n# Without TWW2 set or Sleight of Hand, recast Roll the Bones to override 1 buff into 2 buffs with Loaded Dice, or reroll any 2 buffs with Loaded Dice+Supercharger. Hidden Opportunity builds can also reroll 2 buffs with Loaded Dice to try for BS/RP/TB.\nactions.cds+=/roll_the_bones,if=!set_bonus.tww2_4pc&(rtb_buffs.will_lose<=buff.loaded_dice.up||talent.supercharger&buff.loaded_dice.up&rtb_buffs<=2||talent.hidden_opportunity&buff.loaded_dice.up&rtb_buffs<=2&!buff.broadside.up&!buff.ruthless_precision.up&!buff.true_bearing.up)\n# Trinkets that should not be used during stealth and have higher priority than entering stealth.\nactions.cds+=/use_item,name=imperfect_ascendancy_serum,if=!stealthed.all||boss&fight_remains<=22\nactions.cds+=/use_item,name=mad_queens_mandate,if=!stealthed.all||boss&fight_remains<=5\n# If necessary, standard builds prioritize using Vanish at any CP to prevent Adrenaline Rush downtime.\nactions.cds+=/vanish,if=talent.underhanded_upper_hand&talent.subterfuge&buff.adrenaline_rush.up&!stealthed.all&buff.adrenaline_rush.remains<2&cooldown.adrenaline_rush.remains>30\n# If not at risk of losing Adrenaline Rush, run finishers to use Killing Spree or Coup de Grace as a higher priority than Vanish.\nactions.cds+=/run_action_list,name=finish,if=!stealthed.all&(cooldown.killing_spree.ready&talent.killing_spree||buff.escalating_blade.stack>=4)&variable.finish_condition\n# If not at risk of losing Adrenaline Rush, call flexible Vanish rules to be used at finisher CPs.\nactions.cds+=/call_action_list,name=vanish_usage,if=!stealthed.all&talent.crackshot&talent.underhanded_upper_hand&talent.subterfuge&buff.adrenaline_rush.up&variable.finish_condition\nactions.cds+=/call_action_list,name=vanish_usage_off_meta,if=!stealthed.all&(!talent.underhanded_upper_hand||!talent.crackshot||!talent.subterfuge)\n# Generic catch-all for Shadowmeld. Technically, usage in DungeonSlice or DungeonRoute sims could mirror Vanish usage on packs.\nactions.cds+=/shadowmeld,if=variable.finish_condition&!cooldown.vanish.ready&!stealthed.all\n# Use Blade Rush at minimal energy outside of stealth.\nactions.cds+=/blade_rush,if=energy.base_time_to_max>4&!stealthed.all\nactions.cds+=/potion,if=buff.bloodlust.up||boss&fight_remains<30||buff.adrenaline_rush.up\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\n# Let the magnet trinket stack up just so it does not disrupt a 2nd on-use trinket.\nactions.cds+=/use_item,name=junkmaestros_mega_magnet,if=buff.between_the_eyes.up&buff.junkmaestros_mega_magnet.stack>25||boss&fight_remains<5\n# Default conditions for usable items.\nactions.cds+=/use_items,slots=trinket1,if=buff.between_the_eyes.up||trinket.1.has_stat.any_dps||boss&fight_remains<=20\nactions.cds+=/use_items,slots=trinket2,if=buff.between_the_eyes.up||trinket.2.has_stat.any_dps||boss&fight_remains<=20\n\n# Finishers\nactions.finish=pool_resource,for_next=1\nactions.finish+=/killing_spree\nactions.finish+=/coup_de_grace\n# Use Between the Eyes outside of Stealth to maintain the buff, or with Ruthless Precision active, or to proc Greenskins Wickers if not active. Trickster builds can also send BtE on cooldown.\nactions.finish+=/between_the_eyes,if=(buff.ruthless_precision.up||buff.between_the_eyes.remains<4||!talent.mean_streak)&(!buff.greenskins_wickers.up||!talent.greenskins_wickers)\nactions.finish+=/cold_blood\nactions.finish+=/dispatch\n\n# Stealth\nactions.stealth+=/cold_blood,if=variable.finish_condition\n# Ensure Crackshot BtE is not skipped because of low energy.\nactions.stealth+=/pool_resource,for_next=1\n# High priority Between the Eyes for Crackshot, except not directly out of Shadowmeld.\nactions.stealth+=/between_the_eyes,if=variable.finish_condition&talent.crackshot&(!buff.shadowmeld.up||stealthed.rogue)\nactions.stealth+=/dispatch,if=variable.finish_condition\n# 2 Fan the Hammer Crackshot builds can consume Opportunity in stealth with max stacks, Broadside, and 1 CP, or with Greenskins active.\nactions.stealth+=/pistol_shot,if=talent.crackshot&talent.fan_the_hammer.rank>=2&buff.opportunity.stack>=6&(buff.broadside.up&combo_points<=1||buff.greenskins_wickers.up)\nactions.stealth+=/ambush,if=talent.hidden_opportunity\n\n# Flex Vanish usage for standard builds.  Without Killing Spree, attempt to hold Vanish for when BtE is on cooldown and Ruthless Precision is active. Also with Keep it Rolling, hold Vanish if we haven't done the first roll after KIR yet.\nactions.vanish_usage+=/vanish,if=!talent.killing_spree&!cooldown.between_the_eyes.ready&buff.ruthless_precision.remains>4&(cooldown.keep_it_rolling.remains>150&rtb_buffs.normal>0||!talent.keep_it_rolling)\n# Supercharger builds that do not use Killing Spree should also Vanish if Supercharger becomes active.\nactions.vanish_usage+=/vanish,if=!talent.killing_spree&buff.supercharge_1.up\n# Builds with Killing Spree can freely Vanish if KS is not up soon.\nactions.vanish_usage+=/vanish,if=cooldown.killing_spree.remains>30\n# Vanish if about to cap on charges or sim duration is ending.\nactions.vanish_usage+=/vanish,if=cooldown.vanish.full_recharge_time<15||boss&fight_remains<8\n\n# Flex Vanish usage for builds lacking one of the mandatory stealth talents. APL support for these builds is considered limited.\nactions.vanish_usage_off_meta+=/vanish,if=talent.underhanded_upper_hand&talent.subterfuge&!talent.crackshot&buff.adrenaline_rush.up&(variable.ambush_condition||!talent.hidden_opportunity)&(!cooldown.between_the_eyes.ready&buff.ruthless_precision.up||buff.ruthless_precision.down||buff.adrenaline_rush.remains<3)\nactions.vanish_usage_off_meta+=/vanish,if=!talent.underhanded_upper_hand&talent.crackshot&variable.finish_condition\nactions.vanish_usage_off_meta+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&talent.hidden_opportunity&!buff.audacity.up&buff.opportunity.stack<buff.opportunity.max_stack&variable.ambush_condition\nactions.vanish_usage_off_meta+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&talent.fateful_ending&(!buff.fatebound_lucky_coin.up&(buff.fatebound_coin_tails.stack>=5||buff.fatebound_coin_heads.stack>=5)||buff.fatebound_lucky_coin.up&!cooldown.between_the_eyes.ready)\nactions.vanish_usage_off_meta+=/vanish,if=!talent.underhanded_upper_hand&!talent.crackshot&!talent.hidden_opportunity&!talent.fateful_ending&talent.take_em_by_surprise&!buff.take_em_by_surprise.up",
["basedOn"] = "Outlaw",
["spec"] = 260,
},
["Holy Priest"] = {
["builtIn"] = true,
["date"] = 20240828,
["spec"] = 257,
["desc"] = "Healer priorities are DPS-focused only\n\n2024-08-28: Use cooldowns action list\n\n2024-07-30: The War Within",
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\n# Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word\nactions+=/holy_fire,cycle_targets=1,if=(talent.empyreal_blaze||talent.harmonious_apparatus||!ticking||refreshable)&!(buff.empyreal_blaze.up&(cooldown.divine_word.up||buff.divine_word.up)&cooldown.holy_word_chastise.up)\n# Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.\nactions+=/shadow_word_pain,if=(refreshable||!ticking)&(target.time_to_die>=dot.shadow_word_pain.duration)&!buff.divine_favor_chastise.up&!buff.apotheosis.up\n# Prepare to enter divine favor: chastise\nactions+=/call_action_list,name=divine_favor_chastise_prep,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Enter Divine Favor rotation with divine favor: chastise buff up\nactions+=/run_action_list,name=divine_favor_chastise_active,strict=1,if=buff.divine_favor_chastise.up\n# Run divine favor fillers rotation with buff down\nactions+=/run_action_list,name=divine_favor_filler,if=talent.divine_word&talent.holy_word_chastise&buff.divine_favor_chastise.down\n# Run divine image rotation with divine image talented\nactions+=/run_action_list,name=divine_image,strict=1,if=talent.divine_image\n# Otherwise generic rotation\nactions+=/run_action_list,name=generic\n\nactions.divine_favor_chastise_prep+=/variable,name=empyreal_exec_time,op=set,value=0\n# apotheosis_exec_time: Store how long Apotheosis will take to execute\nactions.divine_favor_chastise_prep+=/variable,name=apotheosis_exec_time,op=setif,condition=talent.apotheosis,value=action.apotheosis.execute_time,value_else=0\n# Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).\nactions.divine_favor_chastise_prep+=/apotheosis,if=(cooldown.holy_word_chastise.remains>cooldown.divine_word.remains)&(cooldown.divine_word.remains<=(variable.empyreal_exec_time+variable.apotheosis_exec_time))\n# Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze\nactions.divine_favor_chastise_prep+=/divine_word,if=cooldown.holy_word_chastise.up&(!talent.empyreal_blaze||buff.empyreal_blaze.up)\n# Holy word chastise to trigger divine favor: chastise\nactions.divine_favor_chastise_prep+=/holy_word_chastise,if=!talent.empyreal_blaze&buff.divine_word.up||talent.empyreal_blaze&buff.empyreal_blaze.down\n\nactions.divine_favor_chastise_active+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_chastise_active+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_chastise_active+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_chastise_active+=/mindgames\nactions.divine_favor_chastise_active+=/shadow_word_death,if=target.health.pct<20\nactions.divine_favor_chastise_active+=/holy_word_chastise\n# We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage\nactions.divine_favor_chastise_active+=/smite,cycle_targets=1,if=spell_targets.holy_nova>=2\nactions.divine_favor_chastise_active+=/smite\n\nactions.divine_favor_filler+=/halo,if=spell_targets.halo>=2\nactions.divine_favor_filler+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_favor_filler+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_favor_filler+=/mindgames\nactions.divine_favor_filler+=/shadow_word_death,if=target.health.pct<20\n# We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word\nactions.divine_favor_filler+=/holy_word_chastise,if=(cooldown.apotheosis.remains<cooldown.divine_word.remains)||(cooldown.holy_word_chastise.duration_expected<=cooldown.divine_word.remains)\nactions.divine_favor_filler+=/smite\n\nactions.divine_image+=/apotheosis,if=buff.answered_prayers.down&!(cooldown.holy_word_sanctify.up||cooldown.holy_word_serenity.up||cooldown.holy_word_chastise.up)\n# line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting\nactions.divine_image+=/holy_word_sanctify,line_cd=9\nactions.divine_image+=/holy_word_serenity,line_cd=9\nactions.divine_image+=/holy_word_chastise\nactions.divine_image+=/halo,if=spell_targets.halo>=2\nactions.divine_image+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.divine_image+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.divine_image+=/mindgames\nactions.divine_image+=/shadow_word_death,if=target.health.pct<20\nactions.divine_image+=/smite\n\nactions.generic+=/holy_word_chastise\n# Hold Apotheosis if chastise will be up soon\nactions.generic+=/apotheosis,if=cooldown.holy_word_chastise.remains>(gcd.max*3)\nactions.generic+=/halo,if=spell_targets.halo>=2\nactions.generic+=/divine_star,if=spell_targets.divine_star>=2\n# There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do\nactions.generic+=/holy_nova,if=(spell_targets.holy_nova>=2&buff.rhapsody.stack>=18)||(spell_targets.holy_nova>=3&buff.rhapsody.stack>=9)||(spell_targets.holy_nova>=4&buff.rhapsody.stack>=4)||spell_targets.holy_nova>=5\nactions.generic+=/mindgames\nactions.generic+=/shadow_word_death,if=target.health.pct<20\nactions.generic+=/smite\n\nactions.cooldowns+=/shadowfiend\n# Sync PI with divine favor: chastise if we took divine word\nactions.cooldowns+=/power_infusion,if=(!talent.divine_word||(cooldown.divine_word.up&cooldown.holy_word_chastise.up))\n# Only potion in sync with power infusion\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# hold trinkets to use with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up",
["version"] = 20240828,
["warnings"] = "The import for 'cooldowns' required some automated changes.\nLine 2: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\n\nThe import for 'default' required some automated changes.\nLine 2: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 2: Converted 'talent.harmonious_apparatus' to 'talent.harmonious_apparatus.enabled' (1x).\nLine 4: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 4: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 6: Converted 'talent.divine_word' to 'talent.divine_word.enabled' (1x).\nLine 6: Converted 'talent.holy_word_chastise' to 'talent.holy_word_chastise.enabled' (1x).\nLine 7: Converted 'talent.divine_image' to 'talent.divine_image.enabled' (1x).\n\nThe import for 'divine_favor_chastise_prep' required some automated changes.\nLine 2: Converted 'talent.apotheosis' to 'talent.apotheosis.enabled' (1x).\nLine 4: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 5: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\nLine 5: Converted 'talent.empyreal_blaze' to 'talent.empyreal_blaze.enabled' (1x).\n\nImported 8 action lists.\n",
["author"] = "Kapulani",
["lists"] = {
["divine_favor_chastise_prep"] = {
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "empyreal_exec_time",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "apotheosis_exec_time: Store how long Apotheosis will take to execute",
["var_name"] = "apotheosis_exec_time",
["value"] = "action.apotheosis.execute_time",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.apotheosis.enabled",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.holy_word_chastise.remains > cooldown.divine_word.remains ) & ( cooldown.divine_word.remains <= ( variable.empyreal_exec_time + variable.apotheosis_exec_time ) )",
["action"] = "apotheosis",
["description"] = "Use apotheosis to get Chastise back if its on cooldown and Divine Word will be up soon. We can use Apotheosis (2min CD) to reset Chastise for every other Divine Word (1min CD).",
},
{
["enabled"] = true,
["criteria"] = "cooldown.holy_word_chastise.up & ( ! talent.empyreal_blaze.enabled || buff.empyreal_blaze.up )",
["action"] = "divine_word",
["description"] = "Divine Word only if we can sync with Chastise and (if talented) Empyreal Blaze",
},
{
["enabled"] = true,
["criteria"] = "! talent.empyreal_blaze.enabled & buff.divine_word.up || talent.empyreal_blaze.enabled & buff.empyreal_blaze.down",
["action"] = "holy_word_chastise",
["description"] = "Holy word chastise to trigger divine favor: chastise",
},
},
["divine_image"] = {
{
["enabled"] = true,
["criteria"] = "buff.answered_prayers.down & ! ( cooldown.holy_word_sanctify.up || cooldown.holy_word_serenity.up || cooldown.holy_word_chastise.up )",
["action"] = "apotheosis",
},
{
["enabled"] = true,
["description"] = "line_cd prevents re-casting sanctify and serenity right away, wasting GCDs that could be used to proc divine image damage. In testing, the sweet spot balance between adding more divine images, triggering apotheosis, and casting damage CDs was to let the image from each healing holy word expire before re-casting",
["action"] = "holy_word_sanctify",
["line_cd"] = "9",
},
{
["enabled"] = true,
["action"] = "holy_word_serenity",
["line_cd"] = "9",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["action"] = "holy_fire",
["cycle_targets"] = 1,
["description"] = "Always use HF if we have empyreal blaze (dot extension) or harmonious apparatus (cd reduction) or if it's not currently ticking. Otherwise, only use when refreshable to be sure we get the longest duration possible. It's worth it to cast even when the target will die soon based on just the initial hit damage. We also don't want to cast immediately once empyreal blaze is up when we are prepping divine word",
["criteria"] = "( talent.empyreal_blaze.enabled || talent.harmonious_apparatus.enabled || ! ticking || refreshable ) & ! ( buff.empyreal_blaze.up & ( cooldown.divine_word.up || buff.divine_word.up ) & cooldown.holy_word_chastise.up )",
},
{
["enabled"] = true,
["criteria"] = "( refreshable || ! ticking ) & ( target.time_to_die >= dot.shadow_word_pain.duration ) & ! buff.divine_favor_chastise.up & ! buff.apotheosis.up",
["action"] = "shadow_word_pain",
["description"] = "Don't cast SW:P during apotheosis or divine favor: chastise. We also don't cycle targets because it isn't worth the GCDs, since Smite deals slightly more damage than a full SW:P.",
},
{
["enabled"] = true,
["action"] = "call_action_list",
["description"] = "Prepare to enter divine favor: chastise",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_chastise_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Enter Divine Favor rotation with divine favor: chastise buff up",
["strict"] = 1,
["criteria"] = "buff.divine_favor_chastise.up",
["list_name"] = "divine_favor_chastise_active",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine favor fillers rotation with buff down",
["criteria"] = "talent.divine_word.enabled & talent.holy_word_chastise.enabled & buff.divine_favor_chastise.down",
["list_name"] = "divine_favor_filler",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Run divine image rotation with divine image talented",
["strict"] = 1,
["criteria"] = "talent.divine_image.enabled",
["list_name"] = "divine_image",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["description"] = "Otherwise generic rotation",
["list_name"] = "generic",
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["divine_favor_chastise_active"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["action"] = "smite",
["cycle_targets"] = 1,
["description"] = "We want to cycle smite to different targets to spread holy fire dots in AOE situations, this will buff holy nova's damage",
["criteria"] = "spell_targets.holy_nova >= 2",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["action"] = "mindbender",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "( ! talent.divine_word.enabled || ( cooldown.divine_word.up & cooldown.holy_word_chastise.up ) )",
["action"] = "power_infusion",
["description"] = "Sync PI with divine favor: chastise if we took divine word",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
["description"] = "Only potion in sync with power infusion",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up",
["action"] = "use_items",
["description"] = "hold trinkets to use with PI",
},
},
["generic"] = {
{
["action"] = "holy_word_chastise",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "cooldown.holy_word_chastise.remains > ( gcd.max * 3 )",
["action"] = "apotheosis",
["description"] = "Hold Apotheosis if chastise will be up soon",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["divine_favor_filler"] = {
{
["enabled"] = true,
["criteria"] = "spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( spell_targets.holy_nova >= 2 & buff.rhapsody.stack >= 18 ) || ( spell_targets.holy_nova >= 3 & buff.rhapsody.stack >= 9 ) || ( spell_targets.holy_nova >= 4 & buff.rhapsody.stack >= 4 ) || spell_targets.holy_nova >= 5",
["action"] = "holy_nova",
["description"] = "There are particular breakpoints combinations of rhapsody and spell targets beyond which holy nova beats everything else we can do",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( cooldown.apotheosis.remains < cooldown.divine_word.remains ) || ( cooldown.holy_word_chastise.duration_expected <= cooldown.divine_word.remains )",
["action"] = "holy_word_chastise",
["description"] = "We can use chastise for damage as long as we will have apotheosis available before the next divine word, otherwise only use it when it will be back up at the same time as divine word",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
},
},
["Discipline"] = {
["source"] = "https://github.com/simulationcraft/simc/",
["builtIn"] = true,
["date"] = 20250424,
["author"] = "SimC",
["desc"] = "Healer priorities are DPS-focused only\n\n2025-04-23: Remove PTW\n\n2024-07-30: The War Within",
["lists"] = {
["default"] = {
{
["enabled"] = true,
["action"] = "call_action_list",
["list_name"] = "cooldowns",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "! buff.twilight_equilibrium_holy_amp.up & ! buff.twilight_equilibrium_shadow_amp.up",
["var_name"] = "te_none",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_shadow_amp.up || variable.te_none",
["var_name"] = "te_shadow",
["description"] = "Twilight Equilibrium is buffing shadow damage",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "buff.twilight_equilibrium_holy_amp.up || variable.te_none",
["var_name"] = "te_holy",
["description"] = "Twilight Equilibrium is buffing holy damage",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "talent.shadow_covenant.enabled",
["var_name"] = "long_scov",
["description"] = "Long Shadow covenant is enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.up || buff.shadow_covenant.up",
["var_name"] = "can_enter_scov",
["description"] = "Ready to start shadow covenant phase",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "2",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mind_blast.execute_time",
["var_name"] = "shadow_spells_duration_max",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration_max",
["value"] = "action.mind_blast.execute_time",
["description"] = "penance",
["criteria"] = "talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.shadow_word_death.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.shadow_word_death.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.shadow_word_death.enabled & talent.death_and_madness.enabled & target.health.pct < 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.mindgames.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.mindgames.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.divine_star.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.divine_star.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["var_name"] = "shadow_spells_duration_max",
["criteria"] = "talent.halo.enabled",
},
{
["enabled"] = true,
["op"] = "floor",
["action"] = "variable",
["value"] = "( buff.shadow_covenant.duration - variable.shadow_spells_duration_max ) / gcd.max",
["var_name"] = "max_te_holy",
["description"] = "(scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "remaining_te_holy",
["description"] = "Counting variable, the number of non-fractional remaining holy casts available",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "variable.max_te_holy",
["var_name"] = "remaining_te_holy",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now",
["var_name"] = "expected_penance_reduction",
["value"] = "2",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.train_of_thought.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "0",
["var_name"] = "shadow_spells_duration",
["description"] = "Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "2",
["description"] = "Schism Penance",
["criteria"] = "cooldown.penance.up || ( ( cooldown.penance.remains - variable.expected_penance_reduction ) < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.mindgames.execute_time",
["description"] = "Mindgames",
["criteria"] = "cooldown.mindgames.up || ( cooldown.mindgames.remains_expected < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "We always get the first SW:D",
["criteria"] = "cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Second SW:D only when talented and target health in execute range",
["criteria"] = "( cooldown.shadow_word_death.up || ( cooldown.shadow_word_death.remains < buff.shadow_covenant.remains ) ) & ( target.health.pct < 20 || target.time_to_pct_20 < cooldown.shadow_word_death.remains ) & talent.death_and_madness.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.mind_blast.charges * action.mind_blast.execute_time",
["description"] = "Add any whole charges of mind blast",
["criteria"] = "action.mind_blast.charges >= 1",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.mind_blast.execute_time",
["description"] = "Add any fractional charges of mindblast that will recharge in time",
["criteria"] = "( ( action.mind_blast.charges_fractional >= 1 & action.mind_blast.charges_fractional < 2 ) & ( ( ( 1 - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) ) || ( ( action.mind_blast.charges_fractional < 1 ) & ( ( ( 1 - action.mind_blast.charges_fractional ) * action.mind_blast.recharge_time ) < buff.shadow_covenant.remains ) )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.divine_star.execute_time",
["description"] = "Divine Star",
["criteria"] = "cooldown.divine_star.up || ( cooldown.divine_star.remains < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "shadow_spells_duration",
["value"] = "action.halo.execute_time",
["description"] = "Halo",
["criteria"] = "cooldown.halo.up || ( cooldown.halo.remains < buff.shadow_covenant.remains )",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.",
["var_name"] = "should_te",
["value"] = "( buff.shadow_covenant.remains - variable.shadow_spells_duration ) > action.smite.execute_time",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "talent.twilight_equilibrium.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadowfiend.remains + action.shadowfiend.execute_time",
["var_name"] = "next_penance_time",
["description"] = "First casts should always be HD prep->covenant->schism->HD dark reprimand",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_penance_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "( cooldown.penance.duration - variable.expected_penance_reduction ) < variable.next_penance_time",
["var_name"] = "can_penance",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_swd_time",
["description"] = "Shadow Word: Death  SW:D is better than other spells if we are in execute phase.",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.mindgames.execute_time",
["description"] = "indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio",
["criteria"] = "( ( talent.mindgames.enabled & talent.shattered_perceptions.enabled ) || ( talent.mindgames.enabled & ! talent.expiation.enabled ) ) & target.health.pct >= 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Mind blast is better than SW:D if we aren't in execute",
["criteria"] = "target.health.pct >= 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Second mindblast when talented",
["criteria"] = "target.health.pct >= 20 & talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_swd_time",
["value"] = "action.divine_star.execute_time",
["description"] = "Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation",
["criteria"] = "talent.divine_star.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["value"] = "action.halo.execute_time",
["var_name"] = "next_swd_time",
["criteria"] = "talent.halo.enabled & target.health.pct >= 20 & ! talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.shadow_word_death.duration_expected < variable.next_swd_time",
["var_name"] = "can_swd",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_mind_blast_time",
["description"] = "Mindblast  Mindblast is better than other spells if we aren't in execute phase",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add SW:D if we're in execute phase",
["criteria"] = "target.health.pct < 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add a second SW:D if we have death and madness",
["criteria"] = "talent.death_and_madness.enabled & target.health.pct < 20",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mind_blast_time",
["value"] = "action.mindgames.execute_time",
["description"] = "Add mindgames if we have it talented and don't have expiation",
["criteria"] = "talent.mindgames.enabled & ! talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "setif",
["description"] = "TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.",
["var_name"] = "can_mind_blast",
["value"] = "( ( action.mind_blast.max_charges - ( action.mind_blast.charges_fractional - 1 ) ) * action.mind_blast.recharge_time ) < variable.next_mind_blast_time",
["action"] = "variable",
["value_else"] = "0",
["criteria"] = "action.mind_blast.charges_fractional >= 1",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_mindgames_time",
["description"] = "Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation",
["criteria"] = "target.health.pct < 20 || ( talent.expiation.enabled & ! talent.shattered_perceptions.enabled )",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add a second SW:D if we have death and madness",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Mind blast is better than mindgames if we have expiation",
["criteria"] = "talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_mindgames_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Second mindblast when talented",
["criteria"] = "talent.expiation.enabled & talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.mindgames.duration_expected < variable.next_mindgames_time",
["var_name"] = "can_mindgames",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "variable.next_penance_time + 2",
["var_name"] = "next_divine_star_time",
["description"] = "Divine Star",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "gcd.max",
["description"] = "If we have enough scov duration, add a holy cast to proc twilight equilibrium",
["criteria"] = "variable.remaining_te_holy > 0",
},
{
["enabled"] = true,
["op"] = "sub",
["action"] = "variable",
["value"] = "1",
["var_name"] = "remaining_te_holy",
["description"] = "Reduce our counting variable",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "SW:D is better unless outside of execute phase when expiation is untalented",
["criteria"] = "target.health.pct < 20 || talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.shadow_word_death.execute_time",
["description"] = "Add a second SW:D if we have death and madness",
["criteria"] = "target.health.pct < 20 & talent.death_and_madness.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Mind blast is always better",
["criteria"] = "talent.expiation.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.mind_blast.execute_time",
["description"] = "Second mindblast when talented",
["criteria"] = "talent.dark_indulgence.enabled",
},
{
["enabled"] = true,
["op"] = "add",
["action"] = "variable",
["var_name"] = "next_divine_star_time",
["value"] = "action.mindgames.execute_time",
["description"] = "Mindgames is always better",
["criteria"] = "talent.mindgames.enabled",
},
{
["enabled"] = true,
["op"] = "set",
["action"] = "variable",
["value"] = "cooldown.divine_star.duration < variable.next_divine_star_time",
["var_name"] = "can_divine_star",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "talent.shadow_covenant.enabled & cooldown.mindbender.up",
["list_name"] = "scov_prep",
},
{
["enabled"] = true,
["action"] = "run_action_list",
["criteria"] = "variable.long_scov & variable.can_enter_scov",
["list_name"] = "long_scov",
},
{
["enabled"] = true,
["criteria"] = "( target.time_to_die > ( 0.3 * dot.shadow_word_pain.duration ) ) & ( ! ticking || ( refreshable & ( ! talent.painful_punishment.enabled || ( talent.painful_punishment.enabled & ( dot.shadow_word_pain.remains < ( cooldown.penance.remains - variable.expected_penance_reduction ) ) ) ) ) )",
["action"] = "shadow_word_pain",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & target.health.pct < 20",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.dark_indulgence.enabled & buff.power_of_the_dark_side.down & cooldown.penance.remains < gcd.max",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_penance )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || variable.can_mind_blast",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & talent.expiation.enabled & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_mindgames ) & ! talent.shattered_perceptions.enabled",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_divine_star )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! talent.shadow_covenant.enabled || variable.can_swd ) & ( target.time_to_pct_20 > ( 0.5 * cooldown.shadow_word_death.duration ) )",
["action"] = "shadow_word_death",
},
{
["action"] = "smite",
["enabled"] = true,
},
},
["precombat"] = {
{
["action"] = "power_word_fortitude",
["enabled"] = true,
},
},
["cooldowns"] = {
{
["enabled"] = true,
["criteria"] = "! buff.shadow_covenant.up",
["action"] = "shadowfiend",
["description"] = "Don't use pets during shadow covenant windows, wasting GCDs -- is this even possible anymore?",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_covenant.up",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "! buff.shadow_covenant.up",
["action"] = "voidwraith",
},
{
["enabled"] = true,
["criteria"] = "! talent.shadow_covenant.enabled || ( talent.shadow_covenant.enabled & ( cooldown.shadowfiend.up || buff.shadow_covenant.up ) )",
["action"] = "power_infusion",
["description"] = "hold PI to use with shadow covenant if we have it",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up",
["action"] = "potion",
["description"] = "sync potion with PI",
},
{
["enabled"] = true,
["criteria"] = "buff.power_infusion.up || cooldown.power_infusion.remains >= action_cooldown",
["action"] = "use_items",
["description"] = "sync trinkets with PI",
},
},
["scov_prep"] = {
{
["enabled"] = true,
["criteria"] = "cooldown.shadowfiend.remains < cast_time",
["action"] = "power_word_radiance",
["description"] = "Prepare to enter shadow covenant",
},
},
["long_scov"] = {
{
["enabled"] = true,
["description"] = "Long Shadow Covenant",
["action"] = "mindbender",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 3",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 3",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "penance",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.halo >= 2",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & spell_targets.divine_star >= 2",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "target.health.pct < 20 & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "talent.shattered_perceptions.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "talent.expiation.enabled & ( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mindgames",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "mind_blast",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "halo",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) )",
["action"] = "divine_star",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_shadow ) ) & ( target.time_to_pct_20 > buff.shadow_covenant.remains )",
["action"] = "shadow_word_death",
},
{
["enabled"] = true,
["criteria"] = "( ! variable.should_te || ( variable.should_te & variable.te_holy ) )",
["action"] = "smite",
},
{
["enabled"] = true,
["description"] = "just in case we run out of shadow spells with the above conditions",
["action"] = "penance",
},
{
["action"] = "mindgames",
["enabled"] = true,
},
{
["action"] = "mind_blast",
["enabled"] = true,
},
{
["action"] = "shadow_word_death",
["enabled"] = true,
},
{
["action"] = "divine_star",
["enabled"] = true,
},
{
["action"] = "halo",
["enabled"] = true,
},
{
["action"] = "smite",
["enabled"] = true,
},
},
},
["version"] = 20250424,
["warnings"] = "The import for 'default' required some automated changes.\nLine 16: Converted operations in '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max' to '(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)/gcd.max'.\n\nImported 5 action lists.\n",
["profile"] = "actions.precombat+=/power_word_fortitude\n\nactions+=/call_action_list,name=cooldowns\nactions+=/variable,name=te_none,op=set,value=!buff.twilight_equilibrium_holy_amp.up&!buff.twilight_equilibrium_shadow_amp.up\n# Twilight Equilibrium is buffing shadow damage\nactions+=/variable,name=te_shadow,op=set,value=buff.twilight_equilibrium_shadow_amp.up||variable.te_none\n# Twilight Equilibrium is buffing holy damage\nactions+=/variable,name=te_holy,op=set,value=buff.twilight_equilibrium_holy_amp.up||variable.te_none\n# Long Shadow covenant is enabled\nactions+=/variable,name=long_scov,op=set,value=talent.shadow_covenant\n# Ready to start shadow covenant phase\nactions+=/variable,name=can_enter_scov,op=set,value=cooldown.shadowfiend.up||buff.shadow_covenant.up\nactions+=/variable,name=shadow_spells_duration_max,op=set,value=0\n## actions+=/variable,name=shadow_spells_duration_max,op=add,value=action.schism.execute_time,if=talent.schism\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=2\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time\n# penance\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.shadow_word_death.execute_time,if=talent.shadow_word_death&talent.death_and_madness&target.health.pct<20\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.divine_star.execute_time,if=talent.divine_star\nactions+=/variable,name=shadow_spells_duration_max,op=add,value=action.halo.execute_time,if=talent.halo\n# (scov duration - shadow spells duration) / GCD time = estimate of holy spells we should need to use during the next scov window  Long scov example: (15 - 12) / 1.5 = 2 GCDs to spend on holy spells  Short scov example: (7 - 12) / 1.5 = -3.3 GCDs to spend on holy spells (none)\nactions+=/variable,name=max_te_holy,op=floor,value=(buff.shadow_covenant.duration-variable.shadow_spells_duration_max)%gcd.max\n# Counting variable, the number of non-fractional remaining holy casts available\nactions+=/variable,name=remaining_te_holy,op=set,value=0\nactions+=/variable,name=remaining_te_holy,op=add,value=variable.max_te_holy\n# TODO: duration_expected is buggy on penance/dark reprimand, using a static reduction as a stand-in for now\nactions+=/variable,name=expected_penance_reduction,op=setif,condition=talent.train_of_thought,value=2,value_else=0\n# Calculate how much cast time worth of shadow spells we have currently available. We use shadow_spells_duration to determine if we have time to weave in any holy spells to proc twilight equilibrium.\nactions+=/variable,name=shadow_spells_duration,op=set,value=0\n# Schism\n## actions+=/variable,name=shadow_spells_duration,op=add,value=action.schism.execute_time,if=cooldown.schism.up||(cooldown.schism.remains<buff.shadow_covenant.remains)\n# Penance\nactions+=/variable,name=shadow_spells_duration,op=add,value=2,if=cooldown.penance.up||((cooldown.penance.remains-variable.expected_penance_reduction)<buff.shadow_covenant.remains)\n# Mindgames\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mindgames.execute_time,if=cooldown.mindgames.up||(cooldown.mindgames.remains_expected<buff.shadow_covenant.remains)\n# We always get the first SW:D\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains)\n# Second SW:D only when talented and target health in execute range\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.shadow_word_death.execute_time,if=(cooldown.shadow_word_death.up||(cooldown.shadow_word_death.remains<buff.shadow_covenant.remains))&(target.health.pct<20||target.time_to_pct_20<cooldown.shadow_word_death.remains)&talent.death_and_madness\n# Add any whole charges of mind blast\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.charges*action.mind_blast.execute_time,if=action.mind_blast.charges>=1\n# Add any fractional charges of mindblast that will recharge in time\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.mind_blast.execute_time,if=((action.mind_blast.charges_fractional>=1&action.mind_blast.charges_fractional<2)&(((1-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))||((action.mind_blast.charges_fractional<1)&(((1-action.mind_blast.charges_fractional)*action.mind_blast.recharge_time)<buff.shadow_covenant.remains))\n# Divine Star\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.divine_star.execute_time,if=cooldown.divine_star.up||(cooldown.divine_star.remains<buff.shadow_covenant.remains)\n# Halo\nactions+=/variable,name=shadow_spells_duration,op=add,value=action.halo.execute_time,if=cooldown.halo.up||(cooldown.halo.remains<buff.shadow_covenant.remains)\n# Determine if we have enough scov time remaining to weave in a twilight equilibrium activation. If we don't have TE talented, always false. Using smite's execution time to represent a worst-case scenario.\nactions+=/variable,name=should_te,op=setif,condition=talent.twilight_equilibrium,value=(buff.shadow_covenant.remains-variable.shadow_spells_duration)>action.smite.execute_time,value_else=0\n\n# First casts should always be HD prep->covenant->schism->HD dark reprimand\nactions+=/variable,name=next_penance_time,op=set,value=cooldown.shadowfiend.remains+action.shadowfiend.execute_time\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_penance_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\nactions+=/variable,name=can_penance,op=set,value=(cooldown.penance.duration-variable.expected_penance_reduction)<variable.next_penance_time\n# Shadow Word: Death  SW:D is better than other spells if we are in execute phase.\nactions+=/variable,name=next_swd_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_swd_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# indgame  ette ha W:   ren'  xecut has n  av hattere erception  on' av xpiatio\nactions+=/variable,name=next_swd_time,op=add,value=action.mindgames.execute_time,if=((talent.mindgames&talent.shattered_perceptions)||(talent.mindgames&!talent.expiation))&target.health.pct>=20\n# Mind blast is better than SW:D if we aren't in execute\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20\n# Second mindblast when talented\nactions+=/variable,name=next_swd_time,op=add,value=action.mind_blast.execute_time,if=target.health.pct>=20&talent.dark_indulgence\n# Divine Star and halo are better than SW:D if we aren't in execute and don't have expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.divine_star.execute_time,if=talent.divine_star&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=next_swd_time,op=add,value=action.halo.execute_time,if=talent.halo&target.health.pct>=20&!talent.expiation\nactions+=/variable,name=can_swd,op=set,value=cooldown.shadow_word_death.duration_expected<variable.next_swd_time\n# Mindblast  Mindblast is better than other spells if we aren't in execute phase\nactions+=/variable,name=next_mind_blast_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mind_blast_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# Add SW:D if we're in execute phase\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.shadow_word_death.execute_time,if=talent.death_and_madness&target.health.pct<20\n# Add mindgames if we have it talented and don't have expiation\nactions+=/variable,name=next_mind_blast_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames&!talent.expiation\n# TODO: This is a little bit simplistic, requiring both charges of mindblast to be available at the moment the first charge needs to be used. Slight optimization should be possible.\nactions+=/variable,name=can_mind_blast,op=setif,condition=action.mind_blast.charges_fractional>=1,value=((action.mind_blast.max_charges-(action.mind_blast.charges_fractional-1))*action.mind_blast.recharge_time)<variable.next_mind_blast_time,value_else=0\n# Mindgames  Mindgames is a better option than other spells if we aren't in execute and don't have expiation\nactions+=/variable,name=next_mindgames_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_mindgames_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better than mindgames in execute phase, or outside of execute phase if we don't have shattered perceptions but do have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||(talent.expiation&!talent.shattered_perceptions)\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_mindgames_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is better than mindgames if we have expiation\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_mindgames_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation&talent.dark_indulgence\nactions+=/variable,name=can_mindgames,op=set,value=cooldown.mindgames.duration_expected<variable.next_mindgames_time\n# Divine Star\nactions+=/variable,name=next_divine_star_time,op=set,value=variable.next_penance_time+2\n# If we have enough scov duration, add a holy cast to proc twilight equilibrium\nactions+=/variable,name=next_divine_star_time,op=add,value=gcd.max,if=variable.remaining_te_holy>0\n# Reduce our counting variable\nactions+=/variable,name=remaining_te_holy,op=sub,value=1\n# SW:D is better unless outside of execute phase when expiation is untalented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20||talent.expiation\n# Add a second SW:D if we have death and madness\nactions+=/variable,name=next_divine_star_time,op=add,value=action.shadow_word_death.execute_time,if=target.health.pct<20&talent.death_and_madness\n# Mind blast is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.expiation\n# Second mindblast when talented\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mind_blast.execute_time,if=talent.dark_indulgence\n# Mindgames is always better\nactions+=/variable,name=next_divine_star_time,op=add,value=action.mindgames.execute_time,if=talent.mindgames\nactions+=/variable,name=can_divine_star,op=set,value=cooldown.divine_star.duration<variable.next_divine_star_time\nactions+=/run_action_list,name=scov_prep,if=talent.shadow_covenant&cooldown.mindbender.up\n## actions+=/run_action_list,name=short_scov,if=variable.short_scov&variable.can_enter_scov\nactions+=/run_action_list,name=long_scov,if=variable.long_scov&variable.can_enter_scov\nactions+=/shadow_word_pain,if=(target.time_to_die>(0.3*dot.shadow_word_pain.duration))&(!ticking||(refreshable&(!talent.painful_punishment||(talent.painful_punishment&(dot.shadow_word_pain.remains<(cooldown.penance.remains-variable.expected_penance_reduction))))))\n## actions+=/schism,if=!talent.shadow_covenant\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&target.health.pct<20\nactions+=/mind_blast,if=talent.dark_indulgence&buff.power_of_the_dark_side.down&cooldown.penance.remains<gcd.max\nactions+=/penance,if=(!talent.shadow_covenant||variable.can_penance)\n## # For DPS, Lights wrath should always be used outside of scov when you take wrath unleashed to maximize the number of smites it buffs. In a real raid setting, you may want to cast it at the beginning of a scov cycle for additional healing.\n## actions+=/lights_wrath,if=talent.wrath_unleashed\nactions+=/mind_blast,if=!talent.shadow_covenant||variable.can_mind_blast\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&talent.shattered_perceptions\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&talent.expiation&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/mindgames,if=(!talent.shadow_covenant||variable.can_mindgames)&!talent.shattered_perceptions\nactions+=/halo,if=!talent.shadow_covenant\nactions+=/divine_star,if=(!talent.shadow_covenant||variable.can_divine_star)\n## actions+=/power_word_solace\nactions+=/shadow_word_death,if=(!talent.shadow_covenant||variable.can_swd)&(target.time_to_pct_20>(0.5*cooldown.shadow_word_death.duration))\nactions+=/smite\n\n# Prepare to enter shadow covenant\nactions.scov_prep+=/power_word_radiance,if=cooldown.shadowfiend.remains<cast_time\n\n# Long Shadow Covenant\nactions.long_scov+=/mindbender\n## actions.long_scov+=/schism\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=3\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=3\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/penance,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.halo>=2\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&spell_targets.divine_star>=2\nactions.long_scov+=/shadow_word_death,if=target.health.pct<20&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mindgames,if=talent.shattered_perceptions&(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=talent.expiation&(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\nactions.long_scov+=/mindgames,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/mind_blast,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/halo,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/divine_star,if=(!variable.should_te||(variable.should_te&variable.te_shadow))\nactions.long_scov+=/shadow_word_death,if=(!variable.should_te||(variable.should_te&variable.te_shadow))&(target.time_to_pct_20>buff.shadow_covenant.remains)\n## actions.long_scov+=/lights_wrath,if=(!variable.should_te||(variable.should_te&variable.te_holy))\nactions.long_scov+=/smite,if=(!variable.should_te||(variable.should_te&variable.te_holy))\n# just in case we run out of shadow spells with the above conditions\nactions.long_scov+=/penance\nactions.long_scov+=/mindgames\nactions.long_scov+=/mind_blast\nactions.long_scov+=/shadow_word_death\nactions.long_scov+=/divine_star\nactions.long_scov+=/halo\nactions.long_scov+=/smite\n\n## Cooldowns\n# Don't use pets during shadow covenant windows, wasting GCDs -- is this even possible anymore?\nactions.cooldowns+=/shadowfiend,if=!buff.shadow_covenant.up\nactions.cooldowns+=/mindbender,if=!buff.shadow_covenant.up\nactions.cooldowns+=/voidwraith,if=!buff.shadow_covenant.up\n# hold PI to use with shadow covenant if we have it\nactions.cooldowns+=/power_infusion,if=!talent.shadow_covenant.enabled||(talent.shadow_covenant.enabled&(cooldown.shadowfiend.up||buff.shadow_covenant.up))\n# sync potion with PI\nactions.cooldowns+=/potion,if=buff.power_infusion.up\n# sync trinkets with PI\nactions.cooldowns+=/use_items,if=buff.power_infusion.up||cooldown.power_infusion.remains>=cooldown",
["spec"] = 256,
},
},
},
},
}
